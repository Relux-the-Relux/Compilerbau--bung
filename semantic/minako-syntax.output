Grammar

    0 $accept: start $end

    1 start: program

    2 program: /* empty */
    3        | program declassignment ';'
    4        | program functiondefinition

    5 $@1: /* empty */

    6 $@2: /* empty */

    7 functiondefinition: type ID $@1 '(' opt_parameterlist $@2 ')' '{' statementlist '}'

    8 opt_parameterlist: /* empty */
    9                  | parameterlist

   10 parameterlist: parameter
   11              | parameter ',' parameterlist

   12 parameter: type ID

   13 functioncall: ID '(' opt_argumentlist ')'

   14 opt_argumentlist: /* empty */
   15                 | argumentlist

   16 argumentlist: assignment
   17             | argumentlist ',' assignment

   18 statementlist: /* empty */
   19              | statementlist statement

   20 $@3: /* empty */

   21 block: '{' $@3 statementlist '}'

   22 statement: ifstatement
   23          | forstatement
   24          | whilestatement
   25          | returnstatement ';'
   26          | dowhilestatement ';'
   27          | printf ';'
   28          | declassignment ';'
   29          | statassignment ';'
   30          | functioncall ';'
   31          | block

   32 $@4: /* empty */

   33 $@5: /* empty */

   34 ifstatement: KW_IF '(' assignment ')' $@4 statement $@5 opt_else

   35 opt_else: /* empty */

   36 $@6: /* empty */

   37 opt_else: KW_ELSE $@6 statement

   38 $@7: /* empty */

   39 $@8: /* empty */

   40 forstatement: KW_FOR '(' $@7 declassignment ';' expr $@8 ';' statassignment ')' statement

   41 $@9: /* empty */

   42 $@10: /* empty */

   43 forstatement: KW_FOR '(' $@9 statassignment ';' expr $@10 ';' statassignment ')' statement

   44 $@11: /* empty */

   45 $@12: /* empty */

   46 dowhilestatement: KW_DO $@11 statement KW_WHILE '(' assignment $@12 ')'

   47 $@13: /* empty */

   48 $@14: /* empty */

   49 whilestatement: KW_WHILE '(' assignment $@13 ')' $@14 statement

   50 returnstatement: KW_RETURN
   51                | KW_RETURN assignment

   52 printf: KW_PRINTF '(' assignment ')'
   53       | KW_PRINTF '(' CONST_STRING ')'
   54       | KW_PRINTF '(' ')'

   55 declassignment: type ID
   56               | type ID '=' assignment

   57 type: KW_BOOLEAN
   58     | KW_FLOAT
   59     | KW_INT
   60     | KW_VOID

   61 statassignment: ID '=' assignment

   62 assignment: ID '=' assignment
   63           | expr

   64 expr: simpexpr
   65     | simpexpr EQ simpexpr
   66     | simpexpr NEQ simpexpr
   67     | simpexpr LEQ simpexpr
   68     | simpexpr GEQ simpexpr
   69     | simpexpr LSS simpexpr
   70     | simpexpr GRT simpexpr

   71 simpexpr: simpexpr '+' simpexpr
   72         | simpexpr '-' simpexpr
   73         | simpexpr OR simpexpr
   74         | simpexpr '*' simpexpr
   75         | simpexpr '/' simpexpr
   76         | simpexpr AND simpexpr
   77         | '-' simpexpr
   78         | CONST_INT
   79         | CONST_FLOAT
   80         | CONST_BOOLEAN
   81         | functioncall
   82         | ID
   83         | '(' assignment ')'


Terminals, with rules where they appear

$end (0) 0
'(' (40) 7 13 34 40 43 46 49 52 53 54 83
')' (41) 7 13 34 40 43 46 49 52 53 54 83
'*' (42) 74
'+' (43) 71
',' (44) 11 17
'-' (45) 72 77
'/' (47) 75
';' (59) 3 25 26 27 28 29 30 40 43
'=' (61) 56 61 62
'{' (123) 7 21
'}' (125) 7 21
error (256)
AND (258) 76
OR (259) 73
EQ (260) 65
NEQ (261) 66
LEQ (262) 67
GEQ (263) 68
LSS (264) 69
GRT (265) 70
KW_BOOLEAN (266) 57
KW_DO (267) 46
KW_ELSE (268) 37
KW_FLOAT (269) 58
KW_FOR (270) 40 43
KW_IF (271) 34
KW_INT (272) 59
KW_PRINTF (273) 52 53 54
KW_RETURN (274) 50 51
KW_VOID (275) 60
KW_WHILE (276) 46 49
CONST_INT (277) 78
CONST_FLOAT (278) 79
CONST_BOOLEAN (279) 80
CONST_STRING (280) 53
ID (281) 7 12 13 55 56 61 62 82
UMINUS (282)
LOWER_THAN_ELSE (283)


Nonterminals, with rules where they appear

$accept (40)
    on left: 0
start (41)
    on left: 1, on right: 0
program (42)
    on left: 2 3 4, on right: 1 3 4
functiondefinition (43)
    on left: 7, on right: 4
$@1 (44)
    on left: 5, on right: 7
$@2 (45)
    on left: 6, on right: 7
opt_parameterlist (46)
    on left: 8 9, on right: 7
parameterlist (47)
    on left: 10 11, on right: 9 11
parameter (48)
    on left: 12, on right: 10 11
functioncall (49)
    on left: 13, on right: 30 81
opt_argumentlist (50)
    on left: 14 15, on right: 13
argumentlist (51)
    on left: 16 17, on right: 15 17
statementlist (52)
    on left: 18 19, on right: 7 19 21
block (53)
    on left: 21, on right: 31
$@3 (54)
    on left: 20, on right: 21
statement (55)
    on left: 22 23 24 25 26 27 28 29 30 31, on right: 19 34 37 40 43
    46 49
ifstatement (56)
    on left: 34, on right: 22
$@4 (57)
    on left: 32, on right: 34
$@5 (58)
    on left: 33, on right: 34
opt_else (59)
    on left: 35 37, on right: 34
$@6 (60)
    on left: 36, on right: 37
forstatement (61)
    on left: 40 43, on right: 23
$@7 (62)
    on left: 38, on right: 40
$@8 (63)
    on left: 39, on right: 40
$@9 (64)
    on left: 41, on right: 43
$@10 (65)
    on left: 42, on right: 43
dowhilestatement (66)
    on left: 46, on right: 26
$@11 (67)
    on left: 44, on right: 46
$@12 (68)
    on left: 45, on right: 46
whilestatement (69)
    on left: 49, on right: 24
$@13 (70)
    on left: 47, on right: 49
$@14 (71)
    on left: 48, on right: 49
returnstatement (72)
    on left: 50 51, on right: 25
printf (73)
    on left: 52 53 54, on right: 27
declassignment (74)
    on left: 55 56, on right: 3 28 40
type (75)
    on left: 57 58 59 60, on right: 7 12 55 56
statassignment (76)
    on left: 61, on right: 29 40 43
assignment (77)
    on left: 62 63, on right: 16 17 34 46 49 51 52 56 61 62 83
expr (78)
    on left: 64 65 66 67 68 69 70, on right: 40 43 63
simpexpr (79)
    on left: 71 72 73 74 75 76 77 78 79 80 81 82 83, on right: 64 65
    66 67 68 69 70 71 72 73 74 75 76 77


State 0

    0 $accept: . start $end

    $default  reduce using rule 2 (program)

    start    go to state 1
    program  go to state 2


State 1

    0 $accept: start . $end

    $end  shift, and go to state 3


State 2

    1 start: program .
    3 program: program . declassignment ';'
    4        | program . functiondefinition

    KW_BOOLEAN  shift, and go to state 4
    KW_FLOAT    shift, and go to state 5
    KW_INT      shift, and go to state 6
    KW_VOID     shift, and go to state 7

    $default  reduce using rule 1 (start)

    functiondefinition  go to state 8
    declassignment      go to state 9
    type                go to state 10


State 3

    0 $accept: start $end .

    $default  accept


State 4

   57 type: KW_BOOLEAN .

    $default  reduce using rule 57 (type)


State 5

   58 type: KW_FLOAT .

    $default  reduce using rule 58 (type)


State 6

   59 type: KW_INT .

    $default  reduce using rule 59 (type)


State 7

   60 type: KW_VOID .

    $default  reduce using rule 60 (type)


State 8

    4 program: program functiondefinition .

    $default  reduce using rule 4 (program)


State 9

    3 program: program declassignment . ';'

    ';'  shift, and go to state 11


State 10

    7 functiondefinition: type . ID $@1 '(' opt_parameterlist $@2 ')' '{' statementlist '}'
   55 declassignment: type . ID
   56               | type . ID '=' assignment

    ID  shift, and go to state 12


State 11

    3 program: program declassignment ';' .

    $default  reduce using rule 3 (program)


State 12

    7 functiondefinition: type ID . $@1 '(' opt_parameterlist $@2 ')' '{' statementlist '}'
   55 declassignment: type ID .
   56               | type ID . '=' assignment

    '='  shift, and go to state 13

    ';'       reduce using rule 55 (declassignment)
    $default  reduce using rule 5 ($@1)

    $@1  go to state 14


State 13

   56 declassignment: type ID '=' . assignment

    CONST_INT      shift, and go to state 15
    CONST_FLOAT    shift, and go to state 16
    CONST_BOOLEAN  shift, and go to state 17
    ID             shift, and go to state 18
    '-'            shift, and go to state 19
    '('            shift, and go to state 20

    functioncall  go to state 21
    assignment    go to state 22
    expr          go to state 23
    simpexpr      go to state 24


State 14

    7 functiondefinition: type ID $@1 . '(' opt_parameterlist $@2 ')' '{' statementlist '}'

    '('  shift, and go to state 25


State 15

   78 simpexpr: CONST_INT .

    $default  reduce using rule 78 (simpexpr)


State 16

   79 simpexpr: CONST_FLOAT .

    $default  reduce using rule 79 (simpexpr)


State 17

   80 simpexpr: CONST_BOOLEAN .

    $default  reduce using rule 80 (simpexpr)


State 18

   13 functioncall: ID . '(' opt_argumentlist ')'
   62 assignment: ID . '=' assignment
   82 simpexpr: ID .

    '('  shift, and go to state 26
    '='  shift, and go to state 27

    $default  reduce using rule 82 (simpexpr)


State 19

   77 simpexpr: '-' . simpexpr

    CONST_INT      shift, and go to state 15
    CONST_FLOAT    shift, and go to state 16
    CONST_BOOLEAN  shift, and go to state 17
    ID             shift, and go to state 28
    '-'            shift, and go to state 19
    '('            shift, and go to state 20

    functioncall  go to state 21
    simpexpr      go to state 29


State 20

   83 simpexpr: '(' . assignment ')'

    CONST_INT      shift, and go to state 15
    CONST_FLOAT    shift, and go to state 16
    CONST_BOOLEAN  shift, and go to state 17
    ID             shift, and go to state 18
    '-'            shift, and go to state 19
    '('            shift, and go to state 20

    functioncall  go to state 21
    assignment    go to state 30
    expr          go to state 23
    simpexpr      go to state 24


State 21

   81 simpexpr: functioncall .

    $default  reduce using rule 81 (simpexpr)


State 22

   56 declassignment: type ID '=' assignment .

    $default  reduce using rule 56 (declassignment)


State 23

   63 assignment: expr .

    $default  reduce using rule 63 (assignment)


State 24

   64 expr: simpexpr .
   65     | simpexpr . EQ simpexpr
   66     | simpexpr . NEQ simpexpr
   67     | simpexpr . LEQ simpexpr
   68     | simpexpr . GEQ simpexpr
   69     | simpexpr . LSS simpexpr
   70     | simpexpr . GRT simpexpr
   71 simpexpr: simpexpr . '+' simpexpr
   72         | simpexpr . '-' simpexpr
   73         | simpexpr . OR simpexpr
   74         | simpexpr . '*' simpexpr
   75         | simpexpr . '/' simpexpr
   76         | simpexpr . AND simpexpr

    AND  shift, and go to state 31
    OR   shift, and go to state 32
    EQ   shift, and go to state 33
    NEQ  shift, and go to state 34
    LEQ  shift, and go to state 35
    GEQ  shift, and go to state 36
    LSS  shift, and go to state 37
    GRT  shift, and go to state 38
    '+'  shift, and go to state 39
    '-'  shift, and go to state 40
    '*'  shift, and go to state 41
    '/'  shift, and go to state 42

    $default  reduce using rule 64 (expr)


State 25

    7 functiondefinition: type ID $@1 '(' . opt_parameterlist $@2 ')' '{' statementlist '}'

    KW_BOOLEAN  shift, and go to state 4
    KW_FLOAT    shift, and go to state 5
    KW_INT      shift, and go to state 6
    KW_VOID     shift, and go to state 7

    $default  reduce using rule 8 (opt_parameterlist)

    opt_parameterlist  go to state 43
    parameterlist      go to state 44
    parameter          go to state 45
    type               go to state 46


State 26

   13 functioncall: ID '(' . opt_argumentlist ')'

    CONST_INT      shift, and go to state 15
    CONST_FLOAT    shift, and go to state 16
    CONST_BOOLEAN  shift, and go to state 17
    ID             shift, and go to state 18
    '-'            shift, and go to state 19
    '('            shift, and go to state 20

    $default  reduce using rule 14 (opt_argumentlist)

    functioncall      go to state 21
    opt_argumentlist  go to state 47
    argumentlist      go to state 48
    assignment        go to state 49
    expr              go to state 23
    simpexpr          go to state 24


State 27

   62 assignment: ID '=' . assignment

    CONST_INT      shift, and go to state 15
    CONST_FLOAT    shift, and go to state 16
    CONST_BOOLEAN  shift, and go to state 17
    ID             shift, and go to state 18
    '-'            shift, and go to state 19
    '('            shift, and go to state 20

    functioncall  go to state 21
    assignment    go to state 50
    expr          go to state 23
    simpexpr      go to state 24


State 28

   13 functioncall: ID . '(' opt_argumentlist ')'
   82 simpexpr: ID .

    '('  shift, and go to state 26

    $default  reduce using rule 82 (simpexpr)


State 29

   71 simpexpr: simpexpr . '+' simpexpr
   72         | simpexpr . '-' simpexpr
   73         | simpexpr . OR simpexpr
   74         | simpexpr . '*' simpexpr
   75         | simpexpr . '/' simpexpr
   76         | simpexpr . AND simpexpr
   77         | '-' simpexpr .

    $default  reduce using rule 77 (simpexpr)


State 30

   83 simpexpr: '(' assignment . ')'

    ')'  shift, and go to state 51


State 31

   76 simpexpr: simpexpr AND . simpexpr

    CONST_INT      shift, and go to state 15
    CONST_FLOAT    shift, and go to state 16
    CONST_BOOLEAN  shift, and go to state 17
    ID             shift, and go to state 28
    '-'            shift, and go to state 19
    '('            shift, and go to state 20

    functioncall  go to state 21
    simpexpr      go to state 52


State 32

   73 simpexpr: simpexpr OR . simpexpr

    CONST_INT      shift, and go to state 15
    CONST_FLOAT    shift, and go to state 16
    CONST_BOOLEAN  shift, and go to state 17
    ID             shift, and go to state 28
    '-'            shift, and go to state 19
    '('            shift, and go to state 20

    functioncall  go to state 21
    simpexpr      go to state 53


State 33

   65 expr: simpexpr EQ . simpexpr

    CONST_INT      shift, and go to state 15
    CONST_FLOAT    shift, and go to state 16
    CONST_BOOLEAN  shift, and go to state 17
    ID             shift, and go to state 28
    '-'            shift, and go to state 19
    '('            shift, and go to state 20

    functioncall  go to state 21
    simpexpr      go to state 54


State 34

   66 expr: simpexpr NEQ . simpexpr

    CONST_INT      shift, and go to state 15
    CONST_FLOAT    shift, and go to state 16
    CONST_BOOLEAN  shift, and go to state 17
    ID             shift, and go to state 28
    '-'            shift, and go to state 19
    '('            shift, and go to state 20

    functioncall  go to state 21
    simpexpr      go to state 55


State 35

   67 expr: simpexpr LEQ . simpexpr

    CONST_INT      shift, and go to state 15
    CONST_FLOAT    shift, and go to state 16
    CONST_BOOLEAN  shift, and go to state 17
    ID             shift, and go to state 28
    '-'            shift, and go to state 19
    '('            shift, and go to state 20

    functioncall  go to state 21
    simpexpr      go to state 56


State 36

   68 expr: simpexpr GEQ . simpexpr

    CONST_INT      shift, and go to state 15
    CONST_FLOAT    shift, and go to state 16
    CONST_BOOLEAN  shift, and go to state 17
    ID             shift, and go to state 28
    '-'            shift, and go to state 19
    '('            shift, and go to state 20

    functioncall  go to state 21
    simpexpr      go to state 57


State 37

   69 expr: simpexpr LSS . simpexpr

    CONST_INT      shift, and go to state 15
    CONST_FLOAT    shift, and go to state 16
    CONST_BOOLEAN  shift, and go to state 17
    ID             shift, and go to state 28
    '-'            shift, and go to state 19
    '('            shift, and go to state 20

    functioncall  go to state 21
    simpexpr      go to state 58


State 38

   70 expr: simpexpr GRT . simpexpr

    CONST_INT      shift, and go to state 15
    CONST_FLOAT    shift, and go to state 16
    CONST_BOOLEAN  shift, and go to state 17
    ID             shift, and go to state 28
    '-'            shift, and go to state 19
    '('            shift, and go to state 20

    functioncall  go to state 21
    simpexpr      go to state 59


State 39

   71 simpexpr: simpexpr '+' . simpexpr

    CONST_INT      shift, and go to state 15
    CONST_FLOAT    shift, and go to state 16
    CONST_BOOLEAN  shift, and go to state 17
    ID             shift, and go to state 28
    '-'            shift, and go to state 19
    '('            shift, and go to state 20

    functioncall  go to state 21
    simpexpr      go to state 60


State 40

   72 simpexpr: simpexpr '-' . simpexpr

    CONST_INT      shift, and go to state 15
    CONST_FLOAT    shift, and go to state 16
    CONST_BOOLEAN  shift, and go to state 17
    ID             shift, and go to state 28
    '-'            shift, and go to state 19
    '('            shift, and go to state 20

    functioncall  go to state 21
    simpexpr      go to state 61


State 41

   74 simpexpr: simpexpr '*' . simpexpr

    CONST_INT      shift, and go to state 15
    CONST_FLOAT    shift, and go to state 16
    CONST_BOOLEAN  shift, and go to state 17
    ID             shift, and go to state 28
    '-'            shift, and go to state 19
    '('            shift, and go to state 20

    functioncall  go to state 21
    simpexpr      go to state 62


State 42

   75 simpexpr: simpexpr '/' . simpexpr

    CONST_INT      shift, and go to state 15
    CONST_FLOAT    shift, and go to state 16
    CONST_BOOLEAN  shift, and go to state 17
    ID             shift, and go to state 28
    '-'            shift, and go to state 19
    '('            shift, and go to state 20

    functioncall  go to state 21
    simpexpr      go to state 63


State 43

    7 functiondefinition: type ID $@1 '(' opt_parameterlist . $@2 ')' '{' statementlist '}'

    $default  reduce using rule 6 ($@2)

    $@2  go to state 64


State 44

    9 opt_parameterlist: parameterlist .

    $default  reduce using rule 9 (opt_parameterlist)


State 45

   10 parameterlist: parameter .
   11              | parameter . ',' parameterlist

    ','  shift, and go to state 65

    $default  reduce using rule 10 (parameterlist)


State 46

   12 parameter: type . ID

    ID  shift, and go to state 66


State 47

   13 functioncall: ID '(' opt_argumentlist . ')'

    ')'  shift, and go to state 67


State 48

   15 opt_argumentlist: argumentlist .
   17 argumentlist: argumentlist . ',' assignment

    ','  shift, and go to state 68

    $default  reduce using rule 15 (opt_argumentlist)


State 49

   16 argumentlist: assignment .

    $default  reduce using rule 16 (argumentlist)


State 50

   62 assignment: ID '=' assignment .

    $default  reduce using rule 62 (assignment)


State 51

   83 simpexpr: '(' assignment ')' .

    $default  reduce using rule 83 (simpexpr)


State 52

   71 simpexpr: simpexpr . '+' simpexpr
   72         | simpexpr . '-' simpexpr
   73         | simpexpr . OR simpexpr
   74         | simpexpr . '*' simpexpr
   75         | simpexpr . '/' simpexpr
   76         | simpexpr . AND simpexpr
   76         | simpexpr AND simpexpr .

    $default  reduce using rule 76 (simpexpr)


State 53

   71 simpexpr: simpexpr . '+' simpexpr
   72         | simpexpr . '-' simpexpr
   73         | simpexpr . OR simpexpr
   73         | simpexpr OR simpexpr .
   74         | simpexpr . '*' simpexpr
   75         | simpexpr . '/' simpexpr
   76         | simpexpr . AND simpexpr

    AND  shift, and go to state 31
    '*'  shift, and go to state 41
    '/'  shift, and go to state 42

    $default  reduce using rule 73 (simpexpr)


State 54

   65 expr: simpexpr EQ simpexpr .
   71 simpexpr: simpexpr . '+' simpexpr
   72         | simpexpr . '-' simpexpr
   73         | simpexpr . OR simpexpr
   74         | simpexpr . '*' simpexpr
   75         | simpexpr . '/' simpexpr
   76         | simpexpr . AND simpexpr

    AND  shift, and go to state 31
    OR   shift, and go to state 32
    '+'  shift, and go to state 39
    '-'  shift, and go to state 40
    '*'  shift, and go to state 41
    '/'  shift, and go to state 42

    $default  reduce using rule 65 (expr)


State 55

   66 expr: simpexpr NEQ simpexpr .
   71 simpexpr: simpexpr . '+' simpexpr
   72         | simpexpr . '-' simpexpr
   73         | simpexpr . OR simpexpr
   74         | simpexpr . '*' simpexpr
   75         | simpexpr . '/' simpexpr
   76         | simpexpr . AND simpexpr

    AND  shift, and go to state 31
    OR   shift, and go to state 32
    '+'  shift, and go to state 39
    '-'  shift, and go to state 40
    '*'  shift, and go to state 41
    '/'  shift, and go to state 42

    $default  reduce using rule 66 (expr)


State 56

   67 expr: simpexpr LEQ simpexpr .
   71 simpexpr: simpexpr . '+' simpexpr
   72         | simpexpr . '-' simpexpr
   73         | simpexpr . OR simpexpr
   74         | simpexpr . '*' simpexpr
   75         | simpexpr . '/' simpexpr
   76         | simpexpr . AND simpexpr

    AND  shift, and go to state 31
    OR   shift, and go to state 32
    '+'  shift, and go to state 39
    '-'  shift, and go to state 40
    '*'  shift, and go to state 41
    '/'  shift, and go to state 42

    $default  reduce using rule 67 (expr)


State 57

   68 expr: simpexpr GEQ simpexpr .
   71 simpexpr: simpexpr . '+' simpexpr
   72         | simpexpr . '-' simpexpr
   73         | simpexpr . OR simpexpr
   74         | simpexpr . '*' simpexpr
   75         | simpexpr . '/' simpexpr
   76         | simpexpr . AND simpexpr

    AND  shift, and go to state 31
    OR   shift, and go to state 32
    '+'  shift, and go to state 39
    '-'  shift, and go to state 40
    '*'  shift, and go to state 41
    '/'  shift, and go to state 42

    $default  reduce using rule 68 (expr)


State 58

   69 expr: simpexpr LSS simpexpr .
   71 simpexpr: simpexpr . '+' simpexpr
   72         | simpexpr . '-' simpexpr
   73         | simpexpr . OR simpexpr
   74         | simpexpr . '*' simpexpr
   75         | simpexpr . '/' simpexpr
   76         | simpexpr . AND simpexpr

    AND  shift, and go to state 31
    OR   shift, and go to state 32
    '+'  shift, and go to state 39
    '-'  shift, and go to state 40
    '*'  shift, and go to state 41
    '/'  shift, and go to state 42

    $default  reduce using rule 69 (expr)


State 59

   70 expr: simpexpr GRT simpexpr .
   71 simpexpr: simpexpr . '+' simpexpr
   72         | simpexpr . '-' simpexpr
   73         | simpexpr . OR simpexpr
   74         | simpexpr . '*' simpexpr
   75         | simpexpr . '/' simpexpr
   76         | simpexpr . AND simpexpr

    AND  shift, and go to state 31
    OR   shift, and go to state 32
    '+'  shift, and go to state 39
    '-'  shift, and go to state 40
    '*'  shift, and go to state 41
    '/'  shift, and go to state 42

    $default  reduce using rule 70 (expr)


State 60

   71 simpexpr: simpexpr . '+' simpexpr
   71         | simpexpr '+' simpexpr .
   72         | simpexpr . '-' simpexpr
   73         | simpexpr . OR simpexpr
   74         | simpexpr . '*' simpexpr
   75         | simpexpr . '/' simpexpr
   76         | simpexpr . AND simpexpr

    AND  shift, and go to state 31
    '*'  shift, and go to state 41
    '/'  shift, and go to state 42

    $default  reduce using rule 71 (simpexpr)


State 61

   71 simpexpr: simpexpr . '+' simpexpr
   72         | simpexpr . '-' simpexpr
   72         | simpexpr '-' simpexpr .
   73         | simpexpr . OR simpexpr
   74         | simpexpr . '*' simpexpr
   75         | simpexpr . '/' simpexpr
   76         | simpexpr . AND simpexpr

    AND  shift, and go to state 31
    '*'  shift, and go to state 41
    '/'  shift, and go to state 42

    $default  reduce using rule 72 (simpexpr)


State 62

   71 simpexpr: simpexpr . '+' simpexpr
   72         | simpexpr . '-' simpexpr
   73         | simpexpr . OR simpexpr
   74         | simpexpr . '*' simpexpr
   74         | simpexpr '*' simpexpr .
   75         | simpexpr . '/' simpexpr
   76         | simpexpr . AND simpexpr

    $default  reduce using rule 74 (simpexpr)


State 63

   71 simpexpr: simpexpr . '+' simpexpr
   72         | simpexpr . '-' simpexpr
   73         | simpexpr . OR simpexpr
   74         | simpexpr . '*' simpexpr
   75         | simpexpr . '/' simpexpr
   75         | simpexpr '/' simpexpr .
   76         | simpexpr . AND simpexpr

    $default  reduce using rule 75 (simpexpr)


State 64

    7 functiondefinition: type ID $@1 '(' opt_parameterlist $@2 . ')' '{' statementlist '}'

    ')'  shift, and go to state 69


State 65

   11 parameterlist: parameter ',' . parameterlist

    KW_BOOLEAN  shift, and go to state 4
    KW_FLOAT    shift, and go to state 5
    KW_INT      shift, and go to state 6
    KW_VOID     shift, and go to state 7

    parameterlist  go to state 70
    parameter      go to state 45
    type           go to state 46


State 66

   12 parameter: type ID .

    $default  reduce using rule 12 (parameter)


State 67

   13 functioncall: ID '(' opt_argumentlist ')' .

    $default  reduce using rule 13 (functioncall)


State 68

   17 argumentlist: argumentlist ',' . assignment

    CONST_INT      shift, and go to state 15
    CONST_FLOAT    shift, and go to state 16
    CONST_BOOLEAN  shift, and go to state 17
    ID             shift, and go to state 18
    '-'            shift, and go to state 19
    '('            shift, and go to state 20

    functioncall  go to state 21
    assignment    go to state 71
    expr          go to state 23
    simpexpr      go to state 24


State 69

    7 functiondefinition: type ID $@1 '(' opt_parameterlist $@2 ')' . '{' statementlist '}'

    '{'  shift, and go to state 72


State 70

   11 parameterlist: parameter ',' parameterlist .

    $default  reduce using rule 11 (parameterlist)


State 71

   17 argumentlist: argumentlist ',' assignment .

    $default  reduce using rule 17 (argumentlist)


State 72

    7 functiondefinition: type ID $@1 '(' opt_parameterlist $@2 ')' '{' . statementlist '}'

    $default  reduce using rule 18 (statementlist)

    statementlist  go to state 73


State 73

    7 functiondefinition: type ID $@1 '(' opt_parameterlist $@2 ')' '{' statementlist . '}'
   19 statementlist: statementlist . statement

    KW_BOOLEAN  shift, and go to state 4
    KW_DO       shift, and go to state 74
    KW_FLOAT    shift, and go to state 5
    KW_FOR      shift, and go to state 75
    KW_IF       shift, and go to state 76
    KW_INT      shift, and go to state 6
    KW_PRINTF   shift, and go to state 77
    KW_RETURN   shift, and go to state 78
    KW_VOID     shift, and go to state 7
    KW_WHILE    shift, and go to state 79
    ID          shift, and go to state 80
    '{'         shift, and go to state 81
    '}'         shift, and go to state 82

    functioncall      go to state 83
    block             go to state 84
    statement         go to state 85
    ifstatement       go to state 86
    forstatement      go to state 87
    dowhilestatement  go to state 88
    whilestatement    go to state 89
    returnstatement   go to state 90
    printf            go to state 91
    declassignment    go to state 92
    type              go to state 93
    statassignment    go to state 94


State 74

   46 dowhilestatement: KW_DO . $@11 statement KW_WHILE '(' assignment $@12 ')'

    $default  reduce using rule 44 ($@11)

    $@11  go to state 95


State 75

   40 forstatement: KW_FOR . '(' $@7 declassignment ';' expr $@8 ';' statassignment ')' statement
   43             | KW_FOR . '(' $@9 statassignment ';' expr $@10 ';' statassignment ')' statement

    '('  shift, and go to state 96


State 76

   34 ifstatement: KW_IF . '(' assignment ')' $@4 statement $@5 opt_else

    '('  shift, and go to state 97


State 77

   52 printf: KW_PRINTF . '(' assignment ')'
   53       | KW_PRINTF . '(' CONST_STRING ')'
   54       | KW_PRINTF . '(' ')'

    '('  shift, and go to state 98


State 78

   50 returnstatement: KW_RETURN .
   51                | KW_RETURN . assignment

    CONST_INT      shift, and go to state 15
    CONST_FLOAT    shift, and go to state 16
    CONST_BOOLEAN  shift, and go to state 17
    ID             shift, and go to state 18
    '-'            shift, and go to state 19
    '('            shift, and go to state 20

    $default  reduce using rule 50 (returnstatement)

    functioncall  go to state 21
    assignment    go to state 99
    expr          go to state 23
    simpexpr      go to state 24


State 79

   49 whilestatement: KW_WHILE . '(' assignment $@13 ')' $@14 statement

    '('  shift, and go to state 100


State 80

   13 functioncall: ID . '(' opt_argumentlist ')'
   61 statassignment: ID . '=' assignment

    '('  shift, and go to state 26
    '='  shift, and go to state 101


State 81

   21 block: '{' . $@3 statementlist '}'

    $default  reduce using rule 20 ($@3)

    $@3  go to state 102


State 82

    7 functiondefinition: type ID $@1 '(' opt_parameterlist $@2 ')' '{' statementlist '}' .

    $default  reduce using rule 7 (functiondefinition)


State 83

   30 statement: functioncall . ';'

    ';'  shift, and go to state 103


State 84

   31 statement: block .

    $default  reduce using rule 31 (statement)


State 85

   19 statementlist: statementlist statement .

    $default  reduce using rule 19 (statementlist)


State 86

   22 statement: ifstatement .

    $default  reduce using rule 22 (statement)


State 87

   23 statement: forstatement .

    $default  reduce using rule 23 (statement)


State 88

   26 statement: dowhilestatement . ';'

    ';'  shift, and go to state 104


State 89

   24 statement: whilestatement .

    $default  reduce using rule 24 (statement)


State 90

   25 statement: returnstatement . ';'

    ';'  shift, and go to state 105


State 91

   27 statement: printf . ';'

    ';'  shift, and go to state 106


State 92

   28 statement: declassignment . ';'

    ';'  shift, and go to state 107


State 93

   55 declassignment: type . ID
   56               | type . ID '=' assignment

    ID  shift, and go to state 108


State 94

   29 statement: statassignment . ';'

    ';'  shift, and go to state 109


State 95

   46 dowhilestatement: KW_DO $@11 . statement KW_WHILE '(' assignment $@12 ')'

    KW_BOOLEAN  shift, and go to state 4
    KW_DO       shift, and go to state 74
    KW_FLOAT    shift, and go to state 5
    KW_FOR      shift, and go to state 75
    KW_IF       shift, and go to state 76
    KW_INT      shift, and go to state 6
    KW_PRINTF   shift, and go to state 77
    KW_RETURN   shift, and go to state 78
    KW_VOID     shift, and go to state 7
    KW_WHILE    shift, and go to state 79
    ID          shift, and go to state 80
    '{'         shift, and go to state 81

    functioncall      go to state 83
    block             go to state 84
    statement         go to state 110
    ifstatement       go to state 86
    forstatement      go to state 87
    dowhilestatement  go to state 88
    whilestatement    go to state 89
    returnstatement   go to state 90
    printf            go to state 91
    declassignment    go to state 92
    type              go to state 93
    statassignment    go to state 94


State 96

   40 forstatement: KW_FOR '(' . $@7 declassignment ';' expr $@8 ';' statassignment ')' statement
   43             | KW_FOR '(' . $@9 statassignment ';' expr $@10 ';' statassignment ')' statement

    ID        reduce using rule 41 ($@9)
    $default  reduce using rule 38 ($@7)

    $@7  go to state 111
    $@9  go to state 112


State 97

   34 ifstatement: KW_IF '(' . assignment ')' $@4 statement $@5 opt_else

    CONST_INT      shift, and go to state 15
    CONST_FLOAT    shift, and go to state 16
    CONST_BOOLEAN  shift, and go to state 17
    ID             shift, and go to state 18
    '-'            shift, and go to state 19
    '('            shift, and go to state 20

    functioncall  go to state 21
    assignment    go to state 113
    expr          go to state 23
    simpexpr      go to state 24


State 98

   52 printf: KW_PRINTF '(' . assignment ')'
   53       | KW_PRINTF '(' . CONST_STRING ')'
   54       | KW_PRINTF '(' . ')'

    CONST_INT      shift, and go to state 15
    CONST_FLOAT    shift, and go to state 16
    CONST_BOOLEAN  shift, and go to state 17
    CONST_STRING   shift, and go to state 114
    ID             shift, and go to state 18
    '-'            shift, and go to state 19
    '('            shift, and go to state 20
    ')'            shift, and go to state 115

    functioncall  go to state 21
    assignment    go to state 116
    expr          go to state 23
    simpexpr      go to state 24


State 99

   51 returnstatement: KW_RETURN assignment .

    $default  reduce using rule 51 (returnstatement)


State 100

   49 whilestatement: KW_WHILE '(' . assignment $@13 ')' $@14 statement

    CONST_INT      shift, and go to state 15
    CONST_FLOAT    shift, and go to state 16
    CONST_BOOLEAN  shift, and go to state 17
    ID             shift, and go to state 18
    '-'            shift, and go to state 19
    '('            shift, and go to state 20

    functioncall  go to state 21
    assignment    go to state 117
    expr          go to state 23
    simpexpr      go to state 24


State 101

   61 statassignment: ID '=' . assignment

    CONST_INT      shift, and go to state 15
    CONST_FLOAT    shift, and go to state 16
    CONST_BOOLEAN  shift, and go to state 17
    ID             shift, and go to state 18
    '-'            shift, and go to state 19
    '('            shift, and go to state 20

    functioncall  go to state 21
    assignment    go to state 118
    expr          go to state 23
    simpexpr      go to state 24


State 102

   21 block: '{' $@3 . statementlist '}'

    $default  reduce using rule 18 (statementlist)

    statementlist  go to state 119


State 103

   30 statement: functioncall ';' .

    $default  reduce using rule 30 (statement)


State 104

   26 statement: dowhilestatement ';' .

    $default  reduce using rule 26 (statement)


State 105

   25 statement: returnstatement ';' .

    $default  reduce using rule 25 (statement)


State 106

   27 statement: printf ';' .

    $default  reduce using rule 27 (statement)


State 107

   28 statement: declassignment ';' .

    $default  reduce using rule 28 (statement)


State 108

   55 declassignment: type ID .
   56               | type ID . '=' assignment

    '='  shift, and go to state 13

    $default  reduce using rule 55 (declassignment)


State 109

   29 statement: statassignment ';' .

    $default  reduce using rule 29 (statement)


State 110

   46 dowhilestatement: KW_DO $@11 statement . KW_WHILE '(' assignment $@12 ')'

    KW_WHILE  shift, and go to state 120


State 111

   40 forstatement: KW_FOR '(' $@7 . declassignment ';' expr $@8 ';' statassignment ')' statement

    KW_BOOLEAN  shift, and go to state 4
    KW_FLOAT    shift, and go to state 5
    KW_INT      shift, and go to state 6
    KW_VOID     shift, and go to state 7

    declassignment  go to state 121
    type            go to state 93


State 112

   43 forstatement: KW_FOR '(' $@9 . statassignment ';' expr $@10 ';' statassignment ')' statement

    ID  shift, and go to state 122

    statassignment  go to state 123


State 113

   34 ifstatement: KW_IF '(' assignment . ')' $@4 statement $@5 opt_else

    ')'  shift, and go to state 124


State 114

   53 printf: KW_PRINTF '(' CONST_STRING . ')'

    ')'  shift, and go to state 125


State 115

   54 printf: KW_PRINTF '(' ')' .

    $default  reduce using rule 54 (printf)


State 116

   52 printf: KW_PRINTF '(' assignment . ')'

    ')'  shift, and go to state 126


State 117

   49 whilestatement: KW_WHILE '(' assignment . $@13 ')' $@14 statement

    $default  reduce using rule 47 ($@13)

    $@13  go to state 127


State 118

   61 statassignment: ID '=' assignment .

    $default  reduce using rule 61 (statassignment)


State 119

   19 statementlist: statementlist . statement
   21 block: '{' $@3 statementlist . '}'

    KW_BOOLEAN  shift, and go to state 4
    KW_DO       shift, and go to state 74
    KW_FLOAT    shift, and go to state 5
    KW_FOR      shift, and go to state 75
    KW_IF       shift, and go to state 76
    KW_INT      shift, and go to state 6
    KW_PRINTF   shift, and go to state 77
    KW_RETURN   shift, and go to state 78
    KW_VOID     shift, and go to state 7
    KW_WHILE    shift, and go to state 79
    ID          shift, and go to state 80
    '{'         shift, and go to state 81
    '}'         shift, and go to state 128

    functioncall      go to state 83
    block             go to state 84
    statement         go to state 85
    ifstatement       go to state 86
    forstatement      go to state 87
    dowhilestatement  go to state 88
    whilestatement    go to state 89
    returnstatement   go to state 90
    printf            go to state 91
    declassignment    go to state 92
    type              go to state 93
    statassignment    go to state 94


State 120

   46 dowhilestatement: KW_DO $@11 statement KW_WHILE . '(' assignment $@12 ')'

    '('  shift, and go to state 129


State 121

   40 forstatement: KW_FOR '(' $@7 declassignment . ';' expr $@8 ';' statassignment ')' statement

    ';'  shift, and go to state 130


State 122

   61 statassignment: ID . '=' assignment

    '='  shift, and go to state 101


State 123

   43 forstatement: KW_FOR '(' $@9 statassignment . ';' expr $@10 ';' statassignment ')' statement

    ';'  shift, and go to state 131


State 124

   34 ifstatement: KW_IF '(' assignment ')' . $@4 statement $@5 opt_else

    $default  reduce using rule 32 ($@4)

    $@4  go to state 132


State 125

   53 printf: KW_PRINTF '(' CONST_STRING ')' .

    $default  reduce using rule 53 (printf)


State 126

   52 printf: KW_PRINTF '(' assignment ')' .

    $default  reduce using rule 52 (printf)


State 127

   49 whilestatement: KW_WHILE '(' assignment $@13 . ')' $@14 statement

    ')'  shift, and go to state 133


State 128

   21 block: '{' $@3 statementlist '}' .

    $default  reduce using rule 21 (block)


State 129

   46 dowhilestatement: KW_DO $@11 statement KW_WHILE '(' . assignment $@12 ')'

    CONST_INT      shift, and go to state 15
    CONST_FLOAT    shift, and go to state 16
    CONST_BOOLEAN  shift, and go to state 17
    ID             shift, and go to state 18
    '-'            shift, and go to state 19
    '('            shift, and go to state 20

    functioncall  go to state 21
    assignment    go to state 134
    expr          go to state 23
    simpexpr      go to state 24


State 130

   40 forstatement: KW_FOR '(' $@7 declassignment ';' . expr $@8 ';' statassignment ')' statement

    CONST_INT      shift, and go to state 15
    CONST_FLOAT    shift, and go to state 16
    CONST_BOOLEAN  shift, and go to state 17
    ID             shift, and go to state 28
    '-'            shift, and go to state 19
    '('            shift, and go to state 20

    functioncall  go to state 21
    expr          go to state 135
    simpexpr      go to state 24


State 131

   43 forstatement: KW_FOR '(' $@9 statassignment ';' . expr $@10 ';' statassignment ')' statement

    CONST_INT      shift, and go to state 15
    CONST_FLOAT    shift, and go to state 16
    CONST_BOOLEAN  shift, and go to state 17
    ID             shift, and go to state 28
    '-'            shift, and go to state 19
    '('            shift, and go to state 20

    functioncall  go to state 21
    expr          go to state 136
    simpexpr      go to state 24


State 132

   34 ifstatement: KW_IF '(' assignment ')' $@4 . statement $@5 opt_else

    KW_BOOLEAN  shift, and go to state 4
    KW_DO       shift, and go to state 74
    KW_FLOAT    shift, and go to state 5
    KW_FOR      shift, and go to state 75
    KW_IF       shift, and go to state 76
    KW_INT      shift, and go to state 6
    KW_PRINTF   shift, and go to state 77
    KW_RETURN   shift, and go to state 78
    KW_VOID     shift, and go to state 7
    KW_WHILE    shift, and go to state 79
    ID          shift, and go to state 80
    '{'         shift, and go to state 81

    functioncall      go to state 83
    block             go to state 84
    statement         go to state 137
    ifstatement       go to state 86
    forstatement      go to state 87
    dowhilestatement  go to state 88
    whilestatement    go to state 89
    returnstatement   go to state 90
    printf            go to state 91
    declassignment    go to state 92
    type              go to state 93
    statassignment    go to state 94


State 133

   49 whilestatement: KW_WHILE '(' assignment $@13 ')' . $@14 statement

    $default  reduce using rule 48 ($@14)

    $@14  go to state 138


State 134

   46 dowhilestatement: KW_DO $@11 statement KW_WHILE '(' assignment . $@12 ')'

    $default  reduce using rule 45 ($@12)

    $@12  go to state 139


State 135

   40 forstatement: KW_FOR '(' $@7 declassignment ';' expr . $@8 ';' statassignment ')' statement

    $default  reduce using rule 39 ($@8)

    $@8  go to state 140


State 136

   43 forstatement: KW_FOR '(' $@9 statassignment ';' expr . $@10 ';' statassignment ')' statement

    $default  reduce using rule 42 ($@10)

    $@10  go to state 141


State 137

   34 ifstatement: KW_IF '(' assignment ')' $@4 statement . $@5 opt_else

    $default  reduce using rule 33 ($@5)

    $@5  go to state 142


State 138

   49 whilestatement: KW_WHILE '(' assignment $@13 ')' $@14 . statement

    KW_BOOLEAN  shift, and go to state 4
    KW_DO       shift, and go to state 74
    KW_FLOAT    shift, and go to state 5
    KW_FOR      shift, and go to state 75
    KW_IF       shift, and go to state 76
    KW_INT      shift, and go to state 6
    KW_PRINTF   shift, and go to state 77
    KW_RETURN   shift, and go to state 78
    KW_VOID     shift, and go to state 7
    KW_WHILE    shift, and go to state 79
    ID          shift, and go to state 80
    '{'         shift, and go to state 81

    functioncall      go to state 83
    block             go to state 84
    statement         go to state 143
    ifstatement       go to state 86
    forstatement      go to state 87
    dowhilestatement  go to state 88
    whilestatement    go to state 89
    returnstatement   go to state 90
    printf            go to state 91
    declassignment    go to state 92
    type              go to state 93
    statassignment    go to state 94


State 139

   46 dowhilestatement: KW_DO $@11 statement KW_WHILE '(' assignment $@12 . ')'

    ')'  shift, and go to state 144


State 140

   40 forstatement: KW_FOR '(' $@7 declassignment ';' expr $@8 . ';' statassignment ')' statement

    ';'  shift, and go to state 145


State 141

   43 forstatement: KW_FOR '(' $@9 statassignment ';' expr $@10 . ';' statassignment ')' statement

    ';'  shift, and go to state 146


State 142

   34 ifstatement: KW_IF '(' assignment ')' $@4 statement $@5 . opt_else

    KW_ELSE  shift, and go to state 147

    $default  reduce using rule 35 (opt_else)

    opt_else  go to state 148


State 143

   49 whilestatement: KW_WHILE '(' assignment $@13 ')' $@14 statement .

    $default  reduce using rule 49 (whilestatement)


State 144

   46 dowhilestatement: KW_DO $@11 statement KW_WHILE '(' assignment $@12 ')' .

    $default  reduce using rule 46 (dowhilestatement)


State 145

   40 forstatement: KW_FOR '(' $@7 declassignment ';' expr $@8 ';' . statassignment ')' statement

    ID  shift, and go to state 122

    statassignment  go to state 149


State 146

   43 forstatement: KW_FOR '(' $@9 statassignment ';' expr $@10 ';' . statassignment ')' statement

    ID  shift, and go to state 122

    statassignment  go to state 150


State 147

   37 opt_else: KW_ELSE . $@6 statement

    $default  reduce using rule 36 ($@6)

    $@6  go to state 151


State 148

   34 ifstatement: KW_IF '(' assignment ')' $@4 statement $@5 opt_else .

    $default  reduce using rule 34 (ifstatement)


State 149

   40 forstatement: KW_FOR '(' $@7 declassignment ';' expr $@8 ';' statassignment . ')' statement

    ')'  shift, and go to state 152


State 150

   43 forstatement: KW_FOR '(' $@9 statassignment ';' expr $@10 ';' statassignment . ')' statement

    ')'  shift, and go to state 153


State 151

   37 opt_else: KW_ELSE $@6 . statement

    KW_BOOLEAN  shift, and go to state 4
    KW_DO       shift, and go to state 74
    KW_FLOAT    shift, and go to state 5
    KW_FOR      shift, and go to state 75
    KW_IF       shift, and go to state 76
    KW_INT      shift, and go to state 6
    KW_PRINTF   shift, and go to state 77
    KW_RETURN   shift, and go to state 78
    KW_VOID     shift, and go to state 7
    KW_WHILE    shift, and go to state 79
    ID          shift, and go to state 80
    '{'         shift, and go to state 81

    functioncall      go to state 83
    block             go to state 84
    statement         go to state 154
    ifstatement       go to state 86
    forstatement      go to state 87
    dowhilestatement  go to state 88
    whilestatement    go to state 89
    returnstatement   go to state 90
    printf            go to state 91
    declassignment    go to state 92
    type              go to state 93
    statassignment    go to state 94


State 152

   40 forstatement: KW_FOR '(' $@7 declassignment ';' expr $@8 ';' statassignment ')' . statement

    KW_BOOLEAN  shift, and go to state 4
    KW_DO       shift, and go to state 74
    KW_FLOAT    shift, and go to state 5
    KW_FOR      shift, and go to state 75
    KW_IF       shift, and go to state 76
    KW_INT      shift, and go to state 6
    KW_PRINTF   shift, and go to state 77
    KW_RETURN   shift, and go to state 78
    KW_VOID     shift, and go to state 7
    KW_WHILE    shift, and go to state 79
    ID          shift, and go to state 80
    '{'         shift, and go to state 81

    functioncall      go to state 83
    block             go to state 84
    statement         go to state 155
    ifstatement       go to state 86
    forstatement      go to state 87
    dowhilestatement  go to state 88
    whilestatement    go to state 89
    returnstatement   go to state 90
    printf            go to state 91
    declassignment    go to state 92
    type              go to state 93
    statassignment    go to state 94


State 153

   43 forstatement: KW_FOR '(' $@9 statassignment ';' expr $@10 ';' statassignment ')' . statement

    KW_BOOLEAN  shift, and go to state 4
    KW_DO       shift, and go to state 74
    KW_FLOAT    shift, and go to state 5
    KW_FOR      shift, and go to state 75
    KW_IF       shift, and go to state 76
    KW_INT      shift, and go to state 6
    KW_PRINTF   shift, and go to state 77
    KW_RETURN   shift, and go to state 78
    KW_VOID     shift, and go to state 7
    KW_WHILE    shift, and go to state 79
    ID          shift, and go to state 80
    '{'         shift, and go to state 81

    functioncall      go to state 83
    block             go to state 84
    statement         go to state 156
    ifstatement       go to state 86
    forstatement      go to state 87
    dowhilestatement  go to state 88
    whilestatement    go to state 89
    returnstatement   go to state 90
    printf            go to state 91
    declassignment    go to state 92
    type              go to state 93
    statassignment    go to state 94


State 154

   37 opt_else: KW_ELSE $@6 statement .

    $default  reduce using rule 37 (opt_else)


State 155

   40 forstatement: KW_FOR '(' $@7 declassignment ';' expr $@8 ';' statassignment ')' statement .

    $default  reduce using rule 40 (forstatement)


State 156

   43 forstatement: KW_FOR '(' $@9 statassignment ';' expr $@10 ';' statassignment ')' statement .

    $default  reduce using rule 43 (forstatement)
