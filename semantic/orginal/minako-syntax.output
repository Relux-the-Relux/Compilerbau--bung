Grammar

    0 $accept: start $end

    1 start: program

    2 program: %empty
    3        | program declassignment ';'
    4        | program functiondefinition

    5 $@1: %empty

    6 functiondefinition: type ID $@1 '(' opt_parameterlist ')' '{' statementlist '}'

    7 opt_parameterlist: %empty
    8                  | parameterlist

    9 parameterlist: parameter
   10              | parameter ',' parameterlist

   11 parameter: type ID

   12 functioncall: ID '(' opt_argumentlist ')'

   13 opt_argumentlist: %empty
   14                 | argumentlist

   15 argumentlist: assignment
   16             | argumentlist ',' assignment

   17 statementlist: %empty
   18              | statementlist statement

   19 block: '{' statementlist '}'

   20 statement: ifstatement
   21          | forstatement
   22          | whilestatement
   23          | returnstatement ';'
   24          | dowhilestatement ';'
   25          | printf ';'
   26          | declassignment ';'
   27          | statassignment ';'
   28          | functioncall ';'
   29          | block

   30 ifstatement: KW_IF '(' assignment ')' statement opt_else

   31 opt_else: %empty
   32         | KW_ELSE statement

   33 forstatement: KW_FOR '(' declassignment ';' expr ';' statassignment ')' statement
   34             | KW_FOR '(' statassignment ';' expr ';' statassignment ')' statement

   35 dowhilestatement: KW_DO statement KW_WHILE '(' assignment ')'

   36 whilestatement: KW_WHILE '(' assignment ')' statement

   37 returnstatement: KW_RETURN
   38                | KW_RETURN assignment

   39 printf: KW_PRINTF '(' assignment ')'
   40       | KW_PRINTF '(' CONST_STRING ')'

   41 declassignment: type ID
   42               | type ID '=' assignment

   43 type: KW_BOOLEAN
   44     | KW_FLOAT
   45     | KW_INT
   46     | KW_VOID

   47 statassignment: ID '=' assignment

   48 assignment: ID '=' assignment
   49           | expr

   50 expr: simpexpr
   51     | simpexpr EQ simpexpr
   52     | simpexpr NEQ simpexpr
   53     | simpexpr LEQ simpexpr
   54     | simpexpr GEQ simpexpr
   55     | simpexpr LSS simpexpr
   56     | simpexpr GRT simpexpr

   57 simpexpr: simpexpr '+' simpexpr
   58         | simpexpr '-' simpexpr
   59         | simpexpr OR simpexpr
   60         | simpexpr '*' simpexpr
   61         | simpexpr '/' simpexpr
   62         | simpexpr AND simpexpr
   63         | '-' simpexpr
   64         | CONST_INT
   65         | CONST_FLOAT
   66         | CONST_BOOLEAN
   67         | functioncall
   68         | ID
   69         | '(' assignment ')'


Terminals, with rules where they appear

$end (0) 0
'(' (40) 6 12 30 33 34 35 36 39 40 69
')' (41) 6 12 30 33 34 35 36 39 40 69
'*' (42) 60
'+' (43) 57
',' (44) 10 16
'-' (45) 58 63
'/' (47) 61
';' (59) 3 23 24 25 26 27 28 33 34
'=' (61) 42 47 48
'{' (123) 6 19
'}' (125) 6 19
error (256)
AND (258) 62
OR (259) 59
EQ (260) 51
NEQ (261) 52
LEQ (262) 53
GEQ (263) 54
LSS (264) 55
GRT (265) 56
KW_BOOLEAN (266) 43
KW_DO (267) 35
KW_ELSE (268) 32
KW_FLOAT (269) 44
KW_FOR (270) 33 34
KW_IF (271) 30
KW_INT (272) 45
KW_PRINTF (273) 39 40
KW_RETURN (274) 37 38
KW_VOID (275) 46
KW_WHILE (276) 35 36
CONST_INT (277) 64
CONST_FLOAT (278) 65
CONST_BOOLEAN (279) 66
CONST_STRING (280) 40
ID (281) 6 11 12 41 42 47 48 68
UMINUS (282)
LOWER_THAN_ELSE (283)


Nonterminals, with rules where they appear

$accept (40)
    on left: 0
start (41)
    on left: 1, on right: 0
program (42)
    on left: 2 3 4, on right: 1 3 4
functiondefinition (43)
    on left: 6, on right: 4
$@1 (44)
    on left: 5, on right: 6
opt_parameterlist (45)
    on left: 7 8, on right: 6
parameterlist (46)
    on left: 9 10, on right: 8 10
parameter (47)
    on left: 11, on right: 9 10
functioncall (48)
    on left: 12, on right: 28 67
opt_argumentlist (49)
    on left: 13 14, on right: 12
argumentlist (50)
    on left: 15 16, on right: 14 16
statementlist (51)
    on left: 17 18, on right: 6 18 19
block (52)
    on left: 19, on right: 29
statement (53)
    on left: 20 21 22 23 24 25 26 27 28 29, on right: 18 30 32 33 34
    35 36
ifstatement (54)
    on left: 30, on right: 20
opt_else (55)
    on left: 31 32, on right: 30
forstatement (56)
    on left: 33 34, on right: 21
dowhilestatement (57)
    on left: 35, on right: 24
whilestatement (58)
    on left: 36, on right: 22
returnstatement (59)
    on left: 37 38, on right: 23
printf (60)
    on left: 39 40, on right: 25
declassignment (61)
    on left: 41 42, on right: 3 26 33
type (62)
    on left: 43 44 45 46, on right: 6 11 41 42
statassignment (63)
    on left: 47, on right: 27 33 34
assignment (64)
    on left: 48 49, on right: 15 16 30 35 36 38 39 42 47 48 69
expr (65)
    on left: 50 51 52 53 54 55 56, on right: 33 34 49
simpexpr (66)
    on left: 57 58 59 60 61 62 63 64 65 66 67 68 69, on right: 50 51
    52 53 54 55 56 57 58 59 60 61 62 63


State 0

    0 $accept: . start $end

    $default  reduce using rule 2 (program)

    start    go to state 1
    program  go to state 2


State 1

    0 $accept: start . $end

    $end  shift, and go to state 3


State 2

    1 start: program .
    3 program: program . declassignment ';'
    4        | program . functiondefinition

    KW_BOOLEAN  shift, and go to state 4
    KW_FLOAT    shift, and go to state 5
    KW_INT      shift, and go to state 6
    KW_VOID     shift, and go to state 7

    $default  reduce using rule 1 (start)

    functiondefinition  go to state 8
    declassignment      go to state 9
    type                go to state 10


State 3

    0 $accept: start $end .

    $default  accept


State 4

   43 type: KW_BOOLEAN .

    $default  reduce using rule 43 (type)


State 5

   44 type: KW_FLOAT .

    $default  reduce using rule 44 (type)


State 6

   45 type: KW_INT .

    $default  reduce using rule 45 (type)


State 7

   46 type: KW_VOID .

    $default  reduce using rule 46 (type)


State 8

    4 program: program functiondefinition .

    $default  reduce using rule 4 (program)


State 9

    3 program: program declassignment . ';'

    ';'  shift, and go to state 11


State 10

    6 functiondefinition: type . ID $@1 '(' opt_parameterlist ')' '{' statementlist '}'
   41 declassignment: type . ID
   42               | type . ID '=' assignment

    ID  shift, and go to state 12


State 11

    3 program: program declassignment ';' .

    $default  reduce using rule 3 (program)


State 12

    6 functiondefinition: type ID . $@1 '(' opt_parameterlist ')' '{' statementlist '}'
   41 declassignment: type ID .
   42               | type ID . '=' assignment

    '='  shift, and go to state 13

    ';'       reduce using rule 41 (declassignment)
    $default  reduce using rule 5 ($@1)

    $@1  go to state 14


State 13

   42 declassignment: type ID '=' . assignment

    CONST_INT      shift, and go to state 15
    CONST_FLOAT    shift, and go to state 16
    CONST_BOOLEAN  shift, and go to state 17
    ID             shift, and go to state 18
    '-'            shift, and go to state 19
    '('            shift, and go to state 20

    functioncall  go to state 21
    assignment    go to state 22
    expr          go to state 23
    simpexpr      go to state 24


State 14

    6 functiondefinition: type ID $@1 . '(' opt_parameterlist ')' '{' statementlist '}'

    '('  shift, and go to state 25


State 15

   64 simpexpr: CONST_INT .

    $default  reduce using rule 64 (simpexpr)


State 16

   65 simpexpr: CONST_FLOAT .

    $default  reduce using rule 65 (simpexpr)


State 17

   66 simpexpr: CONST_BOOLEAN .

    $default  reduce using rule 66 (simpexpr)


State 18

   12 functioncall: ID . '(' opt_argumentlist ')'
   48 assignment: ID . '=' assignment
   68 simpexpr: ID .

    '('  shift, and go to state 26
    '='  shift, and go to state 27

    $default  reduce using rule 68 (simpexpr)


State 19

   63 simpexpr: '-' . simpexpr

    CONST_INT      shift, and go to state 15
    CONST_FLOAT    shift, and go to state 16
    CONST_BOOLEAN  shift, and go to state 17
    ID             shift, and go to state 28
    '-'            shift, and go to state 19
    '('            shift, and go to state 20

    functioncall  go to state 21
    simpexpr      go to state 29


State 20

   69 simpexpr: '(' . assignment ')'

    CONST_INT      shift, and go to state 15
    CONST_FLOAT    shift, and go to state 16
    CONST_BOOLEAN  shift, and go to state 17
    ID             shift, and go to state 18
    '-'            shift, and go to state 19
    '('            shift, and go to state 20

    functioncall  go to state 21
    assignment    go to state 30
    expr          go to state 23
    simpexpr      go to state 24


State 21

   67 simpexpr: functioncall .

    $default  reduce using rule 67 (simpexpr)


State 22

   42 declassignment: type ID '=' assignment .

    $default  reduce using rule 42 (declassignment)


State 23

   49 assignment: expr .

    $default  reduce using rule 49 (assignment)


State 24

   50 expr: simpexpr .
   51     | simpexpr . EQ simpexpr
   52     | simpexpr . NEQ simpexpr
   53     | simpexpr . LEQ simpexpr
   54     | simpexpr . GEQ simpexpr
   55     | simpexpr . LSS simpexpr
   56     | simpexpr . GRT simpexpr
   57 simpexpr: simpexpr . '+' simpexpr
   58         | simpexpr . '-' simpexpr
   59         | simpexpr . OR simpexpr
   60         | simpexpr . '*' simpexpr
   61         | simpexpr . '/' simpexpr
   62         | simpexpr . AND simpexpr

    AND  shift, and go to state 31
    OR   shift, and go to state 32
    EQ   shift, and go to state 33
    NEQ  shift, and go to state 34
    LEQ  shift, and go to state 35
    GEQ  shift, and go to state 36
    LSS  shift, and go to state 37
    GRT  shift, and go to state 38
    '+'  shift, and go to state 39
    '-'  shift, and go to state 40
    '*'  shift, and go to state 41
    '/'  shift, and go to state 42

    $default  reduce using rule 50 (expr)


State 25

    6 functiondefinition: type ID $@1 '(' . opt_parameterlist ')' '{' statementlist '}'

    KW_BOOLEAN  shift, and go to state 4
    KW_FLOAT    shift, and go to state 5
    KW_INT      shift, and go to state 6
    KW_VOID     shift, and go to state 7

    $default  reduce using rule 7 (opt_parameterlist)

    opt_parameterlist  go to state 43
    parameterlist      go to state 44
    parameter          go to state 45
    type               go to state 46


State 26

   12 functioncall: ID '(' . opt_argumentlist ')'

    CONST_INT      shift, and go to state 15
    CONST_FLOAT    shift, and go to state 16
    CONST_BOOLEAN  shift, and go to state 17
    ID             shift, and go to state 18
    '-'            shift, and go to state 19
    '('            shift, and go to state 20

    $default  reduce using rule 13 (opt_argumentlist)

    functioncall      go to state 21
    opt_argumentlist  go to state 47
    argumentlist      go to state 48
    assignment        go to state 49
    expr              go to state 23
    simpexpr          go to state 24


State 27

   48 assignment: ID '=' . assignment

    CONST_INT      shift, and go to state 15
    CONST_FLOAT    shift, and go to state 16
    CONST_BOOLEAN  shift, and go to state 17
    ID             shift, and go to state 18
    '-'            shift, and go to state 19
    '('            shift, and go to state 20

    functioncall  go to state 21
    assignment    go to state 50
    expr          go to state 23
    simpexpr      go to state 24


State 28

   12 functioncall: ID . '(' opt_argumentlist ')'
   68 simpexpr: ID .

    '('  shift, and go to state 26

    $default  reduce using rule 68 (simpexpr)


State 29

   57 simpexpr: simpexpr . '+' simpexpr
   58         | simpexpr . '-' simpexpr
   59         | simpexpr . OR simpexpr
   60         | simpexpr . '*' simpexpr
   61         | simpexpr . '/' simpexpr
   62         | simpexpr . AND simpexpr
   63         | '-' simpexpr .

    $default  reduce using rule 63 (simpexpr)


State 30

   69 simpexpr: '(' assignment . ')'

    ')'  shift, and go to state 51


State 31

   62 simpexpr: simpexpr AND . simpexpr

    CONST_INT      shift, and go to state 15
    CONST_FLOAT    shift, and go to state 16
    CONST_BOOLEAN  shift, and go to state 17
    ID             shift, and go to state 28
    '-'            shift, and go to state 19
    '('            shift, and go to state 20

    functioncall  go to state 21
    simpexpr      go to state 52


State 32

   59 simpexpr: simpexpr OR . simpexpr

    CONST_INT      shift, and go to state 15
    CONST_FLOAT    shift, and go to state 16
    CONST_BOOLEAN  shift, and go to state 17
    ID             shift, and go to state 28
    '-'            shift, and go to state 19
    '('            shift, and go to state 20

    functioncall  go to state 21
    simpexpr      go to state 53


State 33

   51 expr: simpexpr EQ . simpexpr

    CONST_INT      shift, and go to state 15
    CONST_FLOAT    shift, and go to state 16
    CONST_BOOLEAN  shift, and go to state 17
    ID             shift, and go to state 28
    '-'            shift, and go to state 19
    '('            shift, and go to state 20

    functioncall  go to state 21
    simpexpr      go to state 54


State 34

   52 expr: simpexpr NEQ . simpexpr

    CONST_INT      shift, and go to state 15
    CONST_FLOAT    shift, and go to state 16
    CONST_BOOLEAN  shift, and go to state 17
    ID             shift, and go to state 28
    '-'            shift, and go to state 19
    '('            shift, and go to state 20

    functioncall  go to state 21
    simpexpr      go to state 55


State 35

   53 expr: simpexpr LEQ . simpexpr

    CONST_INT      shift, and go to state 15
    CONST_FLOAT    shift, and go to state 16
    CONST_BOOLEAN  shift, and go to state 17
    ID             shift, and go to state 28
    '-'            shift, and go to state 19
    '('            shift, and go to state 20

    functioncall  go to state 21
    simpexpr      go to state 56


State 36

   54 expr: simpexpr GEQ . simpexpr

    CONST_INT      shift, and go to state 15
    CONST_FLOAT    shift, and go to state 16
    CONST_BOOLEAN  shift, and go to state 17
    ID             shift, and go to state 28
    '-'            shift, and go to state 19
    '('            shift, and go to state 20

    functioncall  go to state 21
    simpexpr      go to state 57


State 37

   55 expr: simpexpr LSS . simpexpr

    CONST_INT      shift, and go to state 15
    CONST_FLOAT    shift, and go to state 16
    CONST_BOOLEAN  shift, and go to state 17
    ID             shift, and go to state 28
    '-'            shift, and go to state 19
    '('            shift, and go to state 20

    functioncall  go to state 21
    simpexpr      go to state 58


State 38

   56 expr: simpexpr GRT . simpexpr

    CONST_INT      shift, and go to state 15
    CONST_FLOAT    shift, and go to state 16
    CONST_BOOLEAN  shift, and go to state 17
    ID             shift, and go to state 28
    '-'            shift, and go to state 19
    '('            shift, and go to state 20

    functioncall  go to state 21
    simpexpr      go to state 59


State 39

   57 simpexpr: simpexpr '+' . simpexpr

    CONST_INT      shift, and go to state 15
    CONST_FLOAT    shift, and go to state 16
    CONST_BOOLEAN  shift, and go to state 17
    ID             shift, and go to state 28
    '-'            shift, and go to state 19
    '('            shift, and go to state 20

    functioncall  go to state 21
    simpexpr      go to state 60


State 40

   58 simpexpr: simpexpr '-' . simpexpr

    CONST_INT      shift, and go to state 15
    CONST_FLOAT    shift, and go to state 16
    CONST_BOOLEAN  shift, and go to state 17
    ID             shift, and go to state 28
    '-'            shift, and go to state 19
    '('            shift, and go to state 20

    functioncall  go to state 21
    simpexpr      go to state 61


State 41

   60 simpexpr: simpexpr '*' . simpexpr

    CONST_INT      shift, and go to state 15
    CONST_FLOAT    shift, and go to state 16
    CONST_BOOLEAN  shift, and go to state 17
    ID             shift, and go to state 28
    '-'            shift, and go to state 19
    '('            shift, and go to state 20

    functioncall  go to state 21
    simpexpr      go to state 62


State 42

   61 simpexpr: simpexpr '/' . simpexpr

    CONST_INT      shift, and go to state 15
    CONST_FLOAT    shift, and go to state 16
    CONST_BOOLEAN  shift, and go to state 17
    ID             shift, and go to state 28
    '-'            shift, and go to state 19
    '('            shift, and go to state 20

    functioncall  go to state 21
    simpexpr      go to state 63


State 43

    6 functiondefinition: type ID $@1 '(' opt_parameterlist . ')' '{' statementlist '}'

    ')'  shift, and go to state 64


State 44

    8 opt_parameterlist: parameterlist .

    $default  reduce using rule 8 (opt_parameterlist)


State 45

    9 parameterlist: parameter .
   10              | parameter . ',' parameterlist

    ','  shift, and go to state 65

    $default  reduce using rule 9 (parameterlist)


State 46

   11 parameter: type . ID

    ID  shift, and go to state 66


State 47

   12 functioncall: ID '(' opt_argumentlist . ')'

    ')'  shift, and go to state 67


State 48

   14 opt_argumentlist: argumentlist .
   16 argumentlist: argumentlist . ',' assignment

    ','  shift, and go to state 68

    $default  reduce using rule 14 (opt_argumentlist)


State 49

   15 argumentlist: assignment .

    $default  reduce using rule 15 (argumentlist)


State 50

   48 assignment: ID '=' assignment .

    $default  reduce using rule 48 (assignment)


State 51

   69 simpexpr: '(' assignment ')' .

    $default  reduce using rule 69 (simpexpr)


State 52

   57 simpexpr: simpexpr . '+' simpexpr
   58         | simpexpr . '-' simpexpr
   59         | simpexpr . OR simpexpr
   60         | simpexpr . '*' simpexpr
   61         | simpexpr . '/' simpexpr
   62         | simpexpr . AND simpexpr
   62         | simpexpr AND simpexpr .

    $default  reduce using rule 62 (simpexpr)


State 53

   57 simpexpr: simpexpr . '+' simpexpr
   58         | simpexpr . '-' simpexpr
   59         | simpexpr . OR simpexpr
   59         | simpexpr OR simpexpr .
   60         | simpexpr . '*' simpexpr
   61         | simpexpr . '/' simpexpr
   62         | simpexpr . AND simpexpr

    AND  shift, and go to state 31
    '*'  shift, and go to state 41
    '/'  shift, and go to state 42

    $default  reduce using rule 59 (simpexpr)


State 54

   51 expr: simpexpr EQ simpexpr .
   57 simpexpr: simpexpr . '+' simpexpr
   58         | simpexpr . '-' simpexpr
   59         | simpexpr . OR simpexpr
   60         | simpexpr . '*' simpexpr
   61         | simpexpr . '/' simpexpr
   62         | simpexpr . AND simpexpr

    AND  shift, and go to state 31
    OR   shift, and go to state 32
    '+'  shift, and go to state 39
    '-'  shift, and go to state 40
    '*'  shift, and go to state 41
    '/'  shift, and go to state 42

    $default  reduce using rule 51 (expr)


State 55

   52 expr: simpexpr NEQ simpexpr .
   57 simpexpr: simpexpr . '+' simpexpr
   58         | simpexpr . '-' simpexpr
   59         | simpexpr . OR simpexpr
   60         | simpexpr . '*' simpexpr
   61         | simpexpr . '/' simpexpr
   62         | simpexpr . AND simpexpr

    AND  shift, and go to state 31
    OR   shift, and go to state 32
    '+'  shift, and go to state 39
    '-'  shift, and go to state 40
    '*'  shift, and go to state 41
    '/'  shift, and go to state 42

    $default  reduce using rule 52 (expr)


State 56

   53 expr: simpexpr LEQ simpexpr .
   57 simpexpr: simpexpr . '+' simpexpr
   58         | simpexpr . '-' simpexpr
   59         | simpexpr . OR simpexpr
   60         | simpexpr . '*' simpexpr
   61         | simpexpr . '/' simpexpr
   62         | simpexpr . AND simpexpr

    AND  shift, and go to state 31
    OR   shift, and go to state 32
    '+'  shift, and go to state 39
    '-'  shift, and go to state 40
    '*'  shift, and go to state 41
    '/'  shift, and go to state 42

    $default  reduce using rule 53 (expr)


State 57

   54 expr: simpexpr GEQ simpexpr .
   57 simpexpr: simpexpr . '+' simpexpr
   58         | simpexpr . '-' simpexpr
   59         | simpexpr . OR simpexpr
   60         | simpexpr . '*' simpexpr
   61         | simpexpr . '/' simpexpr
   62         | simpexpr . AND simpexpr

    AND  shift, and go to state 31
    OR   shift, and go to state 32
    '+'  shift, and go to state 39
    '-'  shift, and go to state 40
    '*'  shift, and go to state 41
    '/'  shift, and go to state 42

    $default  reduce using rule 54 (expr)


State 58

   55 expr: simpexpr LSS simpexpr .
   57 simpexpr: simpexpr . '+' simpexpr
   58         | simpexpr . '-' simpexpr
   59         | simpexpr . OR simpexpr
   60         | simpexpr . '*' simpexpr
   61         | simpexpr . '/' simpexpr
   62         | simpexpr . AND simpexpr

    AND  shift, and go to state 31
    OR   shift, and go to state 32
    '+'  shift, and go to state 39
    '-'  shift, and go to state 40
    '*'  shift, and go to state 41
    '/'  shift, and go to state 42

    $default  reduce using rule 55 (expr)


State 59

   56 expr: simpexpr GRT simpexpr .
   57 simpexpr: simpexpr . '+' simpexpr
   58         | simpexpr . '-' simpexpr
   59         | simpexpr . OR simpexpr
   60         | simpexpr . '*' simpexpr
   61         | simpexpr . '/' simpexpr
   62         | simpexpr . AND simpexpr

    AND  shift, and go to state 31
    OR   shift, and go to state 32
    '+'  shift, and go to state 39
    '-'  shift, and go to state 40
    '*'  shift, and go to state 41
    '/'  shift, and go to state 42

    $default  reduce using rule 56 (expr)


State 60

   57 simpexpr: simpexpr . '+' simpexpr
   57         | simpexpr '+' simpexpr .
   58         | simpexpr . '-' simpexpr
   59         | simpexpr . OR simpexpr
   60         | simpexpr . '*' simpexpr
   61         | simpexpr . '/' simpexpr
   62         | simpexpr . AND simpexpr

    AND  shift, and go to state 31
    '*'  shift, and go to state 41
    '/'  shift, and go to state 42

    $default  reduce using rule 57 (simpexpr)


State 61

   57 simpexpr: simpexpr . '+' simpexpr
   58         | simpexpr . '-' simpexpr
   58         | simpexpr '-' simpexpr .
   59         | simpexpr . OR simpexpr
   60         | simpexpr . '*' simpexpr
   61         | simpexpr . '/' simpexpr
   62         | simpexpr . AND simpexpr

    AND  shift, and go to state 31
    '*'  shift, and go to state 41
    '/'  shift, and go to state 42

    $default  reduce using rule 58 (simpexpr)


State 62

   57 simpexpr: simpexpr . '+' simpexpr
   58         | simpexpr . '-' simpexpr
   59         | simpexpr . OR simpexpr
   60         | simpexpr . '*' simpexpr
   60         | simpexpr '*' simpexpr .
   61         | simpexpr . '/' simpexpr
   62         | simpexpr . AND simpexpr

    $default  reduce using rule 60 (simpexpr)


State 63

   57 simpexpr: simpexpr . '+' simpexpr
   58         | simpexpr . '-' simpexpr
   59         | simpexpr . OR simpexpr
   60         | simpexpr . '*' simpexpr
   61         | simpexpr . '/' simpexpr
   61         | simpexpr '/' simpexpr .
   62         | simpexpr . AND simpexpr

    $default  reduce using rule 61 (simpexpr)


State 64

    6 functiondefinition: type ID $@1 '(' opt_parameterlist ')' . '{' statementlist '}'

    '{'  shift, and go to state 69


State 65

   10 parameterlist: parameter ',' . parameterlist

    KW_BOOLEAN  shift, and go to state 4
    KW_FLOAT    shift, and go to state 5
    KW_INT      shift, and go to state 6
    KW_VOID     shift, and go to state 7

    parameterlist  go to state 70
    parameter      go to state 45
    type           go to state 46


State 66

   11 parameter: type ID .

    $default  reduce using rule 11 (parameter)


State 67

   12 functioncall: ID '(' opt_argumentlist ')' .

    $default  reduce using rule 12 (functioncall)


State 68

   16 argumentlist: argumentlist ',' . assignment

    CONST_INT      shift, and go to state 15
    CONST_FLOAT    shift, and go to state 16
    CONST_BOOLEAN  shift, and go to state 17
    ID             shift, and go to state 18
    '-'            shift, and go to state 19
    '('            shift, and go to state 20

    functioncall  go to state 21
    assignment    go to state 71
    expr          go to state 23
    simpexpr      go to state 24


State 69

    6 functiondefinition: type ID $@1 '(' opt_parameterlist ')' '{' . statementlist '}'

    $default  reduce using rule 17 (statementlist)

    statementlist  go to state 72


State 70

   10 parameterlist: parameter ',' parameterlist .

    $default  reduce using rule 10 (parameterlist)


State 71

   16 argumentlist: argumentlist ',' assignment .

    $default  reduce using rule 16 (argumentlist)


State 72

    6 functiondefinition: type ID $@1 '(' opt_parameterlist ')' '{' statementlist . '}'
   18 statementlist: statementlist . statement

    KW_BOOLEAN  shift, and go to state 4
    KW_DO       shift, and go to state 73
    KW_FLOAT    shift, and go to state 5
    KW_FOR      shift, and go to state 74
    KW_IF       shift, and go to state 75
    KW_INT      shift, and go to state 6
    KW_PRINTF   shift, and go to state 76
    KW_RETURN   shift, and go to state 77
    KW_VOID     shift, and go to state 7
    KW_WHILE    shift, and go to state 78
    ID          shift, and go to state 79
    '{'         shift, and go to state 80
    '}'         shift, and go to state 81

    functioncall      go to state 82
    block             go to state 83
    statement         go to state 84
    ifstatement       go to state 85
    forstatement      go to state 86
    dowhilestatement  go to state 87
    whilestatement    go to state 88
    returnstatement   go to state 89
    printf            go to state 90
    declassignment    go to state 91
    type              go to state 92
    statassignment    go to state 93


State 73

   35 dowhilestatement: KW_DO . statement KW_WHILE '(' assignment ')'

    KW_BOOLEAN  shift, and go to state 4
    KW_DO       shift, and go to state 73
    KW_FLOAT    shift, and go to state 5
    KW_FOR      shift, and go to state 74
    KW_IF       shift, and go to state 75
    KW_INT      shift, and go to state 6
    KW_PRINTF   shift, and go to state 76
    KW_RETURN   shift, and go to state 77
    KW_VOID     shift, and go to state 7
    KW_WHILE    shift, and go to state 78
    ID          shift, and go to state 79
    '{'         shift, and go to state 80

    functioncall      go to state 82
    block             go to state 83
    statement         go to state 94
    ifstatement       go to state 85
    forstatement      go to state 86
    dowhilestatement  go to state 87
    whilestatement    go to state 88
    returnstatement   go to state 89
    printf            go to state 90
    declassignment    go to state 91
    type              go to state 92
    statassignment    go to state 93


State 74

   33 forstatement: KW_FOR . '(' declassignment ';' expr ';' statassignment ')' statement
   34             | KW_FOR . '(' statassignment ';' expr ';' statassignment ')' statement

    '('  shift, and go to state 95


State 75

   30 ifstatement: KW_IF . '(' assignment ')' statement opt_else

    '('  shift, and go to state 96


State 76

   39 printf: KW_PRINTF . '(' assignment ')'
   40       | KW_PRINTF . '(' CONST_STRING ')'

    '('  shift, and go to state 97


State 77

   37 returnstatement: KW_RETURN .
   38                | KW_RETURN . assignment

    CONST_INT      shift, and go to state 15
    CONST_FLOAT    shift, and go to state 16
    CONST_BOOLEAN  shift, and go to state 17
    ID             shift, and go to state 18
    '-'            shift, and go to state 19
    '('            shift, and go to state 20

    $default  reduce using rule 37 (returnstatement)

    functioncall  go to state 21
    assignment    go to state 98
    expr          go to state 23
    simpexpr      go to state 24


State 78

   36 whilestatement: KW_WHILE . '(' assignment ')' statement

    '('  shift, and go to state 99


State 79

   12 functioncall: ID . '(' opt_argumentlist ')'
   47 statassignment: ID . '=' assignment

    '('  shift, and go to state 26
    '='  shift, and go to state 100


State 80

   19 block: '{' . statementlist '}'

    $default  reduce using rule 17 (statementlist)

    statementlist  go to state 101


State 81

    6 functiondefinition: type ID $@1 '(' opt_parameterlist ')' '{' statementlist '}' .

    $default  reduce using rule 6 (functiondefinition)


State 82

   28 statement: functioncall . ';'

    ';'  shift, and go to state 102


State 83

   29 statement: block .

    $default  reduce using rule 29 (statement)


State 84

   18 statementlist: statementlist statement .

    $default  reduce using rule 18 (statementlist)


State 85

   20 statement: ifstatement .

    $default  reduce using rule 20 (statement)


State 86

   21 statement: forstatement .

    $default  reduce using rule 21 (statement)


State 87

   24 statement: dowhilestatement . ';'

    ';'  shift, and go to state 103


State 88

   22 statement: whilestatement .

    $default  reduce using rule 22 (statement)


State 89

   23 statement: returnstatement . ';'

    ';'  shift, and go to state 104


State 90

   25 statement: printf . ';'

    ';'  shift, and go to state 105


State 91

   26 statement: declassignment . ';'

    ';'  shift, and go to state 106


State 92

   41 declassignment: type . ID
   42               | type . ID '=' assignment

    ID  shift, and go to state 107


State 93

   27 statement: statassignment . ';'

    ';'  shift, and go to state 108


State 94

   35 dowhilestatement: KW_DO statement . KW_WHILE '(' assignment ')'

    KW_WHILE  shift, and go to state 109


State 95

   33 forstatement: KW_FOR '(' . declassignment ';' expr ';' statassignment ')' statement
   34             | KW_FOR '(' . statassignment ';' expr ';' statassignment ')' statement

    KW_BOOLEAN  shift, and go to state 4
    KW_FLOAT    shift, and go to state 5
    KW_INT      shift, and go to state 6
    KW_VOID     shift, and go to state 7
    ID          shift, and go to state 110

    declassignment  go to state 111
    type            go to state 92
    statassignment  go to state 112


State 96

   30 ifstatement: KW_IF '(' . assignment ')' statement opt_else

    CONST_INT      shift, and go to state 15
    CONST_FLOAT    shift, and go to state 16
    CONST_BOOLEAN  shift, and go to state 17
    ID             shift, and go to state 18
    '-'            shift, and go to state 19
    '('            shift, and go to state 20

    functioncall  go to state 21
    assignment    go to state 113
    expr          go to state 23
    simpexpr      go to state 24


State 97

   39 printf: KW_PRINTF '(' . assignment ')'
   40       | KW_PRINTF '(' . CONST_STRING ')'

    CONST_INT      shift, and go to state 15
    CONST_FLOAT    shift, and go to state 16
    CONST_BOOLEAN  shift, and go to state 17
    CONST_STRING   shift, and go to state 114
    ID             shift, and go to state 18
    '-'            shift, and go to state 19
    '('            shift, and go to state 20

    functioncall  go to state 21
    assignment    go to state 115
    expr          go to state 23
    simpexpr      go to state 24


State 98

   38 returnstatement: KW_RETURN assignment .

    $default  reduce using rule 38 (returnstatement)


State 99

   36 whilestatement: KW_WHILE '(' . assignment ')' statement

    CONST_INT      shift, and go to state 15
    CONST_FLOAT    shift, and go to state 16
    CONST_BOOLEAN  shift, and go to state 17
    ID             shift, and go to state 18
    '-'            shift, and go to state 19
    '('            shift, and go to state 20

    functioncall  go to state 21
    assignment    go to state 116
    expr          go to state 23
    simpexpr      go to state 24


State 100

   47 statassignment: ID '=' . assignment

    CONST_INT      shift, and go to state 15
    CONST_FLOAT    shift, and go to state 16
    CONST_BOOLEAN  shift, and go to state 17
    ID             shift, and go to state 18
    '-'            shift, and go to state 19
    '('            shift, and go to state 20

    functioncall  go to state 21
    assignment    go to state 117
    expr          go to state 23
    simpexpr      go to state 24


State 101

   18 statementlist: statementlist . statement
   19 block: '{' statementlist . '}'

    KW_BOOLEAN  shift, and go to state 4
    KW_DO       shift, and go to state 73
    KW_FLOAT    shift, and go to state 5
    KW_FOR      shift, and go to state 74
    KW_IF       shift, and go to state 75
    KW_INT      shift, and go to state 6
    KW_PRINTF   shift, and go to state 76
    KW_RETURN   shift, and go to state 77
    KW_VOID     shift, and go to state 7
    KW_WHILE    shift, and go to state 78
    ID          shift, and go to state 79
    '{'         shift, and go to state 80
    '}'         shift, and go to state 118

    functioncall      go to state 82
    block             go to state 83
    statement         go to state 84
    ifstatement       go to state 85
    forstatement      go to state 86
    dowhilestatement  go to state 87
    whilestatement    go to state 88
    returnstatement   go to state 89
    printf            go to state 90
    declassignment    go to state 91
    type              go to state 92
    statassignment    go to state 93


State 102

   28 statement: functioncall ';' .

    $default  reduce using rule 28 (statement)


State 103

   24 statement: dowhilestatement ';' .

    $default  reduce using rule 24 (statement)


State 104

   23 statement: returnstatement ';' .

    $default  reduce using rule 23 (statement)


State 105

   25 statement: printf ';' .

    $default  reduce using rule 25 (statement)


State 106

   26 statement: declassignment ';' .

    $default  reduce using rule 26 (statement)


State 107

   41 declassignment: type ID .
   42               | type ID . '=' assignment

    '='  shift, and go to state 13

    $default  reduce using rule 41 (declassignment)


State 108

   27 statement: statassignment ';' .

    $default  reduce using rule 27 (statement)


State 109

   35 dowhilestatement: KW_DO statement KW_WHILE . '(' assignment ')'

    '('  shift, and go to state 119


State 110

   47 statassignment: ID . '=' assignment

    '='  shift, and go to state 100


State 111

   33 forstatement: KW_FOR '(' declassignment . ';' expr ';' statassignment ')' statement

    ';'  shift, and go to state 120


State 112

   34 forstatement: KW_FOR '(' statassignment . ';' expr ';' statassignment ')' statement

    ';'  shift, and go to state 121


State 113

   30 ifstatement: KW_IF '(' assignment . ')' statement opt_else

    ')'  shift, and go to state 122


State 114

   40 printf: KW_PRINTF '(' CONST_STRING . ')'

    ')'  shift, and go to state 123


State 115

   39 printf: KW_PRINTF '(' assignment . ')'

    ')'  shift, and go to state 124


State 116

   36 whilestatement: KW_WHILE '(' assignment . ')' statement

    ')'  shift, and go to state 125


State 117

   47 statassignment: ID '=' assignment .

    $default  reduce using rule 47 (statassignment)


State 118

   19 block: '{' statementlist '}' .

    $default  reduce using rule 19 (block)


State 119

   35 dowhilestatement: KW_DO statement KW_WHILE '(' . assignment ')'

    CONST_INT      shift, and go to state 15
    CONST_FLOAT    shift, and go to state 16
    CONST_BOOLEAN  shift, and go to state 17
    ID             shift, and go to state 18
    '-'            shift, and go to state 19
    '('            shift, and go to state 20

    functioncall  go to state 21
    assignment    go to state 126
    expr          go to state 23
    simpexpr      go to state 24


State 120

   33 forstatement: KW_FOR '(' declassignment ';' . expr ';' statassignment ')' statement

    CONST_INT      shift, and go to state 15
    CONST_FLOAT    shift, and go to state 16
    CONST_BOOLEAN  shift, and go to state 17
    ID             shift, and go to state 28
    '-'            shift, and go to state 19
    '('            shift, and go to state 20

    functioncall  go to state 21
    expr          go to state 127
    simpexpr      go to state 24


State 121

   34 forstatement: KW_FOR '(' statassignment ';' . expr ';' statassignment ')' statement

    CONST_INT      shift, and go to state 15
    CONST_FLOAT    shift, and go to state 16
    CONST_BOOLEAN  shift, and go to state 17
    ID             shift, and go to state 28
    '-'            shift, and go to state 19
    '('            shift, and go to state 20

    functioncall  go to state 21
    expr          go to state 128
    simpexpr      go to state 24


State 122

   30 ifstatement: KW_IF '(' assignment ')' . statement opt_else

    KW_BOOLEAN  shift, and go to state 4
    KW_DO       shift, and go to state 73
    KW_FLOAT    shift, and go to state 5
    KW_FOR      shift, and go to state 74
    KW_IF       shift, and go to state 75
    KW_INT      shift, and go to state 6
    KW_PRINTF   shift, and go to state 76
    KW_RETURN   shift, and go to state 77
    KW_VOID     shift, and go to state 7
    KW_WHILE    shift, and go to state 78
    ID          shift, and go to state 79
    '{'         shift, and go to state 80

    functioncall      go to state 82
    block             go to state 83
    statement         go to state 129
    ifstatement       go to state 85
    forstatement      go to state 86
    dowhilestatement  go to state 87
    whilestatement    go to state 88
    returnstatement   go to state 89
    printf            go to state 90
    declassignment    go to state 91
    type              go to state 92
    statassignment    go to state 93


State 123

   40 printf: KW_PRINTF '(' CONST_STRING ')' .

    $default  reduce using rule 40 (printf)


State 124

   39 printf: KW_PRINTF '(' assignment ')' .

    $default  reduce using rule 39 (printf)


State 125

   36 whilestatement: KW_WHILE '(' assignment ')' . statement

    KW_BOOLEAN  shift, and go to state 4
    KW_DO       shift, and go to state 73
    KW_FLOAT    shift, and go to state 5
    KW_FOR      shift, and go to state 74
    KW_IF       shift, and go to state 75
    KW_INT      shift, and go to state 6
    KW_PRINTF   shift, and go to state 76
    KW_RETURN   shift, and go to state 77
    KW_VOID     shift, and go to state 7
    KW_WHILE    shift, and go to state 78
    ID          shift, and go to state 79
    '{'         shift, and go to state 80

    functioncall      go to state 82
    block             go to state 83
    statement         go to state 130
    ifstatement       go to state 85
    forstatement      go to state 86
    dowhilestatement  go to state 87
    whilestatement    go to state 88
    returnstatement   go to state 89
    printf            go to state 90
    declassignment    go to state 91
    type              go to state 92
    statassignment    go to state 93


State 126

   35 dowhilestatement: KW_DO statement KW_WHILE '(' assignment . ')'

    ')'  shift, and go to state 131


State 127

   33 forstatement: KW_FOR '(' declassignment ';' expr . ';' statassignment ')' statement

    ';'  shift, and go to state 132


State 128

   34 forstatement: KW_FOR '(' statassignment ';' expr . ';' statassignment ')' statement

    ';'  shift, and go to state 133


State 129

   30 ifstatement: KW_IF '(' assignment ')' statement . opt_else

    KW_ELSE  shift, and go to state 134

    $default  reduce using rule 31 (opt_else)

    opt_else  go to state 135


State 130

   36 whilestatement: KW_WHILE '(' assignment ')' statement .

    $default  reduce using rule 36 (whilestatement)


State 131

   35 dowhilestatement: KW_DO statement KW_WHILE '(' assignment ')' .

    $default  reduce using rule 35 (dowhilestatement)


State 132

   33 forstatement: KW_FOR '(' declassignment ';' expr ';' . statassignment ')' statement

    ID  shift, and go to state 110

    statassignment  go to state 136


State 133

   34 forstatement: KW_FOR '(' statassignment ';' expr ';' . statassignment ')' statement

    ID  shift, and go to state 110

    statassignment  go to state 137


State 134

   32 opt_else: KW_ELSE . statement

    KW_BOOLEAN  shift, and go to state 4
    KW_DO       shift, and go to state 73
    KW_FLOAT    shift, and go to state 5
    KW_FOR      shift, and go to state 74
    KW_IF       shift, and go to state 75
    KW_INT      shift, and go to state 6
    KW_PRINTF   shift, and go to state 76
    KW_RETURN   shift, and go to state 77
    KW_VOID     shift, and go to state 7
    KW_WHILE    shift, and go to state 78
    ID          shift, and go to state 79
    '{'         shift, and go to state 80

    functioncall      go to state 82
    block             go to state 83
    statement         go to state 138
    ifstatement       go to state 85
    forstatement      go to state 86
    dowhilestatement  go to state 87
    whilestatement    go to state 88
    returnstatement   go to state 89
    printf            go to state 90
    declassignment    go to state 91
    type              go to state 92
    statassignment    go to state 93


State 135

   30 ifstatement: KW_IF '(' assignment ')' statement opt_else .

    $default  reduce using rule 30 (ifstatement)


State 136

   33 forstatement: KW_FOR '(' declassignment ';' expr ';' statassignment . ')' statement

    ')'  shift, and go to state 139


State 137

   34 forstatement: KW_FOR '(' statassignment ';' expr ';' statassignment . ')' statement

    ')'  shift, and go to state 140


State 138

   32 opt_else: KW_ELSE statement .

    $default  reduce using rule 32 (opt_else)


State 139

   33 forstatement: KW_FOR '(' declassignment ';' expr ';' statassignment ')' . statement

    KW_BOOLEAN  shift, and go to state 4
    KW_DO       shift, and go to state 73
    KW_FLOAT    shift, and go to state 5
    KW_FOR      shift, and go to state 74
    KW_IF       shift, and go to state 75
    KW_INT      shift, and go to state 6
    KW_PRINTF   shift, and go to state 76
    KW_RETURN   shift, and go to state 77
    KW_VOID     shift, and go to state 7
    KW_WHILE    shift, and go to state 78
    ID          shift, and go to state 79
    '{'         shift, and go to state 80

    functioncall      go to state 82
    block             go to state 83
    statement         go to state 141
    ifstatement       go to state 85
    forstatement      go to state 86
    dowhilestatement  go to state 87
    whilestatement    go to state 88
    returnstatement   go to state 89
    printf            go to state 90
    declassignment    go to state 91
    type              go to state 92
    statassignment    go to state 93


State 140

   34 forstatement: KW_FOR '(' statassignment ';' expr ';' statassignment ')' . statement

    KW_BOOLEAN  shift, and go to state 4
    KW_DO       shift, and go to state 73
    KW_FLOAT    shift, and go to state 5
    KW_FOR      shift, and go to state 74
    KW_IF       shift, and go to state 75
    KW_INT      shift, and go to state 6
    KW_PRINTF   shift, and go to state 76
    KW_RETURN   shift, and go to state 77
    KW_VOID     shift, and go to state 7
    KW_WHILE    shift, and go to state 78
    ID          shift, and go to state 79
    '{'         shift, and go to state 80

    functioncall      go to state 82
    block             go to state 83
    statement         go to state 142
    ifstatement       go to state 85
    forstatement      go to state 86
    dowhilestatement  go to state 87
    whilestatement    go to state 88
    returnstatement   go to state 89
    printf            go to state 90
    declassignment    go to state 91
    type              go to state 92
    statassignment    go to state 93


State 141

   33 forstatement: KW_FOR '(' declassignment ';' expr ';' statassignment ')' statement .

    $default  reduce using rule 33 (forstatement)


State 142

   34 forstatement: KW_FOR '(' statassignment ';' expr ';' statassignment ')' statement .

    $default  reduce using rule 34 (forstatement)
