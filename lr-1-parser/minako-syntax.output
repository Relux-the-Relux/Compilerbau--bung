State 0 conflicts: 4 shift/reduce
State 83 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: declassignment ';'
    2        | functiondefinitions

    3 functiondefinitions: %empty
    4                    | functiondefinitions functiondefinition

    5 functiondefinition: type id '(' parameterdefinition ')' '{' statementlist '}'
    6                   | type id '(' ')' '{' statementlist '}'

    7 parameterdefinition: type id
    8                    | type id ',' parameterdefinition

    9 functioncall: id '(' ')'
   10             | id '(' parameterlist ')'

   11 parameterlist: assignment
   12              | assignment ',' parameterlist

   13 statementlist: %empty
   14              | statementlist block

   15 block: '{' statementlist '}'
   16      | statement

   17 statement: ifstatement
   18          | forstatement
   19          | whilestatement
   20          | returnstatement
   21          | dowhilestatement
   22          | printf ';'
   23          | declassignment ';'
   24          | statassignment ';'
   25          | functioncall ';'

   26 ifstatement: "if" '(' assignment ')' block
   27            | "if" '(' assignment ')' "else" block

   28 forstatement: "for" '(' statassignment ';' expr ';' statassignment ')' block
   29             | "for" '(' declassignment ';' expr ';' statassignment ')' block

   30 dowhilestatement: "do" block "while" '(' assignment ')'

   31 whilestatement: "while" '(' assignment ')' block

   32 returnstatement: "return"
   33                | "return" assignment

   34 printf: "printf" '(' assignment ')'
   35       | "printf" '(' "string literal" ')'

   36 declassignment: type id
   37               | type id '=' assignment

   38 type: "bool"
   39     | "float"
   40     | "int"
   41     | "void"

   42 statassignment: id '=' assignment

   43 assignment: id '=' assignment
   44           | expr

   45 expr: simpexpr
   46     | simpexpr extraexpr

   47 extraexpr: "==" simpexpr
   48          | "!=" simpexpr
   49          | "<=" simpexpr
   50          | ">=" simpexpr
   51          | "<" simpexpr
   52          | ">" simpexpr

   53 simpexpr: '-' term extraterm
   54         | term extraterm

   55 extraterm: %empty
   56          | extraterm '+' term
   57          | extraterm '-' term
   58          | extraterm "||" term

   59 term: factor extrafactor

   60 extrafactor: %empty
   61            | extrafactor '*' factor
   62            | extrafactor '/' factor
   63            | extrafactor "&&" factor

   64 factor: "integer literal"
   65       | "float literal"
   66       | "boolean literal"
   67       | functioncall
   68       | id
   69       | '(' assignment ')'

   70 id: "identifier"


Terminals, with rules where they appear

$end (0) 0
'(' (40) 5 6 9 10 26 27 28 29 30 31 34 35 69
')' (41) 5 6 9 10 26 27 28 29 30 31 34 35 69
'*' (42) 61
'+' (43) 56
',' (44) 8 12
'-' (45) 53 57
'/' (47) 62
';' (59) 1 22 23 24 25 28 29
'=' (61) 37 42 43
'{' (123) 5 6 15
'}' (125) 5 6 15
error (256)
"&&" (258) 63
"||" (259) 58
"==" (260) 47
"!=" (261) 48
"<=" (262) 49
">=" (263) 50
"<" (264) 51
">" (265) 52
"bool" (266) 38
"do" (267) 30
"else" (268) 27
"float" (269) 39
"for" (270) 28 29
"if" (271) 26 27
"int" (272) 40
"printf" (273) 34 35
"return" (274) 32 33
"void" (275) 41
"while" (276) 30 31
"integer literal" (277) 64
"float literal" (278) 65
"boolean literal" (279) 66
"string literal" (280) 35
"identifier" (281) 70


Nonterminals, with rules where they appear

$accept (38)
    on left: 0
program (39)
    on left: 1 2, on right: 0
functiondefinitions (40)
    on left: 3 4, on right: 2 4
functiondefinition (41)
    on left: 5 6, on right: 4
parameterdefinition (42)
    on left: 7 8, on right: 5 8
functioncall (43)
    on left: 9 10, on right: 25 67
parameterlist (44)
    on left: 11 12, on right: 10 12
statementlist (45)
    on left: 13 14, on right: 5 6 14 15
block (46)
    on left: 15 16, on right: 14 26 27 28 29 30 31
statement (47)
    on left: 17 18 19 20 21 22 23 24 25, on right: 16
ifstatement (48)
    on left: 26 27, on right: 17
forstatement (49)
    on left: 28 29, on right: 18
dowhilestatement (50)
    on left: 30, on right: 21
whilestatement (51)
    on left: 31, on right: 19
returnstatement (52)
    on left: 32 33, on right: 20
printf (53)
    on left: 34 35, on right: 22
declassignment (54)
    on left: 36 37, on right: 1 23 29
type (55)
    on left: 38 39 40 41, on right: 5 6 7 8 36 37
statassignment (56)
    on left: 42, on right: 24 28 29
assignment (57)
    on left: 43 44, on right: 11 12 26 27 30 31 33 34 37 42 43 69
expr (58)
    on left: 45 46, on right: 28 29 44
extraexpr (59)
    on left: 47 48 49 50 51 52, on right: 46
simpexpr (60)
    on left: 53 54, on right: 45 46 47 48 49 50 51 52
extraterm (61)
    on left: 55 56 57 58, on right: 53 54 56 57 58
term (62)
    on left: 59, on right: 53 54 56 57 58
extrafactor (63)
    on left: 60 61 62 63, on right: 59 61 62 63
factor (64)
    on left: 64 65 66 67 68 69, on right: 59 61 62 63
id (65)
    on left: 70, on right: 5 6 7 8 9 10 36 37 42 43 68


State 0

    0 $accept: . program $end

    "bool"   shift, and go to state 1
    "float"  shift, and go to state 2
    "int"    shift, and go to state 3
    "void"   shift, and go to state 4

    "bool"    [reduce using rule 3 (functiondefinitions)]
    "float"   [reduce using rule 3 (functiondefinitions)]
    "int"     [reduce using rule 3 (functiondefinitions)]
    "void"    [reduce using rule 3 (functiondefinitions)]
    $default  reduce using rule 3 (functiondefinitions)

    program              go to state 5
    functiondefinitions  go to state 6
    declassignment       go to state 7
    type                 go to state 8


State 1

   38 type: "bool" .

    $default  reduce using rule 38 (type)


State 2

   39 type: "float" .

    $default  reduce using rule 39 (type)


State 3

   40 type: "int" .

    $default  reduce using rule 40 (type)


State 4

   41 type: "void" .

    $default  reduce using rule 41 (type)


State 5

    0 $accept: program . $end

    $end  shift, and go to state 9


State 6

    2 program: functiondefinitions .
    4 functiondefinitions: functiondefinitions . functiondefinition

    "bool"   shift, and go to state 1
    "float"  shift, and go to state 2
    "int"    shift, and go to state 3
    "void"   shift, and go to state 4

    $default  reduce using rule 2 (program)

    functiondefinition  go to state 10
    type                go to state 11


State 7

    1 program: declassignment . ';'

    ';'  shift, and go to state 12


State 8

   36 declassignment: type . id
   37               | type . id '=' assignment

    "identifier"  shift, and go to state 13

    id  go to state 14


State 9

    0 $accept: program $end .

    $default  accept


State 10

    4 functiondefinitions: functiondefinitions functiondefinition .

    $default  reduce using rule 4 (functiondefinitions)


State 11

    5 functiondefinition: type . id '(' parameterdefinition ')' '{' statementlist '}'
    6                   | type . id '(' ')' '{' statementlist '}'

    "identifier"  shift, and go to state 13

    id  go to state 15


State 12

    1 program: declassignment ';' .

    $default  reduce using rule 1 (program)


State 13

   70 id: "identifier" .

    $default  reduce using rule 70 (id)


State 14

   36 declassignment: type id .
   37               | type id . '=' assignment

    '='  shift, and go to state 16

    $default  reduce using rule 36 (declassignment)


State 15

    5 functiondefinition: type id . '(' parameterdefinition ')' '{' statementlist '}'
    6                   | type id . '(' ')' '{' statementlist '}'

    '('  shift, and go to state 17


State 16

   37 declassignment: type id '=' . assignment

    '-'                shift, and go to state 18
    "integer literal"  shift, and go to state 19
    "float literal"    shift, and go to state 20
    "boolean literal"  shift, and go to state 21
    "identifier"       shift, and go to state 13
    '('                shift, and go to state 22

    functioncall  go to state 23
    assignment    go to state 24
    expr          go to state 25
    simpexpr      go to state 26
    term          go to state 27
    factor        go to state 28
    id            go to state 29


State 17

    5 functiondefinition: type id '(' . parameterdefinition ')' '{' statementlist '}'
    6                   | type id '(' . ')' '{' statementlist '}'

    "bool"   shift, and go to state 1
    "float"  shift, and go to state 2
    "int"    shift, and go to state 3
    "void"   shift, and go to state 4
    ')'      shift, and go to state 30

    parameterdefinition  go to state 31
    type                 go to state 32


State 18

   53 simpexpr: '-' . term extraterm

    "integer literal"  shift, and go to state 19
    "float literal"    shift, and go to state 20
    "boolean literal"  shift, and go to state 21
    "identifier"       shift, and go to state 13
    '('                shift, and go to state 22

    functioncall  go to state 23
    term          go to state 33
    factor        go to state 28
    id            go to state 34


State 19

   64 factor: "integer literal" .

    $default  reduce using rule 64 (factor)


State 20

   65 factor: "float literal" .

    $default  reduce using rule 65 (factor)


State 21

   66 factor: "boolean literal" .

    $default  reduce using rule 66 (factor)


State 22

   69 factor: '(' . assignment ')'

    '-'                shift, and go to state 18
    "integer literal"  shift, and go to state 19
    "float literal"    shift, and go to state 20
    "boolean literal"  shift, and go to state 21
    "identifier"       shift, and go to state 13
    '('                shift, and go to state 22

    functioncall  go to state 23
    assignment    go to state 35
    expr          go to state 25
    simpexpr      go to state 26
    term          go to state 27
    factor        go to state 28
    id            go to state 29


State 23

   67 factor: functioncall .

    $default  reduce using rule 67 (factor)


State 24

   37 declassignment: type id '=' assignment .

    $default  reduce using rule 37 (declassignment)


State 25

   44 assignment: expr .

    $default  reduce using rule 44 (assignment)


State 26

   45 expr: simpexpr .
   46     | simpexpr . extraexpr

    "=="  shift, and go to state 36
    "!="  shift, and go to state 37
    "<="  shift, and go to state 38
    ">="  shift, and go to state 39
    "<"   shift, and go to state 40
    ">"   shift, and go to state 41

    $default  reduce using rule 45 (expr)

    extraexpr  go to state 42


State 27

   54 simpexpr: term . extraterm

    $default  reduce using rule 55 (extraterm)

    extraterm  go to state 43


State 28

   59 term: factor . extrafactor

    $default  reduce using rule 60 (extrafactor)

    extrafactor  go to state 44


State 29

    9 functioncall: id . '(' ')'
   10             | id . '(' parameterlist ')'
   43 assignment: id . '=' assignment
   68 factor: id .

    '('  shift, and go to state 45
    '='  shift, and go to state 46

    $default  reduce using rule 68 (factor)


State 30

    6 functiondefinition: type id '(' ')' . '{' statementlist '}'

    '{'  shift, and go to state 47


State 31

    5 functiondefinition: type id '(' parameterdefinition . ')' '{' statementlist '}'

    ')'  shift, and go to state 48


State 32

    7 parameterdefinition: type . id
    8                    | type . id ',' parameterdefinition

    "identifier"  shift, and go to state 13

    id  go to state 49


State 33

   53 simpexpr: '-' term . extraterm

    $default  reduce using rule 55 (extraterm)

    extraterm  go to state 50


State 34

    9 functioncall: id . '(' ')'
   10             | id . '(' parameterlist ')'
   68 factor: id .

    '('  shift, and go to state 45

    $default  reduce using rule 68 (factor)


State 35

   69 factor: '(' assignment . ')'

    ')'  shift, and go to state 51


State 36

   47 extraexpr: "==" . simpexpr

    '-'                shift, and go to state 18
    "integer literal"  shift, and go to state 19
    "float literal"    shift, and go to state 20
    "boolean literal"  shift, and go to state 21
    "identifier"       shift, and go to state 13
    '('                shift, and go to state 22

    functioncall  go to state 23
    simpexpr      go to state 52
    term          go to state 27
    factor        go to state 28
    id            go to state 34


State 37

   48 extraexpr: "!=" . simpexpr

    '-'                shift, and go to state 18
    "integer literal"  shift, and go to state 19
    "float literal"    shift, and go to state 20
    "boolean literal"  shift, and go to state 21
    "identifier"       shift, and go to state 13
    '('                shift, and go to state 22

    functioncall  go to state 23
    simpexpr      go to state 53
    term          go to state 27
    factor        go to state 28
    id            go to state 34


State 38

   49 extraexpr: "<=" . simpexpr

    '-'                shift, and go to state 18
    "integer literal"  shift, and go to state 19
    "float literal"    shift, and go to state 20
    "boolean literal"  shift, and go to state 21
    "identifier"       shift, and go to state 13
    '('                shift, and go to state 22

    functioncall  go to state 23
    simpexpr      go to state 54
    term          go to state 27
    factor        go to state 28
    id            go to state 34


State 39

   50 extraexpr: ">=" . simpexpr

    '-'                shift, and go to state 18
    "integer literal"  shift, and go to state 19
    "float literal"    shift, and go to state 20
    "boolean literal"  shift, and go to state 21
    "identifier"       shift, and go to state 13
    '('                shift, and go to state 22

    functioncall  go to state 23
    simpexpr      go to state 55
    term          go to state 27
    factor        go to state 28
    id            go to state 34


State 40

   51 extraexpr: "<" . simpexpr

    '-'                shift, and go to state 18
    "integer literal"  shift, and go to state 19
    "float literal"    shift, and go to state 20
    "boolean literal"  shift, and go to state 21
    "identifier"       shift, and go to state 13
    '('                shift, and go to state 22

    functioncall  go to state 23
    simpexpr      go to state 56
    term          go to state 27
    factor        go to state 28
    id            go to state 34


State 41

   52 extraexpr: ">" . simpexpr

    '-'                shift, and go to state 18
    "integer literal"  shift, and go to state 19
    "float literal"    shift, and go to state 20
    "boolean literal"  shift, and go to state 21
    "identifier"       shift, and go to state 13
    '('                shift, and go to state 22

    functioncall  go to state 23
    simpexpr      go to state 57
    term          go to state 27
    factor        go to state 28
    id            go to state 34


State 42

   46 expr: simpexpr extraexpr .

    $default  reduce using rule 46 (expr)


State 43

   54 simpexpr: term extraterm .
   56 extraterm: extraterm . '+' term
   57          | extraterm . '-' term
   58          | extraterm . "||" term

    '+'   shift, and go to state 58
    '-'   shift, and go to state 59
    "||"  shift, and go to state 60

    $default  reduce using rule 54 (simpexpr)


State 44

   59 term: factor extrafactor .
   61 extrafactor: extrafactor . '*' factor
   62            | extrafactor . '/' factor
   63            | extrafactor . "&&" factor

    '*'   shift, and go to state 61
    '/'   shift, and go to state 62
    "&&"  shift, and go to state 63

    $default  reduce using rule 59 (term)


State 45

    9 functioncall: id '(' . ')'
   10             | id '(' . parameterlist ')'

    '-'                shift, and go to state 18
    "integer literal"  shift, and go to state 19
    "float literal"    shift, and go to state 20
    "boolean literal"  shift, and go to state 21
    "identifier"       shift, and go to state 13
    '('                shift, and go to state 22
    ')'                shift, and go to state 64

    functioncall   go to state 23
    parameterlist  go to state 65
    assignment     go to state 66
    expr           go to state 25
    simpexpr       go to state 26
    term           go to state 27
    factor         go to state 28
    id             go to state 29


State 46

   43 assignment: id '=' . assignment

    '-'                shift, and go to state 18
    "integer literal"  shift, and go to state 19
    "float literal"    shift, and go to state 20
    "boolean literal"  shift, and go to state 21
    "identifier"       shift, and go to state 13
    '('                shift, and go to state 22

    functioncall  go to state 23
    assignment    go to state 67
    expr          go to state 25
    simpexpr      go to state 26
    term          go to state 27
    factor        go to state 28
    id            go to state 29


State 47

    6 functiondefinition: type id '(' ')' '{' . statementlist '}'

    $default  reduce using rule 13 (statementlist)

    statementlist  go to state 68


State 48

    5 functiondefinition: type id '(' parameterdefinition ')' . '{' statementlist '}'

    '{'  shift, and go to state 69


State 49

    7 parameterdefinition: type id .
    8                    | type id . ',' parameterdefinition

    ','  shift, and go to state 70

    $default  reduce using rule 7 (parameterdefinition)


State 50

   53 simpexpr: '-' term extraterm .
   56 extraterm: extraterm . '+' term
   57          | extraterm . '-' term
   58          | extraterm . "||" term

    '+'   shift, and go to state 58
    '-'   shift, and go to state 59
    "||"  shift, and go to state 60

    $default  reduce using rule 53 (simpexpr)


State 51

   69 factor: '(' assignment ')' .

    $default  reduce using rule 69 (factor)


State 52

   47 extraexpr: "==" simpexpr .

    $default  reduce using rule 47 (extraexpr)


State 53

   48 extraexpr: "!=" simpexpr .

    $default  reduce using rule 48 (extraexpr)


State 54

   49 extraexpr: "<=" simpexpr .

    $default  reduce using rule 49 (extraexpr)


State 55

   50 extraexpr: ">=" simpexpr .

    $default  reduce using rule 50 (extraexpr)


State 56

   51 extraexpr: "<" simpexpr .

    $default  reduce using rule 51 (extraexpr)


State 57

   52 extraexpr: ">" simpexpr .

    $default  reduce using rule 52 (extraexpr)


State 58

   56 extraterm: extraterm '+' . term

    "integer literal"  shift, and go to state 19
    "float literal"    shift, and go to state 20
    "boolean literal"  shift, and go to state 21
    "identifier"       shift, and go to state 13
    '('                shift, and go to state 22

    functioncall  go to state 23
    term          go to state 71
    factor        go to state 28
    id            go to state 34


State 59

   57 extraterm: extraterm '-' . term

    "integer literal"  shift, and go to state 19
    "float literal"    shift, and go to state 20
    "boolean literal"  shift, and go to state 21
    "identifier"       shift, and go to state 13
    '('                shift, and go to state 22

    functioncall  go to state 23
    term          go to state 72
    factor        go to state 28
    id            go to state 34


State 60

   58 extraterm: extraterm "||" . term

    "integer literal"  shift, and go to state 19
    "float literal"    shift, and go to state 20
    "boolean literal"  shift, and go to state 21
    "identifier"       shift, and go to state 13
    '('                shift, and go to state 22

    functioncall  go to state 23
    term          go to state 73
    factor        go to state 28
    id            go to state 34


State 61

   61 extrafactor: extrafactor '*' . factor

    "integer literal"  shift, and go to state 19
    "float literal"    shift, and go to state 20
    "boolean literal"  shift, and go to state 21
    "identifier"       shift, and go to state 13
    '('                shift, and go to state 22

    functioncall  go to state 23
    factor        go to state 74
    id            go to state 34


State 62

   62 extrafactor: extrafactor '/' . factor

    "integer literal"  shift, and go to state 19
    "float literal"    shift, and go to state 20
    "boolean literal"  shift, and go to state 21
    "identifier"       shift, and go to state 13
    '('                shift, and go to state 22

    functioncall  go to state 23
    factor        go to state 75
    id            go to state 34


State 63

   63 extrafactor: extrafactor "&&" . factor

    "integer literal"  shift, and go to state 19
    "float literal"    shift, and go to state 20
    "boolean literal"  shift, and go to state 21
    "identifier"       shift, and go to state 13
    '('                shift, and go to state 22

    functioncall  go to state 23
    factor        go to state 76
    id            go to state 34


State 64

    9 functioncall: id '(' ')' .

    $default  reduce using rule 9 (functioncall)


State 65

   10 functioncall: id '(' parameterlist . ')'

    ')'  shift, and go to state 77


State 66

   11 parameterlist: assignment .
   12              | assignment . ',' parameterlist

    ','  shift, and go to state 78

    $default  reduce using rule 11 (parameterlist)


State 67

   43 assignment: id '=' assignment .

    $default  reduce using rule 43 (assignment)


State 68

    6 functiondefinition: type id '(' ')' '{' statementlist . '}'
   14 statementlist: statementlist . block

    "bool"        shift, and go to state 1
    "do"          shift, and go to state 79
    "float"       shift, and go to state 2
    "for"         shift, and go to state 80
    "if"          shift, and go to state 81
    "int"         shift, and go to state 3
    "printf"      shift, and go to state 82
    "return"      shift, and go to state 83
    "void"        shift, and go to state 4
    "while"       shift, and go to state 84
    "identifier"  shift, and go to state 13
    '{'           shift, and go to state 85
    '}'           shift, and go to state 86

    functioncall      go to state 87
    block             go to state 88
    statement         go to state 89
    ifstatement       go to state 90
    forstatement      go to state 91
    dowhilestatement  go to state 92
    whilestatement    go to state 93
    returnstatement   go to state 94
    printf            go to state 95
    declassignment    go to state 96
    type              go to state 8
    statassignment    go to state 97
    id                go to state 98


State 69

    5 functiondefinition: type id '(' parameterdefinition ')' '{' . statementlist '}'

    $default  reduce using rule 13 (statementlist)

    statementlist  go to state 99


State 70

    8 parameterdefinition: type id ',' . parameterdefinition

    "bool"   shift, and go to state 1
    "float"  shift, and go to state 2
    "int"    shift, and go to state 3
    "void"   shift, and go to state 4

    parameterdefinition  go to state 100
    type                 go to state 32


State 71

   56 extraterm: extraterm '+' term .

    $default  reduce using rule 56 (extraterm)


State 72

   57 extraterm: extraterm '-' term .

    $default  reduce using rule 57 (extraterm)


State 73

   58 extraterm: extraterm "||" term .

    $default  reduce using rule 58 (extraterm)


State 74

   61 extrafactor: extrafactor '*' factor .

    $default  reduce using rule 61 (extrafactor)


State 75

   62 extrafactor: extrafactor '/' factor .

    $default  reduce using rule 62 (extrafactor)


State 76

   63 extrafactor: extrafactor "&&" factor .

    $default  reduce using rule 63 (extrafactor)


State 77

   10 functioncall: id '(' parameterlist ')' .

    $default  reduce using rule 10 (functioncall)


State 78

   12 parameterlist: assignment ',' . parameterlist

    '-'                shift, and go to state 18
    "integer literal"  shift, and go to state 19
    "float literal"    shift, and go to state 20
    "boolean literal"  shift, and go to state 21
    "identifier"       shift, and go to state 13
    '('                shift, and go to state 22

    functioncall   go to state 23
    parameterlist  go to state 101
    assignment     go to state 66
    expr           go to state 25
    simpexpr       go to state 26
    term           go to state 27
    factor         go to state 28
    id             go to state 29


State 79

   30 dowhilestatement: "do" . block "while" '(' assignment ')'

    "bool"        shift, and go to state 1
    "do"          shift, and go to state 79
    "float"       shift, and go to state 2
    "for"         shift, and go to state 80
    "if"          shift, and go to state 81
    "int"         shift, and go to state 3
    "printf"      shift, and go to state 82
    "return"      shift, and go to state 83
    "void"        shift, and go to state 4
    "while"       shift, and go to state 84
    "identifier"  shift, and go to state 13
    '{'           shift, and go to state 85

    functioncall      go to state 87
    block             go to state 102
    statement         go to state 89
    ifstatement       go to state 90
    forstatement      go to state 91
    dowhilestatement  go to state 92
    whilestatement    go to state 93
    returnstatement   go to state 94
    printf            go to state 95
    declassignment    go to state 96
    type              go to state 8
    statassignment    go to state 97
    id                go to state 98


State 80

   28 forstatement: "for" . '(' statassignment ';' expr ';' statassignment ')' block
   29             | "for" . '(' declassignment ';' expr ';' statassignment ')' block

    '('  shift, and go to state 103


State 81

   26 ifstatement: "if" . '(' assignment ')' block
   27            | "if" . '(' assignment ')' "else" block

    '('  shift, and go to state 104


State 82

   34 printf: "printf" . '(' assignment ')'
   35       | "printf" . '(' "string literal" ')'

    '('  shift, and go to state 105


State 83

   32 returnstatement: "return" .
   33                | "return" . assignment

    '-'                shift, and go to state 18
    "integer literal"  shift, and go to state 19
    "float literal"    shift, and go to state 20
    "boolean literal"  shift, and go to state 21
    "identifier"       shift, and go to state 13
    '('                shift, and go to state 22

    "identifier"  [reduce using rule 32 (returnstatement)]
    $default      reduce using rule 32 (returnstatement)

    functioncall  go to state 23
    assignment    go to state 106
    expr          go to state 25
    simpexpr      go to state 26
    term          go to state 27
    factor        go to state 28
    id            go to state 29


State 84

   31 whilestatement: "while" . '(' assignment ')' block

    '('  shift, and go to state 107


State 85

   15 block: '{' . statementlist '}'

    $default  reduce using rule 13 (statementlist)

    statementlist  go to state 108


State 86

    6 functiondefinition: type id '(' ')' '{' statementlist '}' .

    $default  reduce using rule 6 (functiondefinition)


State 87

   25 statement: functioncall . ';'

    ';'  shift, and go to state 109


State 88

   14 statementlist: statementlist block .

    $default  reduce using rule 14 (statementlist)


State 89

   16 block: statement .

    $default  reduce using rule 16 (block)


State 90

   17 statement: ifstatement .

    $default  reduce using rule 17 (statement)


State 91

   18 statement: forstatement .

    $default  reduce using rule 18 (statement)


State 92

   21 statement: dowhilestatement .

    $default  reduce using rule 21 (statement)


State 93

   19 statement: whilestatement .

    $default  reduce using rule 19 (statement)


State 94

   20 statement: returnstatement .

    $default  reduce using rule 20 (statement)


State 95

   22 statement: printf . ';'

    ';'  shift, and go to state 110


State 96

   23 statement: declassignment . ';'

    ';'  shift, and go to state 111


State 97

   24 statement: statassignment . ';'

    ';'  shift, and go to state 112


State 98

    9 functioncall: id . '(' ')'
   10             | id . '(' parameterlist ')'
   42 statassignment: id . '=' assignment

    '('  shift, and go to state 45
    '='  shift, and go to state 113


State 99

    5 functiondefinition: type id '(' parameterdefinition ')' '{' statementlist . '}'
   14 statementlist: statementlist . block

    "bool"        shift, and go to state 1
    "do"          shift, and go to state 79
    "float"       shift, and go to state 2
    "for"         shift, and go to state 80
    "if"          shift, and go to state 81
    "int"         shift, and go to state 3
    "printf"      shift, and go to state 82
    "return"      shift, and go to state 83
    "void"        shift, and go to state 4
    "while"       shift, and go to state 84
    "identifier"  shift, and go to state 13
    '{'           shift, and go to state 85
    '}'           shift, and go to state 114

    functioncall      go to state 87
    block             go to state 88
    statement         go to state 89
    ifstatement       go to state 90
    forstatement      go to state 91
    dowhilestatement  go to state 92
    whilestatement    go to state 93
    returnstatement   go to state 94
    printf            go to state 95
    declassignment    go to state 96
    type              go to state 8
    statassignment    go to state 97
    id                go to state 98


State 100

    8 parameterdefinition: type id ',' parameterdefinition .

    $default  reduce using rule 8 (parameterdefinition)


State 101

   12 parameterlist: assignment ',' parameterlist .

    $default  reduce using rule 12 (parameterlist)


State 102

   30 dowhilestatement: "do" block . "while" '(' assignment ')'

    "while"  shift, and go to state 115


State 103

   28 forstatement: "for" '(' . statassignment ';' expr ';' statassignment ')' block
   29             | "for" '(' . declassignment ';' expr ';' statassignment ')' block

    "bool"        shift, and go to state 1
    "float"       shift, and go to state 2
    "int"         shift, and go to state 3
    "void"        shift, and go to state 4
    "identifier"  shift, and go to state 13

    declassignment  go to state 116
    type            go to state 8
    statassignment  go to state 117
    id              go to state 118


State 104

   26 ifstatement: "if" '(' . assignment ')' block
   27            | "if" '(' . assignment ')' "else" block

    '-'                shift, and go to state 18
    "integer literal"  shift, and go to state 19
    "float literal"    shift, and go to state 20
    "boolean literal"  shift, and go to state 21
    "identifier"       shift, and go to state 13
    '('                shift, and go to state 22

    functioncall  go to state 23
    assignment    go to state 119
    expr          go to state 25
    simpexpr      go to state 26
    term          go to state 27
    factor        go to state 28
    id            go to state 29


State 105

   34 printf: "printf" '(' . assignment ')'
   35       | "printf" '(' . "string literal" ')'

    '-'                shift, and go to state 18
    "integer literal"  shift, and go to state 19
    "float literal"    shift, and go to state 20
    "boolean literal"  shift, and go to state 21
    "string literal"   shift, and go to state 120
    "identifier"       shift, and go to state 13
    '('                shift, and go to state 22

    functioncall  go to state 23
    assignment    go to state 121
    expr          go to state 25
    simpexpr      go to state 26
    term          go to state 27
    factor        go to state 28
    id            go to state 29


State 106

   33 returnstatement: "return" assignment .

    $default  reduce using rule 33 (returnstatement)


State 107

   31 whilestatement: "while" '(' . assignment ')' block

    '-'                shift, and go to state 18
    "integer literal"  shift, and go to state 19
    "float literal"    shift, and go to state 20
    "boolean literal"  shift, and go to state 21
    "identifier"       shift, and go to state 13
    '('                shift, and go to state 22

    functioncall  go to state 23
    assignment    go to state 122
    expr          go to state 25
    simpexpr      go to state 26
    term          go to state 27
    factor        go to state 28
    id            go to state 29


State 108

   14 statementlist: statementlist . block
   15 block: '{' statementlist . '}'

    "bool"        shift, and go to state 1
    "do"          shift, and go to state 79
    "float"       shift, and go to state 2
    "for"         shift, and go to state 80
    "if"          shift, and go to state 81
    "int"         shift, and go to state 3
    "printf"      shift, and go to state 82
    "return"      shift, and go to state 83
    "void"        shift, and go to state 4
    "while"       shift, and go to state 84
    "identifier"  shift, and go to state 13
    '{'           shift, and go to state 85
    '}'           shift, and go to state 123

    functioncall      go to state 87
    block             go to state 88
    statement         go to state 89
    ifstatement       go to state 90
    forstatement      go to state 91
    dowhilestatement  go to state 92
    whilestatement    go to state 93
    returnstatement   go to state 94
    printf            go to state 95
    declassignment    go to state 96
    type              go to state 8
    statassignment    go to state 97
    id                go to state 98


State 109

   25 statement: functioncall ';' .

    $default  reduce using rule 25 (statement)


State 110

   22 statement: printf ';' .

    $default  reduce using rule 22 (statement)


State 111

   23 statement: declassignment ';' .

    $default  reduce using rule 23 (statement)


State 112

   24 statement: statassignment ';' .

    $default  reduce using rule 24 (statement)


State 113

   42 statassignment: id '=' . assignment

    '-'                shift, and go to state 18
    "integer literal"  shift, and go to state 19
    "float literal"    shift, and go to state 20
    "boolean literal"  shift, and go to state 21
    "identifier"       shift, and go to state 13
    '('                shift, and go to state 22

    functioncall  go to state 23
    assignment    go to state 124
    expr          go to state 25
    simpexpr      go to state 26
    term          go to state 27
    factor        go to state 28
    id            go to state 29


State 114

    5 functiondefinition: type id '(' parameterdefinition ')' '{' statementlist '}' .

    $default  reduce using rule 5 (functiondefinition)


State 115

   30 dowhilestatement: "do" block "while" . '(' assignment ')'

    '('  shift, and go to state 125


State 116

   29 forstatement: "for" '(' declassignment . ';' expr ';' statassignment ')' block

    ';'  shift, and go to state 126


State 117

   28 forstatement: "for" '(' statassignment . ';' expr ';' statassignment ')' block

    ';'  shift, and go to state 127


State 118

   42 statassignment: id . '=' assignment

    '='  shift, and go to state 113


State 119

   26 ifstatement: "if" '(' assignment . ')' block
   27            | "if" '(' assignment . ')' "else" block

    ')'  shift, and go to state 128


State 120

   35 printf: "printf" '(' "string literal" . ')'

    ')'  shift, and go to state 129


State 121

   34 printf: "printf" '(' assignment . ')'

    ')'  shift, and go to state 130


State 122

   31 whilestatement: "while" '(' assignment . ')' block

    ')'  shift, and go to state 131


State 123

   15 block: '{' statementlist '}' .

    $default  reduce using rule 15 (block)


State 124

   42 statassignment: id '=' assignment .

    $default  reduce using rule 42 (statassignment)


State 125

   30 dowhilestatement: "do" block "while" '(' . assignment ')'

    '-'                shift, and go to state 18
    "integer literal"  shift, and go to state 19
    "float literal"    shift, and go to state 20
    "boolean literal"  shift, and go to state 21
    "identifier"       shift, and go to state 13
    '('                shift, and go to state 22

    functioncall  go to state 23
    assignment    go to state 132
    expr          go to state 25
    simpexpr      go to state 26
    term          go to state 27
    factor        go to state 28
    id            go to state 29


State 126

   29 forstatement: "for" '(' declassignment ';' . expr ';' statassignment ')' block

    '-'                shift, and go to state 18
    "integer literal"  shift, and go to state 19
    "float literal"    shift, and go to state 20
    "boolean literal"  shift, and go to state 21
    "identifier"       shift, and go to state 13
    '('                shift, and go to state 22

    functioncall  go to state 23
    expr          go to state 133
    simpexpr      go to state 26
    term          go to state 27
    factor        go to state 28
    id            go to state 34


State 127

   28 forstatement: "for" '(' statassignment ';' . expr ';' statassignment ')' block

    '-'                shift, and go to state 18
    "integer literal"  shift, and go to state 19
    "float literal"    shift, and go to state 20
    "boolean literal"  shift, and go to state 21
    "identifier"       shift, and go to state 13
    '('                shift, and go to state 22

    functioncall  go to state 23
    expr          go to state 134
    simpexpr      go to state 26
    term          go to state 27
    factor        go to state 28
    id            go to state 34


State 128

   26 ifstatement: "if" '(' assignment ')' . block
   27            | "if" '(' assignment ')' . "else" block

    "bool"        shift, and go to state 1
    "do"          shift, and go to state 79
    "else"        shift, and go to state 135
    "float"       shift, and go to state 2
    "for"         shift, and go to state 80
    "if"          shift, and go to state 81
    "int"         shift, and go to state 3
    "printf"      shift, and go to state 82
    "return"      shift, and go to state 83
    "void"        shift, and go to state 4
    "while"       shift, and go to state 84
    "identifier"  shift, and go to state 13
    '{'           shift, and go to state 85

    functioncall      go to state 87
    block             go to state 136
    statement         go to state 89
    ifstatement       go to state 90
    forstatement      go to state 91
    dowhilestatement  go to state 92
    whilestatement    go to state 93
    returnstatement   go to state 94
    printf            go to state 95
    declassignment    go to state 96
    type              go to state 8
    statassignment    go to state 97
    id                go to state 98


State 129

   35 printf: "printf" '(' "string literal" ')' .

    $default  reduce using rule 35 (printf)


State 130

   34 printf: "printf" '(' assignment ')' .

    $default  reduce using rule 34 (printf)


State 131

   31 whilestatement: "while" '(' assignment ')' . block

    "bool"        shift, and go to state 1
    "do"          shift, and go to state 79
    "float"       shift, and go to state 2
    "for"         shift, and go to state 80
    "if"          shift, and go to state 81
    "int"         shift, and go to state 3
    "printf"      shift, and go to state 82
    "return"      shift, and go to state 83
    "void"        shift, and go to state 4
    "while"       shift, and go to state 84
    "identifier"  shift, and go to state 13
    '{'           shift, and go to state 85

    functioncall      go to state 87
    block             go to state 137
    statement         go to state 89
    ifstatement       go to state 90
    forstatement      go to state 91
    dowhilestatement  go to state 92
    whilestatement    go to state 93
    returnstatement   go to state 94
    printf            go to state 95
    declassignment    go to state 96
    type              go to state 8
    statassignment    go to state 97
    id                go to state 98


State 132

   30 dowhilestatement: "do" block "while" '(' assignment . ')'

    ')'  shift, and go to state 138


State 133

   29 forstatement: "for" '(' declassignment ';' expr . ';' statassignment ')' block

    ';'  shift, and go to state 139


State 134

   28 forstatement: "for" '(' statassignment ';' expr . ';' statassignment ')' block

    ';'  shift, and go to state 140


State 135

   27 ifstatement: "if" '(' assignment ')' "else" . block

    "bool"        shift, and go to state 1
    "do"          shift, and go to state 79
    "float"       shift, and go to state 2
    "for"         shift, and go to state 80
    "if"          shift, and go to state 81
    "int"         shift, and go to state 3
    "printf"      shift, and go to state 82
    "return"      shift, and go to state 83
    "void"        shift, and go to state 4
    "while"       shift, and go to state 84
    "identifier"  shift, and go to state 13
    '{'           shift, and go to state 85

    functioncall      go to state 87
    block             go to state 141
    statement         go to state 89
    ifstatement       go to state 90
    forstatement      go to state 91
    dowhilestatement  go to state 92
    whilestatement    go to state 93
    returnstatement   go to state 94
    printf            go to state 95
    declassignment    go to state 96
    type              go to state 8
    statassignment    go to state 97
    id                go to state 98


State 136

   26 ifstatement: "if" '(' assignment ')' block .

    $default  reduce using rule 26 (ifstatement)


State 137

   31 whilestatement: "while" '(' assignment ')' block .

    $default  reduce using rule 31 (whilestatement)


State 138

   30 dowhilestatement: "do" block "while" '(' assignment ')' .

    $default  reduce using rule 30 (dowhilestatement)


State 139

   29 forstatement: "for" '(' declassignment ';' expr ';' . statassignment ')' block

    "identifier"  shift, and go to state 13

    statassignment  go to state 142
    id              go to state 118


State 140

   28 forstatement: "for" '(' statassignment ';' expr ';' . statassignment ')' block

    "identifier"  shift, and go to state 13

    statassignment  go to state 143
    id              go to state 118


State 141

   27 ifstatement: "if" '(' assignment ')' "else" block .

    $default  reduce using rule 27 (ifstatement)


State 142

   29 forstatement: "for" '(' declassignment ';' expr ';' statassignment . ')' block

    ')'  shift, and go to state 144


State 143

   28 forstatement: "for" '(' statassignment ';' expr ';' statassignment . ')' block

    ')'  shift, and go to state 145


State 144

   29 forstatement: "for" '(' declassignment ';' expr ';' statassignment ')' . block

    "bool"        shift, and go to state 1
    "do"          shift, and go to state 79
    "float"       shift, and go to state 2
    "for"         shift, and go to state 80
    "if"          shift, and go to state 81
    "int"         shift, and go to state 3
    "printf"      shift, and go to state 82
    "return"      shift, and go to state 83
    "void"        shift, and go to state 4
    "while"       shift, and go to state 84
    "identifier"  shift, and go to state 13
    '{'           shift, and go to state 85

    functioncall      go to state 87
    block             go to state 146
    statement         go to state 89
    ifstatement       go to state 90
    forstatement      go to state 91
    dowhilestatement  go to state 92
    whilestatement    go to state 93
    returnstatement   go to state 94
    printf            go to state 95
    declassignment    go to state 96
    type              go to state 8
    statassignment    go to state 97
    id                go to state 98


State 145

   28 forstatement: "for" '(' statassignment ';' expr ';' statassignment ')' . block

    "bool"        shift, and go to state 1
    "do"          shift, and go to state 79
    "float"       shift, and go to state 2
    "for"         shift, and go to state 80
    "if"          shift, and go to state 81
    "int"         shift, and go to state 3
    "printf"      shift, and go to state 82
    "return"      shift, and go to state 83
    "void"        shift, and go to state 4
    "while"       shift, and go to state 84
    "identifier"  shift, and go to state 13
    '{'           shift, and go to state 85

    functioncall      go to state 87
    block             go to state 147
    statement         go to state 89
    ifstatement       go to state 90
    forstatement      go to state 91
    dowhilestatement  go to state 92
    whilestatement    go to state 93
    returnstatement   go to state 94
    printf            go to state 95
    declassignment    go to state 96
    type              go to state 8
    statassignment    go to state 97
    id                go to state 98


State 146

   29 forstatement: "for" '(' declassignment ';' expr ';' statassignment ')' block .

    $default  reduce using rule 29 (forstatement)


State 147

   28 forstatement: "for" '(' statassignment ';' expr ';' statassignment ')' block .

    $default  reduce using rule 28 (forstatement)
