State 71 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: %empty
    2        | program declassignment
    3        | program functiondefinition

    4 functiondefinition: type id '(' parameterdefinition ')' '{' statementlist '}'
    5                   | type id '(' ')' '{' statementlist '}'

    6 parameterdefinition: type id
    7                    | type id ',' parameterdefinition

    8 functioncall: id '(' ')'
    9             | id '(' parameterlist ')'

   10 parameterlist: assignment
   11              | assignment ',' parameterlist

   12 statementlist: %empty
   13              | statementlist block

   14 block: '{' statementlist '}'
   15      | statement

   16 statement: ifstatement
   17          | forstatement
   18          | whilestatement
   19          | returnstatement
   20          | dowhilestatement
   21          | printf ';'
   22          | declassignment ';'
   23          | statassignment ';'
   24          | functioncall ';'

   25 ifstatement: "if" '(' assignment ')' block
   26            | "if" '(' assignment ')' "else" block

   27 forstatement: "for" '(' statassignment ';' expr ';' statassignment ')' block
   28             | "for" '(' declassignment ';' expr ';' statassignment ')' block

   29 dowhilestatement: "do" block "while" '(' assignment ')'

   30 whilestatement: "while" '(' assignment ')' block

   31 returnstatement: "return"
   32                | "return" assignment

   33 printf: "printf" '(' assignment ')'
   34       | "printf" '(' "string literal" ')'

   35 declassignment: type id
   36               | type id '=' assignment

   37 type: "bool"
   38     | "float"
   39     | "int"
   40     | "void"

   41 statassignment: id '=' assignment

   42 assignment: id '=' assignment
   43           | expr

   44 expr: simpexpr
   45     | simpexpr extraexpr

   46 extraexpr: "==" simpexpr
   47          | "!=" simpexpr
   48          | "<=" simpexpr
   49          | ">=" simpexpr
   50          | "<" simpexpr
   51          | ">" simpexpr

   52 simpexpr: '-' term extraterm
   53         | term extraterm

   54 extraterm: %empty
   55          | extraterm '+' term
   56          | extraterm '-' term
   57          | extraterm "||" term

   58 term: factor extrafactor

   59 extrafactor: %empty
   60            | extrafactor '*' factor
   61            | extrafactor '/' factor
   62            | extrafactor "&&" factor

   63 factor: "integer literal"
   64       | "float literal"
   65       | "boolean literal"
   66       | functioncall
   67       | id
   68       | '(' assignment ')'

   69 id: "identifier"


Terminals, with rules where they appear

$end (0) 0
'(' (40) 4 5 8 9 25 26 27 28 29 30 33 34 68
')' (41) 4 5 8 9 25 26 27 28 29 30 33 34 68
'*' (42) 60
'+' (43) 55
',' (44) 7 11
'-' (45) 52 56
'/' (47) 61
';' (59) 21 22 23 24 27 28
'=' (61) 36 41 42
'{' (123) 4 5 14
'}' (125) 4 5 14
error (256)
"&&" (258) 62
"||" (259) 57
"==" (260) 46
"!=" (261) 47
"<=" (262) 48
">=" (263) 49
"<" (264) 50
">" (265) 51
"bool" (266) 37
"do" (267) 29
"else" (268) 26
"float" (269) 38
"for" (270) 27 28
"if" (271) 25 26
"int" (272) 39
"printf" (273) 33 34
"return" (274) 31 32
"void" (275) 40
"while" (276) 29 30
"integer literal" (277) 63
"float literal" (278) 64
"boolean literal" (279) 65
"string literal" (280) 34
"identifier" (281) 69


Nonterminals, with rules where they appear

$accept (38)
    on left: 0
program (39)
    on left: 1 2 3, on right: 0 2 3
functiondefinition (40)
    on left: 4 5, on right: 3
parameterdefinition (41)
    on left: 6 7, on right: 4 7
functioncall (42)
    on left: 8 9, on right: 24 66
parameterlist (43)
    on left: 10 11, on right: 9 11
statementlist (44)
    on left: 12 13, on right: 4 5 13 14
block (45)
    on left: 14 15, on right: 13 25 26 27 28 29 30
statement (46)
    on left: 16 17 18 19 20 21 22 23 24, on right: 15
ifstatement (47)
    on left: 25 26, on right: 16
forstatement (48)
    on left: 27 28, on right: 17
dowhilestatement (49)
    on left: 29, on right: 20
whilestatement (50)
    on left: 30, on right: 18
returnstatement (51)
    on left: 31 32, on right: 19
printf (52)
    on left: 33 34, on right: 21
declassignment (53)
    on left: 35 36, on right: 2 22 28
type (54)
    on left: 37 38 39 40, on right: 4 5 6 7 35 36
statassignment (55)
    on left: 41, on right: 23 27 28
assignment (56)
    on left: 42 43, on right: 10 11 25 26 29 30 32 33 36 41 42 68
expr (57)
    on left: 44 45, on right: 27 28 43
extraexpr (58)
    on left: 46 47 48 49 50 51, on right: 45
simpexpr (59)
    on left: 52 53, on right: 44 45 46 47 48 49 50 51
extraterm (60)
    on left: 54 55 56 57, on right: 52 53 55 56 57
term (61)
    on left: 58, on right: 52 53 55 56 57
extrafactor (62)
    on left: 59 60 61 62, on right: 58 60 61 62
factor (63)
    on left: 63 64 65 66 67 68, on right: 58 60 61 62
id (64)
    on left: 69, on right: 4 5 6 7 8 9 35 36 41 42 67


State 0

    0 $accept: . program $end

    $default  reduce using rule 1 (program)

    program  go to state 1


State 1

    0 $accept: program . $end
    2 program: program . declassignment
    3        | program . functiondefinition

    $end     shift, and go to state 2
    "bool"   shift, and go to state 3
    "float"  shift, and go to state 4
    "int"    shift, and go to state 5
    "void"   shift, and go to state 6

    functiondefinition  go to state 7
    declassignment      go to state 8
    type                go to state 9


State 2

    0 $accept: program $end .

    $default  accept


State 3

   37 type: "bool" .

    $default  reduce using rule 37 (type)


State 4

   38 type: "float" .

    $default  reduce using rule 38 (type)


State 5

   39 type: "int" .

    $default  reduce using rule 39 (type)


State 6

   40 type: "void" .

    $default  reduce using rule 40 (type)


State 7

    3 program: program functiondefinition .

    $default  reduce using rule 3 (program)


State 8

    2 program: program declassignment .

    $default  reduce using rule 2 (program)


State 9

    4 functiondefinition: type . id '(' parameterdefinition ')' '{' statementlist '}'
    5                   | type . id '(' ')' '{' statementlist '}'
   35 declassignment: type . id
   36               | type . id '=' assignment

    "identifier"  shift, and go to state 10

    id  go to state 11


State 10

   69 id: "identifier" .

    $default  reduce using rule 69 (id)


State 11

    4 functiondefinition: type id . '(' parameterdefinition ')' '{' statementlist '}'
    5                   | type id . '(' ')' '{' statementlist '}'
   35 declassignment: type id .
   36               | type id . '=' assignment

    '('  shift, and go to state 12
    '='  shift, and go to state 13

    $default  reduce using rule 35 (declassignment)


State 12

    4 functiondefinition: type id '(' . parameterdefinition ')' '{' statementlist '}'
    5                   | type id '(' . ')' '{' statementlist '}'

    "bool"   shift, and go to state 3
    "float"  shift, and go to state 4
    "int"    shift, and go to state 5
    "void"   shift, and go to state 6
    ')'      shift, and go to state 14

    parameterdefinition  go to state 15
    type                 go to state 16


State 13

   36 declassignment: type id '=' . assignment

    '-'                shift, and go to state 17
    "integer literal"  shift, and go to state 18
    "float literal"    shift, and go to state 19
    "boolean literal"  shift, and go to state 20
    "identifier"       shift, and go to state 10
    '('                shift, and go to state 21

    functioncall  go to state 22
    assignment    go to state 23
    expr          go to state 24
    simpexpr      go to state 25
    term          go to state 26
    factor        go to state 27
    id            go to state 28


State 14

    5 functiondefinition: type id '(' ')' . '{' statementlist '}'

    '{'  shift, and go to state 29


State 15

    4 functiondefinition: type id '(' parameterdefinition . ')' '{' statementlist '}'

    ')'  shift, and go to state 30


State 16

    6 parameterdefinition: type . id
    7                    | type . id ',' parameterdefinition

    "identifier"  shift, and go to state 10

    id  go to state 31


State 17

   52 simpexpr: '-' . term extraterm

    "integer literal"  shift, and go to state 18
    "float literal"    shift, and go to state 19
    "boolean literal"  shift, and go to state 20
    "identifier"       shift, and go to state 10
    '('                shift, and go to state 21

    functioncall  go to state 22
    term          go to state 32
    factor        go to state 27
    id            go to state 33


State 18

   63 factor: "integer literal" .

    $default  reduce using rule 63 (factor)


State 19

   64 factor: "float literal" .

    $default  reduce using rule 64 (factor)


State 20

   65 factor: "boolean literal" .

    $default  reduce using rule 65 (factor)


State 21

   68 factor: '(' . assignment ')'

    '-'                shift, and go to state 17
    "integer literal"  shift, and go to state 18
    "float literal"    shift, and go to state 19
    "boolean literal"  shift, and go to state 20
    "identifier"       shift, and go to state 10
    '('                shift, and go to state 21

    functioncall  go to state 22
    assignment    go to state 34
    expr          go to state 24
    simpexpr      go to state 25
    term          go to state 26
    factor        go to state 27
    id            go to state 28


State 22

   66 factor: functioncall .

    $default  reduce using rule 66 (factor)


State 23

   36 declassignment: type id '=' assignment .

    $default  reduce using rule 36 (declassignment)


State 24

   43 assignment: expr .

    $default  reduce using rule 43 (assignment)


State 25

   44 expr: simpexpr .
   45     | simpexpr . extraexpr

    "=="  shift, and go to state 35
    "!="  shift, and go to state 36
    "<="  shift, and go to state 37
    ">="  shift, and go to state 38
    "<"   shift, and go to state 39
    ">"   shift, and go to state 40

    $default  reduce using rule 44 (expr)

    extraexpr  go to state 41


State 26

   53 simpexpr: term . extraterm

    $default  reduce using rule 54 (extraterm)

    extraterm  go to state 42


State 27

   58 term: factor . extrafactor

    $default  reduce using rule 59 (extrafactor)

    extrafactor  go to state 43


State 28

    8 functioncall: id . '(' ')'
    9             | id . '(' parameterlist ')'
   42 assignment: id . '=' assignment
   67 factor: id .

    '('  shift, and go to state 44
    '='  shift, and go to state 45

    $default  reduce using rule 67 (factor)


State 29

    5 functiondefinition: type id '(' ')' '{' . statementlist '}'

    $default  reduce using rule 12 (statementlist)

    statementlist  go to state 46


State 30

    4 functiondefinition: type id '(' parameterdefinition ')' . '{' statementlist '}'

    '{'  shift, and go to state 47


State 31

    6 parameterdefinition: type id .
    7                    | type id . ',' parameterdefinition

    ','  shift, and go to state 48

    $default  reduce using rule 6 (parameterdefinition)


State 32

   52 simpexpr: '-' term . extraterm

    $default  reduce using rule 54 (extraterm)

    extraterm  go to state 49


State 33

    8 functioncall: id . '(' ')'
    9             | id . '(' parameterlist ')'
   67 factor: id .

    '('  shift, and go to state 44

    $default  reduce using rule 67 (factor)


State 34

   68 factor: '(' assignment . ')'

    ')'  shift, and go to state 50


State 35

   46 extraexpr: "==" . simpexpr

    '-'                shift, and go to state 17
    "integer literal"  shift, and go to state 18
    "float literal"    shift, and go to state 19
    "boolean literal"  shift, and go to state 20
    "identifier"       shift, and go to state 10
    '('                shift, and go to state 21

    functioncall  go to state 22
    simpexpr      go to state 51
    term          go to state 26
    factor        go to state 27
    id            go to state 33


State 36

   47 extraexpr: "!=" . simpexpr

    '-'                shift, and go to state 17
    "integer literal"  shift, and go to state 18
    "float literal"    shift, and go to state 19
    "boolean literal"  shift, and go to state 20
    "identifier"       shift, and go to state 10
    '('                shift, and go to state 21

    functioncall  go to state 22
    simpexpr      go to state 52
    term          go to state 26
    factor        go to state 27
    id            go to state 33


State 37

   48 extraexpr: "<=" . simpexpr

    '-'                shift, and go to state 17
    "integer literal"  shift, and go to state 18
    "float literal"    shift, and go to state 19
    "boolean literal"  shift, and go to state 20
    "identifier"       shift, and go to state 10
    '('                shift, and go to state 21

    functioncall  go to state 22
    simpexpr      go to state 53
    term          go to state 26
    factor        go to state 27
    id            go to state 33


State 38

   49 extraexpr: ">=" . simpexpr

    '-'                shift, and go to state 17
    "integer literal"  shift, and go to state 18
    "float literal"    shift, and go to state 19
    "boolean literal"  shift, and go to state 20
    "identifier"       shift, and go to state 10
    '('                shift, and go to state 21

    functioncall  go to state 22
    simpexpr      go to state 54
    term          go to state 26
    factor        go to state 27
    id            go to state 33


State 39

   50 extraexpr: "<" . simpexpr

    '-'                shift, and go to state 17
    "integer literal"  shift, and go to state 18
    "float literal"    shift, and go to state 19
    "boolean literal"  shift, and go to state 20
    "identifier"       shift, and go to state 10
    '('                shift, and go to state 21

    functioncall  go to state 22
    simpexpr      go to state 55
    term          go to state 26
    factor        go to state 27
    id            go to state 33


State 40

   51 extraexpr: ">" . simpexpr

    '-'                shift, and go to state 17
    "integer literal"  shift, and go to state 18
    "float literal"    shift, and go to state 19
    "boolean literal"  shift, and go to state 20
    "identifier"       shift, and go to state 10
    '('                shift, and go to state 21

    functioncall  go to state 22
    simpexpr      go to state 56
    term          go to state 26
    factor        go to state 27
    id            go to state 33


State 41

   45 expr: simpexpr extraexpr .

    $default  reduce using rule 45 (expr)


State 42

   53 simpexpr: term extraterm .
   55 extraterm: extraterm . '+' term
   56          | extraterm . '-' term
   57          | extraterm . "||" term

    '+'   shift, and go to state 57
    '-'   shift, and go to state 58
    "||"  shift, and go to state 59

    $default  reduce using rule 53 (simpexpr)


State 43

   58 term: factor extrafactor .
   60 extrafactor: extrafactor . '*' factor
   61            | extrafactor . '/' factor
   62            | extrafactor . "&&" factor

    '*'   shift, and go to state 60
    '/'   shift, and go to state 61
    "&&"  shift, and go to state 62

    $default  reduce using rule 58 (term)


State 44

    8 functioncall: id '(' . ')'
    9             | id '(' . parameterlist ')'

    '-'                shift, and go to state 17
    "integer literal"  shift, and go to state 18
    "float literal"    shift, and go to state 19
    "boolean literal"  shift, and go to state 20
    "identifier"       shift, and go to state 10
    '('                shift, and go to state 21
    ')'                shift, and go to state 63

    functioncall   go to state 22
    parameterlist  go to state 64
    assignment     go to state 65
    expr           go to state 24
    simpexpr       go to state 25
    term           go to state 26
    factor         go to state 27
    id             go to state 28


State 45

   42 assignment: id '=' . assignment

    '-'                shift, and go to state 17
    "integer literal"  shift, and go to state 18
    "float literal"    shift, and go to state 19
    "boolean literal"  shift, and go to state 20
    "identifier"       shift, and go to state 10
    '('                shift, and go to state 21

    functioncall  go to state 22
    assignment    go to state 66
    expr          go to state 24
    simpexpr      go to state 25
    term          go to state 26
    factor        go to state 27
    id            go to state 28


State 46

    5 functiondefinition: type id '(' ')' '{' statementlist . '}'
   13 statementlist: statementlist . block

    "bool"        shift, and go to state 3
    "do"          shift, and go to state 67
    "float"       shift, and go to state 4
    "for"         shift, and go to state 68
    "if"          shift, and go to state 69
    "int"         shift, and go to state 5
    "printf"      shift, and go to state 70
    "return"      shift, and go to state 71
    "void"        shift, and go to state 6
    "while"       shift, and go to state 72
    "identifier"  shift, and go to state 10
    '{'           shift, and go to state 73
    '}'           shift, and go to state 74

    functioncall      go to state 75
    block             go to state 76
    statement         go to state 77
    ifstatement       go to state 78
    forstatement      go to state 79
    dowhilestatement  go to state 80
    whilestatement    go to state 81
    returnstatement   go to state 82
    printf            go to state 83
    declassignment    go to state 84
    type              go to state 85
    statassignment    go to state 86
    id                go to state 87


State 47

    4 functiondefinition: type id '(' parameterdefinition ')' '{' . statementlist '}'

    $default  reduce using rule 12 (statementlist)

    statementlist  go to state 88


State 48

    7 parameterdefinition: type id ',' . parameterdefinition

    "bool"   shift, and go to state 3
    "float"  shift, and go to state 4
    "int"    shift, and go to state 5
    "void"   shift, and go to state 6

    parameterdefinition  go to state 89
    type                 go to state 16


State 49

   52 simpexpr: '-' term extraterm .
   55 extraterm: extraterm . '+' term
   56          | extraterm . '-' term
   57          | extraterm . "||" term

    '+'   shift, and go to state 57
    '-'   shift, and go to state 58
    "||"  shift, and go to state 59

    $default  reduce using rule 52 (simpexpr)


State 50

   68 factor: '(' assignment ')' .

    $default  reduce using rule 68 (factor)


State 51

   46 extraexpr: "==" simpexpr .

    $default  reduce using rule 46 (extraexpr)


State 52

   47 extraexpr: "!=" simpexpr .

    $default  reduce using rule 47 (extraexpr)


State 53

   48 extraexpr: "<=" simpexpr .

    $default  reduce using rule 48 (extraexpr)


State 54

   49 extraexpr: ">=" simpexpr .

    $default  reduce using rule 49 (extraexpr)


State 55

   50 extraexpr: "<" simpexpr .

    $default  reduce using rule 50 (extraexpr)


State 56

   51 extraexpr: ">" simpexpr .

    $default  reduce using rule 51 (extraexpr)


State 57

   55 extraterm: extraterm '+' . term

    "integer literal"  shift, and go to state 18
    "float literal"    shift, and go to state 19
    "boolean literal"  shift, and go to state 20
    "identifier"       shift, and go to state 10
    '('                shift, and go to state 21

    functioncall  go to state 22
    term          go to state 90
    factor        go to state 27
    id            go to state 33


State 58

   56 extraterm: extraterm '-' . term

    "integer literal"  shift, and go to state 18
    "float literal"    shift, and go to state 19
    "boolean literal"  shift, and go to state 20
    "identifier"       shift, and go to state 10
    '('                shift, and go to state 21

    functioncall  go to state 22
    term          go to state 91
    factor        go to state 27
    id            go to state 33


State 59

   57 extraterm: extraterm "||" . term

    "integer literal"  shift, and go to state 18
    "float literal"    shift, and go to state 19
    "boolean literal"  shift, and go to state 20
    "identifier"       shift, and go to state 10
    '('                shift, and go to state 21

    functioncall  go to state 22
    term          go to state 92
    factor        go to state 27
    id            go to state 33


State 60

   60 extrafactor: extrafactor '*' . factor

    "integer literal"  shift, and go to state 18
    "float literal"    shift, and go to state 19
    "boolean literal"  shift, and go to state 20
    "identifier"       shift, and go to state 10
    '('                shift, and go to state 21

    functioncall  go to state 22
    factor        go to state 93
    id            go to state 33


State 61

   61 extrafactor: extrafactor '/' . factor

    "integer literal"  shift, and go to state 18
    "float literal"    shift, and go to state 19
    "boolean literal"  shift, and go to state 20
    "identifier"       shift, and go to state 10
    '('                shift, and go to state 21

    functioncall  go to state 22
    factor        go to state 94
    id            go to state 33


State 62

   62 extrafactor: extrafactor "&&" . factor

    "integer literal"  shift, and go to state 18
    "float literal"    shift, and go to state 19
    "boolean literal"  shift, and go to state 20
    "identifier"       shift, and go to state 10
    '('                shift, and go to state 21

    functioncall  go to state 22
    factor        go to state 95
    id            go to state 33


State 63

    8 functioncall: id '(' ')' .

    $default  reduce using rule 8 (functioncall)


State 64

    9 functioncall: id '(' parameterlist . ')'

    ')'  shift, and go to state 96


State 65

   10 parameterlist: assignment .
   11              | assignment . ',' parameterlist

    ','  shift, and go to state 97

    $default  reduce using rule 10 (parameterlist)


State 66

   42 assignment: id '=' assignment .

    $default  reduce using rule 42 (assignment)


State 67

   29 dowhilestatement: "do" . block "while" '(' assignment ')'

    "bool"        shift, and go to state 3
    "do"          shift, and go to state 67
    "float"       shift, and go to state 4
    "for"         shift, and go to state 68
    "if"          shift, and go to state 69
    "int"         shift, and go to state 5
    "printf"      shift, and go to state 70
    "return"      shift, and go to state 71
    "void"        shift, and go to state 6
    "while"       shift, and go to state 72
    "identifier"  shift, and go to state 10
    '{'           shift, and go to state 73

    functioncall      go to state 75
    block             go to state 98
    statement         go to state 77
    ifstatement       go to state 78
    forstatement      go to state 79
    dowhilestatement  go to state 80
    whilestatement    go to state 81
    returnstatement   go to state 82
    printf            go to state 83
    declassignment    go to state 84
    type              go to state 85
    statassignment    go to state 86
    id                go to state 87


State 68

   27 forstatement: "for" . '(' statassignment ';' expr ';' statassignment ')' block
   28             | "for" . '(' declassignment ';' expr ';' statassignment ')' block

    '('  shift, and go to state 99


State 69

   25 ifstatement: "if" . '(' assignment ')' block
   26            | "if" . '(' assignment ')' "else" block

    '('  shift, and go to state 100


State 70

   33 printf: "printf" . '(' assignment ')'
   34       | "printf" . '(' "string literal" ')'

    '('  shift, and go to state 101


State 71

   31 returnstatement: "return" .
   32                | "return" . assignment

    '-'                shift, and go to state 17
    "integer literal"  shift, and go to state 18
    "float literal"    shift, and go to state 19
    "boolean literal"  shift, and go to state 20
    "identifier"       shift, and go to state 10
    '('                shift, and go to state 21

    "identifier"  [reduce using rule 31 (returnstatement)]
    $default      reduce using rule 31 (returnstatement)

    functioncall  go to state 22
    assignment    go to state 102
    expr          go to state 24
    simpexpr      go to state 25
    term          go to state 26
    factor        go to state 27
    id            go to state 28


State 72

   30 whilestatement: "while" . '(' assignment ')' block

    '('  shift, and go to state 103


State 73

   14 block: '{' . statementlist '}'

    $default  reduce using rule 12 (statementlist)

    statementlist  go to state 104


State 74

    5 functiondefinition: type id '(' ')' '{' statementlist '}' .

    $default  reduce using rule 5 (functiondefinition)


State 75

   24 statement: functioncall . ';'

    ';'  shift, and go to state 105


State 76

   13 statementlist: statementlist block .

    $default  reduce using rule 13 (statementlist)


State 77

   15 block: statement .

    $default  reduce using rule 15 (block)


State 78

   16 statement: ifstatement .

    $default  reduce using rule 16 (statement)


State 79

   17 statement: forstatement .

    $default  reduce using rule 17 (statement)


State 80

   20 statement: dowhilestatement .

    $default  reduce using rule 20 (statement)


State 81

   18 statement: whilestatement .

    $default  reduce using rule 18 (statement)


State 82

   19 statement: returnstatement .

    $default  reduce using rule 19 (statement)


State 83

   21 statement: printf . ';'

    ';'  shift, and go to state 106


State 84

   22 statement: declassignment . ';'

    ';'  shift, and go to state 107


State 85

   35 declassignment: type . id
   36               | type . id '=' assignment

    "identifier"  shift, and go to state 10

    id  go to state 108


State 86

   23 statement: statassignment . ';'

    ';'  shift, and go to state 109


State 87

    8 functioncall: id . '(' ')'
    9             | id . '(' parameterlist ')'
   41 statassignment: id . '=' assignment

    '('  shift, and go to state 44
    '='  shift, and go to state 110


State 88

    4 functiondefinition: type id '(' parameterdefinition ')' '{' statementlist . '}'
   13 statementlist: statementlist . block

    "bool"        shift, and go to state 3
    "do"          shift, and go to state 67
    "float"       shift, and go to state 4
    "for"         shift, and go to state 68
    "if"          shift, and go to state 69
    "int"         shift, and go to state 5
    "printf"      shift, and go to state 70
    "return"      shift, and go to state 71
    "void"        shift, and go to state 6
    "while"       shift, and go to state 72
    "identifier"  shift, and go to state 10
    '{'           shift, and go to state 73
    '}'           shift, and go to state 111

    functioncall      go to state 75
    block             go to state 76
    statement         go to state 77
    ifstatement       go to state 78
    forstatement      go to state 79
    dowhilestatement  go to state 80
    whilestatement    go to state 81
    returnstatement   go to state 82
    printf            go to state 83
    declassignment    go to state 84
    type              go to state 85
    statassignment    go to state 86
    id                go to state 87


State 89

    7 parameterdefinition: type id ',' parameterdefinition .

    $default  reduce using rule 7 (parameterdefinition)


State 90

   55 extraterm: extraterm '+' term .

    $default  reduce using rule 55 (extraterm)


State 91

   56 extraterm: extraterm '-' term .

    $default  reduce using rule 56 (extraterm)


State 92

   57 extraterm: extraterm "||" term .

    $default  reduce using rule 57 (extraterm)


State 93

   60 extrafactor: extrafactor '*' factor .

    $default  reduce using rule 60 (extrafactor)


State 94

   61 extrafactor: extrafactor '/' factor .

    $default  reduce using rule 61 (extrafactor)


State 95

   62 extrafactor: extrafactor "&&" factor .

    $default  reduce using rule 62 (extrafactor)


State 96

    9 functioncall: id '(' parameterlist ')' .

    $default  reduce using rule 9 (functioncall)


State 97

   11 parameterlist: assignment ',' . parameterlist

    '-'                shift, and go to state 17
    "integer literal"  shift, and go to state 18
    "float literal"    shift, and go to state 19
    "boolean literal"  shift, and go to state 20
    "identifier"       shift, and go to state 10
    '('                shift, and go to state 21

    functioncall   go to state 22
    parameterlist  go to state 112
    assignment     go to state 65
    expr           go to state 24
    simpexpr       go to state 25
    term           go to state 26
    factor         go to state 27
    id             go to state 28


State 98

   29 dowhilestatement: "do" block . "while" '(' assignment ')'

    "while"  shift, and go to state 113


State 99

   27 forstatement: "for" '(' . statassignment ';' expr ';' statassignment ')' block
   28             | "for" '(' . declassignment ';' expr ';' statassignment ')' block

    "bool"        shift, and go to state 3
    "float"       shift, and go to state 4
    "int"         shift, and go to state 5
    "void"        shift, and go to state 6
    "identifier"  shift, and go to state 10

    declassignment  go to state 114
    type            go to state 85
    statassignment  go to state 115
    id              go to state 116


State 100

   25 ifstatement: "if" '(' . assignment ')' block
   26            | "if" '(' . assignment ')' "else" block

    '-'                shift, and go to state 17
    "integer literal"  shift, and go to state 18
    "float literal"    shift, and go to state 19
    "boolean literal"  shift, and go to state 20
    "identifier"       shift, and go to state 10
    '('                shift, and go to state 21

    functioncall  go to state 22
    assignment    go to state 117
    expr          go to state 24
    simpexpr      go to state 25
    term          go to state 26
    factor        go to state 27
    id            go to state 28


State 101

   33 printf: "printf" '(' . assignment ')'
   34       | "printf" '(' . "string literal" ')'

    '-'                shift, and go to state 17
    "integer literal"  shift, and go to state 18
    "float literal"    shift, and go to state 19
    "boolean literal"  shift, and go to state 20
    "string literal"   shift, and go to state 118
    "identifier"       shift, and go to state 10
    '('                shift, and go to state 21

    functioncall  go to state 22
    assignment    go to state 119
    expr          go to state 24
    simpexpr      go to state 25
    term          go to state 26
    factor        go to state 27
    id            go to state 28


State 102

   32 returnstatement: "return" assignment .

    $default  reduce using rule 32 (returnstatement)


State 103

   30 whilestatement: "while" '(' . assignment ')' block

    '-'                shift, and go to state 17
    "integer literal"  shift, and go to state 18
    "float literal"    shift, and go to state 19
    "boolean literal"  shift, and go to state 20
    "identifier"       shift, and go to state 10
    '('                shift, and go to state 21

    functioncall  go to state 22
    assignment    go to state 120
    expr          go to state 24
    simpexpr      go to state 25
    term          go to state 26
    factor        go to state 27
    id            go to state 28


State 104

   13 statementlist: statementlist . block
   14 block: '{' statementlist . '}'

    "bool"        shift, and go to state 3
    "do"          shift, and go to state 67
    "float"       shift, and go to state 4
    "for"         shift, and go to state 68
    "if"          shift, and go to state 69
    "int"         shift, and go to state 5
    "printf"      shift, and go to state 70
    "return"      shift, and go to state 71
    "void"        shift, and go to state 6
    "while"       shift, and go to state 72
    "identifier"  shift, and go to state 10
    '{'           shift, and go to state 73
    '}'           shift, and go to state 121

    functioncall      go to state 75
    block             go to state 76
    statement         go to state 77
    ifstatement       go to state 78
    forstatement      go to state 79
    dowhilestatement  go to state 80
    whilestatement    go to state 81
    returnstatement   go to state 82
    printf            go to state 83
    declassignment    go to state 84
    type              go to state 85
    statassignment    go to state 86
    id                go to state 87


State 105

   24 statement: functioncall ';' .

    $default  reduce using rule 24 (statement)


State 106

   21 statement: printf ';' .

    $default  reduce using rule 21 (statement)


State 107

   22 statement: declassignment ';' .

    $default  reduce using rule 22 (statement)


State 108

   35 declassignment: type id .
   36               | type id . '=' assignment

    '='  shift, and go to state 13

    $default  reduce using rule 35 (declassignment)


State 109

   23 statement: statassignment ';' .

    $default  reduce using rule 23 (statement)


State 110

   41 statassignment: id '=' . assignment

    '-'                shift, and go to state 17
    "integer literal"  shift, and go to state 18
    "float literal"    shift, and go to state 19
    "boolean literal"  shift, and go to state 20
    "identifier"       shift, and go to state 10
    '('                shift, and go to state 21

    functioncall  go to state 22
    assignment    go to state 122
    expr          go to state 24
    simpexpr      go to state 25
    term          go to state 26
    factor        go to state 27
    id            go to state 28


State 111

    4 functiondefinition: type id '(' parameterdefinition ')' '{' statementlist '}' .

    $default  reduce using rule 4 (functiondefinition)


State 112

   11 parameterlist: assignment ',' parameterlist .

    $default  reduce using rule 11 (parameterlist)


State 113

   29 dowhilestatement: "do" block "while" . '(' assignment ')'

    '('  shift, and go to state 123


State 114

   28 forstatement: "for" '(' declassignment . ';' expr ';' statassignment ')' block

    ';'  shift, and go to state 124


State 115

   27 forstatement: "for" '(' statassignment . ';' expr ';' statassignment ')' block

    ';'  shift, and go to state 125


State 116

   41 statassignment: id . '=' assignment

    '='  shift, and go to state 110


State 117

   25 ifstatement: "if" '(' assignment . ')' block
   26            | "if" '(' assignment . ')' "else" block

    ')'  shift, and go to state 126


State 118

   34 printf: "printf" '(' "string literal" . ')'

    ')'  shift, and go to state 127


State 119

   33 printf: "printf" '(' assignment . ')'

    ')'  shift, and go to state 128


State 120

   30 whilestatement: "while" '(' assignment . ')' block

    ')'  shift, and go to state 129


State 121

   14 block: '{' statementlist '}' .

    $default  reduce using rule 14 (block)


State 122

   41 statassignment: id '=' assignment .

    $default  reduce using rule 41 (statassignment)


State 123

   29 dowhilestatement: "do" block "while" '(' . assignment ')'

    '-'                shift, and go to state 17
    "integer literal"  shift, and go to state 18
    "float literal"    shift, and go to state 19
    "boolean literal"  shift, and go to state 20
    "identifier"       shift, and go to state 10
    '('                shift, and go to state 21

    functioncall  go to state 22
    assignment    go to state 130
    expr          go to state 24
    simpexpr      go to state 25
    term          go to state 26
    factor        go to state 27
    id            go to state 28


State 124

   28 forstatement: "for" '(' declassignment ';' . expr ';' statassignment ')' block

    '-'                shift, and go to state 17
    "integer literal"  shift, and go to state 18
    "float literal"    shift, and go to state 19
    "boolean literal"  shift, and go to state 20
    "identifier"       shift, and go to state 10
    '('                shift, and go to state 21

    functioncall  go to state 22
    expr          go to state 131
    simpexpr      go to state 25
    term          go to state 26
    factor        go to state 27
    id            go to state 33


State 125

   27 forstatement: "for" '(' statassignment ';' . expr ';' statassignment ')' block

    '-'                shift, and go to state 17
    "integer literal"  shift, and go to state 18
    "float literal"    shift, and go to state 19
    "boolean literal"  shift, and go to state 20
    "identifier"       shift, and go to state 10
    '('                shift, and go to state 21

    functioncall  go to state 22
    expr          go to state 132
    simpexpr      go to state 25
    term          go to state 26
    factor        go to state 27
    id            go to state 33


State 126

   25 ifstatement: "if" '(' assignment ')' . block
   26            | "if" '(' assignment ')' . "else" block

    "bool"        shift, and go to state 3
    "do"          shift, and go to state 67
    "else"        shift, and go to state 133
    "float"       shift, and go to state 4
    "for"         shift, and go to state 68
    "if"          shift, and go to state 69
    "int"         shift, and go to state 5
    "printf"      shift, and go to state 70
    "return"      shift, and go to state 71
    "void"        shift, and go to state 6
    "while"       shift, and go to state 72
    "identifier"  shift, and go to state 10
    '{'           shift, and go to state 73

    functioncall      go to state 75
    block             go to state 134
    statement         go to state 77
    ifstatement       go to state 78
    forstatement      go to state 79
    dowhilestatement  go to state 80
    whilestatement    go to state 81
    returnstatement   go to state 82
    printf            go to state 83
    declassignment    go to state 84
    type              go to state 85
    statassignment    go to state 86
    id                go to state 87


State 127

   34 printf: "printf" '(' "string literal" ')' .

    $default  reduce using rule 34 (printf)


State 128

   33 printf: "printf" '(' assignment ')' .

    $default  reduce using rule 33 (printf)


State 129

   30 whilestatement: "while" '(' assignment ')' . block

    "bool"        shift, and go to state 3
    "do"          shift, and go to state 67
    "float"       shift, and go to state 4
    "for"         shift, and go to state 68
    "if"          shift, and go to state 69
    "int"         shift, and go to state 5
    "printf"      shift, and go to state 70
    "return"      shift, and go to state 71
    "void"        shift, and go to state 6
    "while"       shift, and go to state 72
    "identifier"  shift, and go to state 10
    '{'           shift, and go to state 73

    functioncall      go to state 75
    block             go to state 135
    statement         go to state 77
    ifstatement       go to state 78
    forstatement      go to state 79
    dowhilestatement  go to state 80
    whilestatement    go to state 81
    returnstatement   go to state 82
    printf            go to state 83
    declassignment    go to state 84
    type              go to state 85
    statassignment    go to state 86
    id                go to state 87


State 130

   29 dowhilestatement: "do" block "while" '(' assignment . ')'

    ')'  shift, and go to state 136


State 131

   28 forstatement: "for" '(' declassignment ';' expr . ';' statassignment ')' block

    ';'  shift, and go to state 137


State 132

   27 forstatement: "for" '(' statassignment ';' expr . ';' statassignment ')' block

    ';'  shift, and go to state 138


State 133

   26 ifstatement: "if" '(' assignment ')' "else" . block

    "bool"        shift, and go to state 3
    "do"          shift, and go to state 67
    "float"       shift, and go to state 4
    "for"         shift, and go to state 68
    "if"          shift, and go to state 69
    "int"         shift, and go to state 5
    "printf"      shift, and go to state 70
    "return"      shift, and go to state 71
    "void"        shift, and go to state 6
    "while"       shift, and go to state 72
    "identifier"  shift, and go to state 10
    '{'           shift, and go to state 73

    functioncall      go to state 75
    block             go to state 139
    statement         go to state 77
    ifstatement       go to state 78
    forstatement      go to state 79
    dowhilestatement  go to state 80
    whilestatement    go to state 81
    returnstatement   go to state 82
    printf            go to state 83
    declassignment    go to state 84
    type              go to state 85
    statassignment    go to state 86
    id                go to state 87


State 134

   25 ifstatement: "if" '(' assignment ')' block .

    $default  reduce using rule 25 (ifstatement)


State 135

   30 whilestatement: "while" '(' assignment ')' block .

    $default  reduce using rule 30 (whilestatement)


State 136

   29 dowhilestatement: "do" block "while" '(' assignment ')' .

    $default  reduce using rule 29 (dowhilestatement)


State 137

   28 forstatement: "for" '(' declassignment ';' expr ';' . statassignment ')' block

    "identifier"  shift, and go to state 10

    statassignment  go to state 140
    id              go to state 116


State 138

   27 forstatement: "for" '(' statassignment ';' expr ';' . statassignment ')' block

    "identifier"  shift, and go to state 10

    statassignment  go to state 141
    id              go to state 116


State 139

   26 ifstatement: "if" '(' assignment ')' "else" block .

    $default  reduce using rule 26 (ifstatement)


State 140

   28 forstatement: "for" '(' declassignment ';' expr ';' statassignment . ')' block

    ')'  shift, and go to state 142


State 141

   27 forstatement: "for" '(' statassignment ';' expr ';' statassignment . ')' block

    ')'  shift, and go to state 143


State 142

   28 forstatement: "for" '(' declassignment ';' expr ';' statassignment ')' . block

    "bool"        shift, and go to state 3
    "do"          shift, and go to state 67
    "float"       shift, and go to state 4
    "for"         shift, and go to state 68
    "if"          shift, and go to state 69
    "int"         shift, and go to state 5
    "printf"      shift, and go to state 70
    "return"      shift, and go to state 71
    "void"        shift, and go to state 6
    "while"       shift, and go to state 72
    "identifier"  shift, and go to state 10
    '{'           shift, and go to state 73

    functioncall      go to state 75
    block             go to state 144
    statement         go to state 77
    ifstatement       go to state 78
    forstatement      go to state 79
    dowhilestatement  go to state 80
    whilestatement    go to state 81
    returnstatement   go to state 82
    printf            go to state 83
    declassignment    go to state 84
    type              go to state 85
    statassignment    go to state 86
    id                go to state 87


State 143

   27 forstatement: "for" '(' statassignment ';' expr ';' statassignment ')' . block

    "bool"        shift, and go to state 3
    "do"          shift, and go to state 67
    "float"       shift, and go to state 4
    "for"         shift, and go to state 68
    "if"          shift, and go to state 69
    "int"         shift, and go to state 5
    "printf"      shift, and go to state 70
    "return"      shift, and go to state 71
    "void"        shift, and go to state 6
    "while"       shift, and go to state 72
    "identifier"  shift, and go to state 10
    '{'           shift, and go to state 73

    functioncall      go to state 75
    block             go to state 145
    statement         go to state 77
    ifstatement       go to state 78
    forstatement      go to state 79
    dowhilestatement  go to state 80
    whilestatement    go to state 81
    returnstatement   go to state 82
    printf            go to state 83
    declassignment    go to state 84
    type              go to state 85
    statassignment    go to state 86
    id                go to state 87


State 144

   28 forstatement: "for" '(' declassignment ';' expr ';' statassignment ')' block .

    $default  reduce using rule 28 (forstatement)


State 145

   27 forstatement: "for" '(' statassignment ';' expr ';' statassignment ')' block .

    $default  reduce using rule 27 (forstatement)
