Grammar

    0 $accept: program $end

    1 program: %empty
    2        | program declassignment ';'
    3        | program functiondefinition

    4 functiondefinition: type id '(' parameterdefinition ')' '{' statementlist '}'
    5                   | type id '(' ')' '{' statementlist '}'

    6 parameterdefinition: type id
    7                    | type id ',' parameterdefinition

    8 functioncall: id '(' ')'
    9             | id '(' parameterlist ')'

   10 parameterlist: assignment
   11              | assignment ',' parameterlist

   12 statementlist: %empty
   13              | statementlist block

   14 block: '{' statementlist '}'
   15      | statement

   16 statement: ifstatement
   17          | forstatement
   18          | whilestatement
   19          | returnstatement ';'
   20          | dowhilestatement ';'
   21          | printf ';'
   22          | declassignment ';'
   23          | statassignment ';'
   24          | functioncall ';'

   25 statblock: '{' statementlist '}'
   26          | statement

   27 ifstatement: "if" '(' assignment ')' statblock
   28            | "if" '(' assignment ')' statblock "else" statblock

   29 forstatement: "for" '(' statassignment ';' expr ';' statassignment ')' block
   30             | "for" '(' declassignment ';' expr ';' statassignment ')' block

   31 dowhilestatement: "do" block "while" '(' assignment ')'

   32 whilestatement: "while" '(' assignment ')' block

   33 returnstatement: "return"
   34                | "return" assignment

   35 printf: "printf" '(' assignment ')'
   36       | "printf" '(' "string literal" ')'

   37 declassignment: type id
   38               | type id '=' assignment

   39 type: "bool"
   40     | "float"
   41     | "int"
   42     | "void"

   43 statassignment: id '=' assignment

   44 assignment: id '=' assignment
   45           | expr

   46 expr: simpexpr
   47     | simpexpr extraexpr

   48 extraexpr: "==" simpexpr
   49          | "!=" simpexpr
   50          | "<=" simpexpr
   51          | ">=" simpexpr
   52          | "<" simpexpr
   53          | ">" simpexpr

   54 simpexpr: '-' term extraterm
   55         | term extraterm

   56 extraterm: %empty
   57          | extraterm '+' term
   58          | extraterm '-' term
   59          | extraterm "||" term

   60 term: factor extrafactor

   61 extrafactor: %empty
   62            | extrafactor '*' factor
   63            | extrafactor '/' factor
   64            | extrafactor "&&" factor

   65 factor: "integer literal"
   66       | "float literal"
   67       | "boolean literal"
   68       | functioncall
   69       | id
   70       | '(' assignment ')'

   71 id: "identifier"


Terminals, with rules where they appear

$end (0) 0
'(' (40) 4 5 8 9 27 28 29 30 31 32 35 36 70
')' (41) 4 5 8 9 27 28 29 30 31 32 35 36 70
'*' (42) 62
'+' (43) 57
',' (44) 7 11
'-' (45) 54 58
'/' (47) 63
';' (59) 2 19 20 21 22 23 24 29 30
'=' (61) 38 43 44
'{' (123) 4 5 14 25
'}' (125) 4 5 14 25
error (256)
UMINUS (258)
MOO (259)
FOO (260)
"&&" (261) 64
"||" (262) 59
"==" (263) 48
"!=" (264) 49
"<=" (265) 50
">=" (266) 51
"<" (267) 52
">" (268) 53
"bool" (269) 39
"do" (270) 31
"else" (271) 28
"float" (272) 40
"for" (273) 29 30
"if" (274) 27 28
"int" (275) 41
"printf" (276) 35 36
"return" (277) 33 34
"void" (278) 42
"while" (279) 31 32
"integer literal" (280) 65
"float literal" (281) 66
"boolean literal" (282) 67
"string literal" (283) 36
"identifier" (284) 71


Nonterminals, with rules where they appear

$accept (41)
    on left: 0
program (42)
    on left: 1 2 3, on right: 0 2 3
functiondefinition (43)
    on left: 4 5, on right: 3
parameterdefinition (44)
    on left: 6 7, on right: 4 7
functioncall (45)
    on left: 8 9, on right: 24 68
parameterlist (46)
    on left: 10 11, on right: 9 11
statementlist (47)
    on left: 12 13, on right: 4 5 13 14 25
block (48)
    on left: 14 15, on right: 13 29 30 31 32
statement (49)
    on left: 16 17 18 19 20 21 22 23 24, on right: 15 26
statblock (50)
    on left: 25 26, on right: 27 28
ifstatement (51)
    on left: 27 28, on right: 16
forstatement (52)
    on left: 29 30, on right: 17
dowhilestatement (53)
    on left: 31, on right: 20
whilestatement (54)
    on left: 32, on right: 18
returnstatement (55)
    on left: 33 34, on right: 19
printf (56)
    on left: 35 36, on right: 21
declassignment (57)
    on left: 37 38, on right: 2 22 30
type (58)
    on left: 39 40 41 42, on right: 4 5 6 7 37 38
statassignment (59)
    on left: 43, on right: 23 29 30
assignment (60)
    on left: 44 45, on right: 10 11 27 28 31 32 34 35 38 43 44 70
expr (61)
    on left: 46 47, on right: 29 30 45
extraexpr (62)
    on left: 48 49 50 51 52 53, on right: 47
simpexpr (63)
    on left: 54 55, on right: 46 47 48 49 50 51 52 53
extraterm (64)
    on left: 56 57 58 59, on right: 54 55 57 58 59
term (65)
    on left: 60, on right: 54 55 57 58 59
extrafactor (66)
    on left: 61 62 63 64, on right: 60 62 63 64
factor (67)
    on left: 65 66 67 68 69 70, on right: 60 62 63 64
id (68)
    on left: 71, on right: 4 5 6 7 8 9 37 38 43 44 69


State 0

    0 $accept: . program $end

    $default  reduce using rule 1 (program)

    program  go to state 1


State 1

    0 $accept: program . $end
    2 program: program . declassignment ';'
    3        | program . functiondefinition

    $end     shift, and go to state 2
    "bool"   shift, and go to state 3
    "float"  shift, and go to state 4
    "int"    shift, and go to state 5
    "void"   shift, and go to state 6

    functiondefinition  go to state 7
    declassignment      go to state 8
    type                go to state 9


State 2

    0 $accept: program $end .

    $default  accept


State 3

   39 type: "bool" .

    $default  reduce using rule 39 (type)


State 4

   40 type: "float" .

    $default  reduce using rule 40 (type)


State 5

   41 type: "int" .

    $default  reduce using rule 41 (type)


State 6

   42 type: "void" .

    $default  reduce using rule 42 (type)


State 7

    3 program: program functiondefinition .

    $default  reduce using rule 3 (program)


State 8

    2 program: program declassignment . ';'

    ';'  shift, and go to state 10


State 9

    4 functiondefinition: type . id '(' parameterdefinition ')' '{' statementlist '}'
    5                   | type . id '(' ')' '{' statementlist '}'
   37 declassignment: type . id
   38               | type . id '=' assignment

    "identifier"  shift, and go to state 11

    id  go to state 12


State 10

    2 program: program declassignment ';' .

    $default  reduce using rule 2 (program)


State 11

   71 id: "identifier" .

    $default  reduce using rule 71 (id)


State 12

    4 functiondefinition: type id . '(' parameterdefinition ')' '{' statementlist '}'
    5                   | type id . '(' ')' '{' statementlist '}'
   37 declassignment: type id .
   38               | type id . '=' assignment

    '('  shift, and go to state 13
    '='  shift, and go to state 14

    $default  reduce using rule 37 (declassignment)


State 13

    4 functiondefinition: type id '(' . parameterdefinition ')' '{' statementlist '}'
    5                   | type id '(' . ')' '{' statementlist '}'

    "bool"   shift, and go to state 3
    "float"  shift, and go to state 4
    "int"    shift, and go to state 5
    "void"   shift, and go to state 6
    ')'      shift, and go to state 15

    parameterdefinition  go to state 16
    type                 go to state 17


State 14

   38 declassignment: type id '=' . assignment

    '-'                shift, and go to state 18
    "integer literal"  shift, and go to state 19
    "float literal"    shift, and go to state 20
    "boolean literal"  shift, and go to state 21
    "identifier"       shift, and go to state 11
    '('                shift, and go to state 22

    functioncall  go to state 23
    assignment    go to state 24
    expr          go to state 25
    simpexpr      go to state 26
    term          go to state 27
    factor        go to state 28
    id            go to state 29


State 15

    5 functiondefinition: type id '(' ')' . '{' statementlist '}'

    '{'  shift, and go to state 30


State 16

    4 functiondefinition: type id '(' parameterdefinition . ')' '{' statementlist '}'

    ')'  shift, and go to state 31


State 17

    6 parameterdefinition: type . id
    7                    | type . id ',' parameterdefinition

    "identifier"  shift, and go to state 11

    id  go to state 32


State 18

   54 simpexpr: '-' . term extraterm

    "integer literal"  shift, and go to state 19
    "float literal"    shift, and go to state 20
    "boolean literal"  shift, and go to state 21
    "identifier"       shift, and go to state 11
    '('                shift, and go to state 22

    functioncall  go to state 23
    term          go to state 33
    factor        go to state 28
    id            go to state 34


State 19

   65 factor: "integer literal" .

    $default  reduce using rule 65 (factor)


State 20

   66 factor: "float literal" .

    $default  reduce using rule 66 (factor)


State 21

   67 factor: "boolean literal" .

    $default  reduce using rule 67 (factor)


State 22

   70 factor: '(' . assignment ')'

    '-'                shift, and go to state 18
    "integer literal"  shift, and go to state 19
    "float literal"    shift, and go to state 20
    "boolean literal"  shift, and go to state 21
    "identifier"       shift, and go to state 11
    '('                shift, and go to state 22

    functioncall  go to state 23
    assignment    go to state 35
    expr          go to state 25
    simpexpr      go to state 26
    term          go to state 27
    factor        go to state 28
    id            go to state 29


State 23

   68 factor: functioncall .

    $default  reduce using rule 68 (factor)


State 24

   38 declassignment: type id '=' assignment .

    $default  reduce using rule 38 (declassignment)


State 25

   45 assignment: expr .

    $default  reduce using rule 45 (assignment)


State 26

   46 expr: simpexpr .
   47     | simpexpr . extraexpr

    "=="  shift, and go to state 36
    "!="  shift, and go to state 37
    "<="  shift, and go to state 38
    ">="  shift, and go to state 39
    "<"   shift, and go to state 40
    ">"   shift, and go to state 41

    $default  reduce using rule 46 (expr)

    extraexpr  go to state 42


State 27

   55 simpexpr: term . extraterm

    $default  reduce using rule 56 (extraterm)

    extraterm  go to state 43


State 28

   60 term: factor . extrafactor

    $default  reduce using rule 61 (extrafactor)

    extrafactor  go to state 44


State 29

    8 functioncall: id . '(' ')'
    9             | id . '(' parameterlist ')'
   44 assignment: id . '=' assignment
   69 factor: id .

    '('  shift, and go to state 45
    '='  shift, and go to state 46

    $default  reduce using rule 69 (factor)


State 30

    5 functiondefinition: type id '(' ')' '{' . statementlist '}'

    $default  reduce using rule 12 (statementlist)

    statementlist  go to state 47


State 31

    4 functiondefinition: type id '(' parameterdefinition ')' . '{' statementlist '}'

    '{'  shift, and go to state 48


State 32

    6 parameterdefinition: type id .
    7                    | type id . ',' parameterdefinition

    ','  shift, and go to state 49

    $default  reduce using rule 6 (parameterdefinition)


State 33

   54 simpexpr: '-' term . extraterm

    $default  reduce using rule 56 (extraterm)

    extraterm  go to state 50


State 34

    8 functioncall: id . '(' ')'
    9             | id . '(' parameterlist ')'
   69 factor: id .

    '('  shift, and go to state 45

    $default  reduce using rule 69 (factor)


State 35

   70 factor: '(' assignment . ')'

    ')'  shift, and go to state 51


State 36

   48 extraexpr: "==" . simpexpr

    '-'                shift, and go to state 18
    "integer literal"  shift, and go to state 19
    "float literal"    shift, and go to state 20
    "boolean literal"  shift, and go to state 21
    "identifier"       shift, and go to state 11
    '('                shift, and go to state 22

    functioncall  go to state 23
    simpexpr      go to state 52
    term          go to state 27
    factor        go to state 28
    id            go to state 34


State 37

   49 extraexpr: "!=" . simpexpr

    '-'                shift, and go to state 18
    "integer literal"  shift, and go to state 19
    "float literal"    shift, and go to state 20
    "boolean literal"  shift, and go to state 21
    "identifier"       shift, and go to state 11
    '('                shift, and go to state 22

    functioncall  go to state 23
    simpexpr      go to state 53
    term          go to state 27
    factor        go to state 28
    id            go to state 34


State 38

   50 extraexpr: "<=" . simpexpr

    '-'                shift, and go to state 18
    "integer literal"  shift, and go to state 19
    "float literal"    shift, and go to state 20
    "boolean literal"  shift, and go to state 21
    "identifier"       shift, and go to state 11
    '('                shift, and go to state 22

    functioncall  go to state 23
    simpexpr      go to state 54
    term          go to state 27
    factor        go to state 28
    id            go to state 34


State 39

   51 extraexpr: ">=" . simpexpr

    '-'                shift, and go to state 18
    "integer literal"  shift, and go to state 19
    "float literal"    shift, and go to state 20
    "boolean literal"  shift, and go to state 21
    "identifier"       shift, and go to state 11
    '('                shift, and go to state 22

    functioncall  go to state 23
    simpexpr      go to state 55
    term          go to state 27
    factor        go to state 28
    id            go to state 34


State 40

   52 extraexpr: "<" . simpexpr

    '-'                shift, and go to state 18
    "integer literal"  shift, and go to state 19
    "float literal"    shift, and go to state 20
    "boolean literal"  shift, and go to state 21
    "identifier"       shift, and go to state 11
    '('                shift, and go to state 22

    functioncall  go to state 23
    simpexpr      go to state 56
    term          go to state 27
    factor        go to state 28
    id            go to state 34


State 41

   53 extraexpr: ">" . simpexpr

    '-'                shift, and go to state 18
    "integer literal"  shift, and go to state 19
    "float literal"    shift, and go to state 20
    "boolean literal"  shift, and go to state 21
    "identifier"       shift, and go to state 11
    '('                shift, and go to state 22

    functioncall  go to state 23
    simpexpr      go to state 57
    term          go to state 27
    factor        go to state 28
    id            go to state 34


State 42

   47 expr: simpexpr extraexpr .

    $default  reduce using rule 47 (expr)


State 43

   55 simpexpr: term extraterm .
   57 extraterm: extraterm . '+' term
   58          | extraterm . '-' term
   59          | extraterm . "||" term

    '+'   shift, and go to state 58
    '-'   shift, and go to state 59
    "||"  shift, and go to state 60

    $default  reduce using rule 55 (simpexpr)


State 44

   60 term: factor extrafactor .
   62 extrafactor: extrafactor . '*' factor
   63            | extrafactor . '/' factor
   64            | extrafactor . "&&" factor

    '*'   shift, and go to state 61
    '/'   shift, and go to state 62
    "&&"  shift, and go to state 63

    $default  reduce using rule 60 (term)


State 45

    8 functioncall: id '(' . ')'
    9             | id '(' . parameterlist ')'

    '-'                shift, and go to state 18
    "integer literal"  shift, and go to state 19
    "float literal"    shift, and go to state 20
    "boolean literal"  shift, and go to state 21
    "identifier"       shift, and go to state 11
    '('                shift, and go to state 22
    ')'                shift, and go to state 64

    functioncall   go to state 23
    parameterlist  go to state 65
    assignment     go to state 66
    expr           go to state 25
    simpexpr       go to state 26
    term           go to state 27
    factor         go to state 28
    id             go to state 29


State 46

   44 assignment: id '=' . assignment

    '-'                shift, and go to state 18
    "integer literal"  shift, and go to state 19
    "float literal"    shift, and go to state 20
    "boolean literal"  shift, and go to state 21
    "identifier"       shift, and go to state 11
    '('                shift, and go to state 22

    functioncall  go to state 23
    assignment    go to state 67
    expr          go to state 25
    simpexpr      go to state 26
    term          go to state 27
    factor        go to state 28
    id            go to state 29


State 47

    5 functiondefinition: type id '(' ')' '{' statementlist . '}'
   13 statementlist: statementlist . block

    "bool"        shift, and go to state 3
    "do"          shift, and go to state 68
    "float"       shift, and go to state 4
    "for"         shift, and go to state 69
    "if"          shift, and go to state 70
    "int"         shift, and go to state 5
    "printf"      shift, and go to state 71
    "return"      shift, and go to state 72
    "void"        shift, and go to state 6
    "while"       shift, and go to state 73
    "identifier"  shift, and go to state 11
    '{'           shift, and go to state 74
    '}'           shift, and go to state 75

    functioncall      go to state 76
    block             go to state 77
    statement         go to state 78
    ifstatement       go to state 79
    forstatement      go to state 80
    dowhilestatement  go to state 81
    whilestatement    go to state 82
    returnstatement   go to state 83
    printf            go to state 84
    declassignment    go to state 85
    type              go to state 86
    statassignment    go to state 87
    id                go to state 88


State 48

    4 functiondefinition: type id '(' parameterdefinition ')' '{' . statementlist '}'

    $default  reduce using rule 12 (statementlist)

    statementlist  go to state 89


State 49

    7 parameterdefinition: type id ',' . parameterdefinition

    "bool"   shift, and go to state 3
    "float"  shift, and go to state 4
    "int"    shift, and go to state 5
    "void"   shift, and go to state 6

    parameterdefinition  go to state 90
    type                 go to state 17


State 50

   54 simpexpr: '-' term extraterm .
   57 extraterm: extraterm . '+' term
   58          | extraterm . '-' term
   59          | extraterm . "||" term

    '+'   shift, and go to state 58
    '-'   shift, and go to state 59
    "||"  shift, and go to state 60

    $default  reduce using rule 54 (simpexpr)


State 51

   70 factor: '(' assignment ')' .

    $default  reduce using rule 70 (factor)


State 52

   48 extraexpr: "==" simpexpr .

    $default  reduce using rule 48 (extraexpr)


State 53

   49 extraexpr: "!=" simpexpr .

    $default  reduce using rule 49 (extraexpr)


State 54

   50 extraexpr: "<=" simpexpr .

    $default  reduce using rule 50 (extraexpr)


State 55

   51 extraexpr: ">=" simpexpr .

    $default  reduce using rule 51 (extraexpr)


State 56

   52 extraexpr: "<" simpexpr .

    $default  reduce using rule 52 (extraexpr)


State 57

   53 extraexpr: ">" simpexpr .

    $default  reduce using rule 53 (extraexpr)


State 58

   57 extraterm: extraterm '+' . term

    "integer literal"  shift, and go to state 19
    "float literal"    shift, and go to state 20
    "boolean literal"  shift, and go to state 21
    "identifier"       shift, and go to state 11
    '('                shift, and go to state 22

    functioncall  go to state 23
    term          go to state 91
    factor        go to state 28
    id            go to state 34


State 59

   58 extraterm: extraterm '-' . term

    "integer literal"  shift, and go to state 19
    "float literal"    shift, and go to state 20
    "boolean literal"  shift, and go to state 21
    "identifier"       shift, and go to state 11
    '('                shift, and go to state 22

    functioncall  go to state 23
    term          go to state 92
    factor        go to state 28
    id            go to state 34


State 60

   59 extraterm: extraterm "||" . term

    "integer literal"  shift, and go to state 19
    "float literal"    shift, and go to state 20
    "boolean literal"  shift, and go to state 21
    "identifier"       shift, and go to state 11
    '('                shift, and go to state 22

    functioncall  go to state 23
    term          go to state 93
    factor        go to state 28
    id            go to state 34


State 61

   62 extrafactor: extrafactor '*' . factor

    "integer literal"  shift, and go to state 19
    "float literal"    shift, and go to state 20
    "boolean literal"  shift, and go to state 21
    "identifier"       shift, and go to state 11
    '('                shift, and go to state 22

    functioncall  go to state 23
    factor        go to state 94
    id            go to state 34


State 62

   63 extrafactor: extrafactor '/' . factor

    "integer literal"  shift, and go to state 19
    "float literal"    shift, and go to state 20
    "boolean literal"  shift, and go to state 21
    "identifier"       shift, and go to state 11
    '('                shift, and go to state 22

    functioncall  go to state 23
    factor        go to state 95
    id            go to state 34


State 63

   64 extrafactor: extrafactor "&&" . factor

    "integer literal"  shift, and go to state 19
    "float literal"    shift, and go to state 20
    "boolean literal"  shift, and go to state 21
    "identifier"       shift, and go to state 11
    '('                shift, and go to state 22

    functioncall  go to state 23
    factor        go to state 96
    id            go to state 34


State 64

    8 functioncall: id '(' ')' .

    $default  reduce using rule 8 (functioncall)


State 65

    9 functioncall: id '(' parameterlist . ')'

    ')'  shift, and go to state 97


State 66

   10 parameterlist: assignment .
   11              | assignment . ',' parameterlist

    ','  shift, and go to state 98

    $default  reduce using rule 10 (parameterlist)


State 67

   44 assignment: id '=' assignment .

    $default  reduce using rule 44 (assignment)


State 68

   31 dowhilestatement: "do" . block "while" '(' assignment ')'

    "bool"        shift, and go to state 3
    "do"          shift, and go to state 68
    "float"       shift, and go to state 4
    "for"         shift, and go to state 69
    "if"          shift, and go to state 70
    "int"         shift, and go to state 5
    "printf"      shift, and go to state 71
    "return"      shift, and go to state 72
    "void"        shift, and go to state 6
    "while"       shift, and go to state 73
    "identifier"  shift, and go to state 11
    '{'           shift, and go to state 74

    functioncall      go to state 76
    block             go to state 99
    statement         go to state 78
    ifstatement       go to state 79
    forstatement      go to state 80
    dowhilestatement  go to state 81
    whilestatement    go to state 82
    returnstatement   go to state 83
    printf            go to state 84
    declassignment    go to state 85
    type              go to state 86
    statassignment    go to state 87
    id                go to state 88


State 69

   29 forstatement: "for" . '(' statassignment ';' expr ';' statassignment ')' block
   30             | "for" . '(' declassignment ';' expr ';' statassignment ')' block

    '('  shift, and go to state 100


State 70

   27 ifstatement: "if" . '(' assignment ')' statblock
   28            | "if" . '(' assignment ')' statblock "else" statblock

    '('  shift, and go to state 101


State 71

   35 printf: "printf" . '(' assignment ')'
   36       | "printf" . '(' "string literal" ')'

    '('  shift, and go to state 102


State 72

   33 returnstatement: "return" .
   34                | "return" . assignment

    '-'                shift, and go to state 18
    "integer literal"  shift, and go to state 19
    "float literal"    shift, and go to state 20
    "boolean literal"  shift, and go to state 21
    "identifier"       shift, and go to state 11
    '('                shift, and go to state 22

    $default  reduce using rule 33 (returnstatement)

    functioncall  go to state 23
    assignment    go to state 103
    expr          go to state 25
    simpexpr      go to state 26
    term          go to state 27
    factor        go to state 28
    id            go to state 29


State 73

   32 whilestatement: "while" . '(' assignment ')' block

    '('  shift, and go to state 104


State 74

   14 block: '{' . statementlist '}'

    $default  reduce using rule 12 (statementlist)

    statementlist  go to state 105


State 75

    5 functiondefinition: type id '(' ')' '{' statementlist '}' .

    $default  reduce using rule 5 (functiondefinition)


State 76

   24 statement: functioncall . ';'

    ';'  shift, and go to state 106


State 77

   13 statementlist: statementlist block .

    $default  reduce using rule 13 (statementlist)


State 78

   15 block: statement .

    $default  reduce using rule 15 (block)


State 79

   16 statement: ifstatement .

    $default  reduce using rule 16 (statement)


State 80

   17 statement: forstatement .

    $default  reduce using rule 17 (statement)


State 81

   20 statement: dowhilestatement . ';'

    ';'  shift, and go to state 107


State 82

   18 statement: whilestatement .

    $default  reduce using rule 18 (statement)


State 83

   19 statement: returnstatement . ';'

    ';'  shift, and go to state 108


State 84

   21 statement: printf . ';'

    ';'  shift, and go to state 109


State 85

   22 statement: declassignment . ';'

    ';'  shift, and go to state 110


State 86

   37 declassignment: type . id
   38               | type . id '=' assignment

    "identifier"  shift, and go to state 11

    id  go to state 111


State 87

   23 statement: statassignment . ';'

    ';'  shift, and go to state 112


State 88

    8 functioncall: id . '(' ')'
    9             | id . '(' parameterlist ')'
   43 statassignment: id . '=' assignment

    '('  shift, and go to state 45
    '='  shift, and go to state 113


State 89

    4 functiondefinition: type id '(' parameterdefinition ')' '{' statementlist . '}'
   13 statementlist: statementlist . block

    "bool"        shift, and go to state 3
    "do"          shift, and go to state 68
    "float"       shift, and go to state 4
    "for"         shift, and go to state 69
    "if"          shift, and go to state 70
    "int"         shift, and go to state 5
    "printf"      shift, and go to state 71
    "return"      shift, and go to state 72
    "void"        shift, and go to state 6
    "while"       shift, and go to state 73
    "identifier"  shift, and go to state 11
    '{'           shift, and go to state 74
    '}'           shift, and go to state 114

    functioncall      go to state 76
    block             go to state 77
    statement         go to state 78
    ifstatement       go to state 79
    forstatement      go to state 80
    dowhilestatement  go to state 81
    whilestatement    go to state 82
    returnstatement   go to state 83
    printf            go to state 84
    declassignment    go to state 85
    type              go to state 86
    statassignment    go to state 87
    id                go to state 88


State 90

    7 parameterdefinition: type id ',' parameterdefinition .

    $default  reduce using rule 7 (parameterdefinition)


State 91

   57 extraterm: extraterm '+' term .

    $default  reduce using rule 57 (extraterm)


State 92

   58 extraterm: extraterm '-' term .

    $default  reduce using rule 58 (extraterm)


State 93

   59 extraterm: extraterm "||" term .

    $default  reduce using rule 59 (extraterm)


State 94

   62 extrafactor: extrafactor '*' factor .

    $default  reduce using rule 62 (extrafactor)


State 95

   63 extrafactor: extrafactor '/' factor .

    $default  reduce using rule 63 (extrafactor)


State 96

   64 extrafactor: extrafactor "&&" factor .

    $default  reduce using rule 64 (extrafactor)


State 97

    9 functioncall: id '(' parameterlist ')' .

    $default  reduce using rule 9 (functioncall)


State 98

   11 parameterlist: assignment ',' . parameterlist

    '-'                shift, and go to state 18
    "integer literal"  shift, and go to state 19
    "float literal"    shift, and go to state 20
    "boolean literal"  shift, and go to state 21
    "identifier"       shift, and go to state 11
    '('                shift, and go to state 22

    functioncall   go to state 23
    parameterlist  go to state 115
    assignment     go to state 66
    expr           go to state 25
    simpexpr       go to state 26
    term           go to state 27
    factor         go to state 28
    id             go to state 29


State 99

   31 dowhilestatement: "do" block . "while" '(' assignment ')'

    "while"  shift, and go to state 116


State 100

   29 forstatement: "for" '(' . statassignment ';' expr ';' statassignment ')' block
   30             | "for" '(' . declassignment ';' expr ';' statassignment ')' block

    "bool"        shift, and go to state 3
    "float"       shift, and go to state 4
    "int"         shift, and go to state 5
    "void"        shift, and go to state 6
    "identifier"  shift, and go to state 11

    declassignment  go to state 117
    type            go to state 86
    statassignment  go to state 118
    id              go to state 119


State 101

   27 ifstatement: "if" '(' . assignment ')' statblock
   28            | "if" '(' . assignment ')' statblock "else" statblock

    '-'                shift, and go to state 18
    "integer literal"  shift, and go to state 19
    "float literal"    shift, and go to state 20
    "boolean literal"  shift, and go to state 21
    "identifier"       shift, and go to state 11
    '('                shift, and go to state 22

    functioncall  go to state 23
    assignment    go to state 120
    expr          go to state 25
    simpexpr      go to state 26
    term          go to state 27
    factor        go to state 28
    id            go to state 29


State 102

   35 printf: "printf" '(' . assignment ')'
   36       | "printf" '(' . "string literal" ')'

    '-'                shift, and go to state 18
    "integer literal"  shift, and go to state 19
    "float literal"    shift, and go to state 20
    "boolean literal"  shift, and go to state 21
    "string literal"   shift, and go to state 121
    "identifier"       shift, and go to state 11
    '('                shift, and go to state 22

    functioncall  go to state 23
    assignment    go to state 122
    expr          go to state 25
    simpexpr      go to state 26
    term          go to state 27
    factor        go to state 28
    id            go to state 29


State 103

   34 returnstatement: "return" assignment .

    $default  reduce using rule 34 (returnstatement)


State 104

   32 whilestatement: "while" '(' . assignment ')' block

    '-'                shift, and go to state 18
    "integer literal"  shift, and go to state 19
    "float literal"    shift, and go to state 20
    "boolean literal"  shift, and go to state 21
    "identifier"       shift, and go to state 11
    '('                shift, and go to state 22

    functioncall  go to state 23
    assignment    go to state 123
    expr          go to state 25
    simpexpr      go to state 26
    term          go to state 27
    factor        go to state 28
    id            go to state 29


State 105

   13 statementlist: statementlist . block
   14 block: '{' statementlist . '}'

    "bool"        shift, and go to state 3
    "do"          shift, and go to state 68
    "float"       shift, and go to state 4
    "for"         shift, and go to state 69
    "if"          shift, and go to state 70
    "int"         shift, and go to state 5
    "printf"      shift, and go to state 71
    "return"      shift, and go to state 72
    "void"        shift, and go to state 6
    "while"       shift, and go to state 73
    "identifier"  shift, and go to state 11
    '{'           shift, and go to state 74
    '}'           shift, and go to state 124

    functioncall      go to state 76
    block             go to state 77
    statement         go to state 78
    ifstatement       go to state 79
    forstatement      go to state 80
    dowhilestatement  go to state 81
    whilestatement    go to state 82
    returnstatement   go to state 83
    printf            go to state 84
    declassignment    go to state 85
    type              go to state 86
    statassignment    go to state 87
    id                go to state 88


State 106

   24 statement: functioncall ';' .

    $default  reduce using rule 24 (statement)


State 107

   20 statement: dowhilestatement ';' .

    $default  reduce using rule 20 (statement)


State 108

   19 statement: returnstatement ';' .

    $default  reduce using rule 19 (statement)


State 109

   21 statement: printf ';' .

    $default  reduce using rule 21 (statement)


State 110

   22 statement: declassignment ';' .

    $default  reduce using rule 22 (statement)


State 111

   37 declassignment: type id .
   38               | type id . '=' assignment

    '='  shift, and go to state 14

    $default  reduce using rule 37 (declassignment)


State 112

   23 statement: statassignment ';' .

    $default  reduce using rule 23 (statement)


State 113

   43 statassignment: id '=' . assignment

    '-'                shift, and go to state 18
    "integer literal"  shift, and go to state 19
    "float literal"    shift, and go to state 20
    "boolean literal"  shift, and go to state 21
    "identifier"       shift, and go to state 11
    '('                shift, and go to state 22

    functioncall  go to state 23
    assignment    go to state 125
    expr          go to state 25
    simpexpr      go to state 26
    term          go to state 27
    factor        go to state 28
    id            go to state 29


State 114

    4 functiondefinition: type id '(' parameterdefinition ')' '{' statementlist '}' .

    $default  reduce using rule 4 (functiondefinition)


State 115

   11 parameterlist: assignment ',' parameterlist .

    $default  reduce using rule 11 (parameterlist)


State 116

   31 dowhilestatement: "do" block "while" . '(' assignment ')'

    '('  shift, and go to state 126


State 117

   30 forstatement: "for" '(' declassignment . ';' expr ';' statassignment ')' block

    ';'  shift, and go to state 127


State 118

   29 forstatement: "for" '(' statassignment . ';' expr ';' statassignment ')' block

    ';'  shift, and go to state 128


State 119

   43 statassignment: id . '=' assignment

    '='  shift, and go to state 113


State 120

   27 ifstatement: "if" '(' assignment . ')' statblock
   28            | "if" '(' assignment . ')' statblock "else" statblock

    ')'  shift, and go to state 129


State 121

   36 printf: "printf" '(' "string literal" . ')'

    ')'  shift, and go to state 130


State 122

   35 printf: "printf" '(' assignment . ')'

    ')'  shift, and go to state 131


State 123

   32 whilestatement: "while" '(' assignment . ')' block

    ')'  shift, and go to state 132


State 124

   14 block: '{' statementlist '}' .

    $default  reduce using rule 14 (block)


State 125

   43 statassignment: id '=' assignment .

    $default  reduce using rule 43 (statassignment)


State 126

   31 dowhilestatement: "do" block "while" '(' . assignment ')'

    '-'                shift, and go to state 18
    "integer literal"  shift, and go to state 19
    "float literal"    shift, and go to state 20
    "boolean literal"  shift, and go to state 21
    "identifier"       shift, and go to state 11
    '('                shift, and go to state 22

    functioncall  go to state 23
    assignment    go to state 133
    expr          go to state 25
    simpexpr      go to state 26
    term          go to state 27
    factor        go to state 28
    id            go to state 29


State 127

   30 forstatement: "for" '(' declassignment ';' . expr ';' statassignment ')' block

    '-'                shift, and go to state 18
    "integer literal"  shift, and go to state 19
    "float literal"    shift, and go to state 20
    "boolean literal"  shift, and go to state 21
    "identifier"       shift, and go to state 11
    '('                shift, and go to state 22

    functioncall  go to state 23
    expr          go to state 134
    simpexpr      go to state 26
    term          go to state 27
    factor        go to state 28
    id            go to state 34


State 128

   29 forstatement: "for" '(' statassignment ';' . expr ';' statassignment ')' block

    '-'                shift, and go to state 18
    "integer literal"  shift, and go to state 19
    "float literal"    shift, and go to state 20
    "boolean literal"  shift, and go to state 21
    "identifier"       shift, and go to state 11
    '('                shift, and go to state 22

    functioncall  go to state 23
    expr          go to state 135
    simpexpr      go to state 26
    term          go to state 27
    factor        go to state 28
    id            go to state 34


State 129

   27 ifstatement: "if" '(' assignment ')' . statblock
   28            | "if" '(' assignment ')' . statblock "else" statblock

    "bool"        shift, and go to state 3
    "do"          shift, and go to state 68
    "float"       shift, and go to state 4
    "for"         shift, and go to state 69
    "if"          shift, and go to state 70
    "int"         shift, and go to state 5
    "printf"      shift, and go to state 71
    "return"      shift, and go to state 72
    "void"        shift, and go to state 6
    "while"       shift, and go to state 73
    "identifier"  shift, and go to state 11
    '{'           shift, and go to state 136

    functioncall      go to state 76
    statement         go to state 137
    statblock         go to state 138
    ifstatement       go to state 79
    forstatement      go to state 80
    dowhilestatement  go to state 81
    whilestatement    go to state 82
    returnstatement   go to state 83
    printf            go to state 84
    declassignment    go to state 85
    type              go to state 86
    statassignment    go to state 87
    id                go to state 88


State 130

   36 printf: "printf" '(' "string literal" ')' .

    $default  reduce using rule 36 (printf)


State 131

   35 printf: "printf" '(' assignment ')' .

    $default  reduce using rule 35 (printf)


State 132

   32 whilestatement: "while" '(' assignment ')' . block

    "bool"        shift, and go to state 3
    "do"          shift, and go to state 68
    "float"       shift, and go to state 4
    "for"         shift, and go to state 69
    "if"          shift, and go to state 70
    "int"         shift, and go to state 5
    "printf"      shift, and go to state 71
    "return"      shift, and go to state 72
    "void"        shift, and go to state 6
    "while"       shift, and go to state 73
    "identifier"  shift, and go to state 11
    '{'           shift, and go to state 74

    functioncall      go to state 76
    block             go to state 139
    statement         go to state 78
    ifstatement       go to state 79
    forstatement      go to state 80
    dowhilestatement  go to state 81
    whilestatement    go to state 82
    returnstatement   go to state 83
    printf            go to state 84
    declassignment    go to state 85
    type              go to state 86
    statassignment    go to state 87
    id                go to state 88


State 133

   31 dowhilestatement: "do" block "while" '(' assignment . ')'

    ')'  shift, and go to state 140


State 134

   30 forstatement: "for" '(' declassignment ';' expr . ';' statassignment ')' block

    ';'  shift, and go to state 141


State 135

   29 forstatement: "for" '(' statassignment ';' expr . ';' statassignment ')' block

    ';'  shift, and go to state 142


State 136

   25 statblock: '{' . statementlist '}'

    $default  reduce using rule 12 (statementlist)

    statementlist  go to state 143


State 137

   26 statblock: statement .

    $default  reduce using rule 26 (statblock)


State 138

   27 ifstatement: "if" '(' assignment ')' statblock .
   28            | "if" '(' assignment ')' statblock . "else" statblock

    "else"  shift, and go to state 144

    $default  reduce using rule 27 (ifstatement)


State 139

   32 whilestatement: "while" '(' assignment ')' block .

    $default  reduce using rule 32 (whilestatement)


State 140

   31 dowhilestatement: "do" block "while" '(' assignment ')' .

    $default  reduce using rule 31 (dowhilestatement)


State 141

   30 forstatement: "for" '(' declassignment ';' expr ';' . statassignment ')' block

    "identifier"  shift, and go to state 11

    statassignment  go to state 145
    id              go to state 119


State 142

   29 forstatement: "for" '(' statassignment ';' expr ';' . statassignment ')' block

    "identifier"  shift, and go to state 11

    statassignment  go to state 146
    id              go to state 119


State 143

   13 statementlist: statementlist . block
   25 statblock: '{' statementlist . '}'

    "bool"        shift, and go to state 3
    "do"          shift, and go to state 68
    "float"       shift, and go to state 4
    "for"         shift, and go to state 69
    "if"          shift, and go to state 70
    "int"         shift, and go to state 5
    "printf"      shift, and go to state 71
    "return"      shift, and go to state 72
    "void"        shift, and go to state 6
    "while"       shift, and go to state 73
    "identifier"  shift, and go to state 11
    '{'           shift, and go to state 74
    '}'           shift, and go to state 147

    functioncall      go to state 76
    block             go to state 77
    statement         go to state 78
    ifstatement       go to state 79
    forstatement      go to state 80
    dowhilestatement  go to state 81
    whilestatement    go to state 82
    returnstatement   go to state 83
    printf            go to state 84
    declassignment    go to state 85
    type              go to state 86
    statassignment    go to state 87
    id                go to state 88


State 144

   28 ifstatement: "if" '(' assignment ')' statblock "else" . statblock

    "bool"        shift, and go to state 3
    "do"          shift, and go to state 68
    "float"       shift, and go to state 4
    "for"         shift, and go to state 69
    "if"          shift, and go to state 70
    "int"         shift, and go to state 5
    "printf"      shift, and go to state 71
    "return"      shift, and go to state 72
    "void"        shift, and go to state 6
    "while"       shift, and go to state 73
    "identifier"  shift, and go to state 11
    '{'           shift, and go to state 136

    functioncall      go to state 76
    statement         go to state 137
    statblock         go to state 148
    ifstatement       go to state 79
    forstatement      go to state 80
    dowhilestatement  go to state 81
    whilestatement    go to state 82
    returnstatement   go to state 83
    printf            go to state 84
    declassignment    go to state 85
    type              go to state 86
    statassignment    go to state 87
    id                go to state 88


State 145

   30 forstatement: "for" '(' declassignment ';' expr ';' statassignment . ')' block

    ')'  shift, and go to state 149


State 146

   29 forstatement: "for" '(' statassignment ';' expr ';' statassignment . ')' block

    ')'  shift, and go to state 150


State 147

   25 statblock: '{' statementlist '}' .

    $default  reduce using rule 25 (statblock)


State 148

   28 ifstatement: "if" '(' assignment ')' statblock "else" statblock .

    $default  reduce using rule 28 (ifstatement)


State 149

   30 forstatement: "for" '(' declassignment ';' expr ';' statassignment ')' . block

    "bool"        shift, and go to state 3
    "do"          shift, and go to state 68
    "float"       shift, and go to state 4
    "for"         shift, and go to state 69
    "if"          shift, and go to state 70
    "int"         shift, and go to state 5
    "printf"      shift, and go to state 71
    "return"      shift, and go to state 72
    "void"        shift, and go to state 6
    "while"       shift, and go to state 73
    "identifier"  shift, and go to state 11
    '{'           shift, and go to state 74

    functioncall      go to state 76
    block             go to state 151
    statement         go to state 78
    ifstatement       go to state 79
    forstatement      go to state 80
    dowhilestatement  go to state 81
    whilestatement    go to state 82
    returnstatement   go to state 83
    printf            go to state 84
    declassignment    go to state 85
    type              go to state 86
    statassignment    go to state 87
    id                go to state 88


State 150

   29 forstatement: "for" '(' statassignment ';' expr ';' statassignment ')' . block

    "bool"        shift, and go to state 3
    "do"          shift, and go to state 68
    "float"       shift, and go to state 4
    "for"         shift, and go to state 69
    "if"          shift, and go to state 70
    "int"         shift, and go to state 5
    "printf"      shift, and go to state 71
    "return"      shift, and go to state 72
    "void"        shift, and go to state 6
    "while"       shift, and go to state 73
    "identifier"  shift, and go to state 11
    '{'           shift, and go to state 74

    functioncall      go to state 76
    block             go to state 152
    statement         go to state 78
    ifstatement       go to state 79
    forstatement      go to state 80
    dowhilestatement  go to state 81
    whilestatement    go to state 82
    returnstatement   go to state 83
    printf            go to state 84
    declassignment    go to state 85
    type              go to state 86
    statassignment    go to state 87
    id                go to state 88


State 151

   30 forstatement: "for" '(' declassignment ';' expr ';' statassignment ')' block .

    $default  reduce using rule 30 (forstatement)


State 152

   29 forstatement: "for" '(' statassignment ';' expr ';' statassignment ')' block .

    $default  reduce using rule 29 (forstatement)
